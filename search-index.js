var searchIndex = JSON.parse('{\
"abstract_integers":{"doc":"This crate defines specification-friendly natural integers…","i":[[3,"BigUint","abstract_integers","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[0,"traits","","",null,null],[0,"bounds","abstract_integers::traits","",null,null],[8,"Bounded","abstract_integers::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[0,"cast","abstract_integers::traits","",null,null],[8,"ToPrimitive","abstract_integers::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",4,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",4,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",4,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",4,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",4,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",4,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",4,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",4,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",4,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",4,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",4,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",4,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",4,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",4,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",5,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",6,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",7,[[]]],[0,"float","abstract_integers::traits","",null,null],[8,"FloatCore","abstract_integers::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",8,[[]]],[10,"neg_infinity","","Returns negative infinity.",8,[[]]],[10,"nan","","Returns NaN.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",8,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",8,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",8,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[11,"trunc","","Return the integer part of a number.",8,[[]]],[11,"fract","","Returns the fractional part of a number.",8,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",8,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",8,[[]]],[11,"min","","Returns the minimum of the two numbers.",8,[[]]],[11,"max","","Returns the maximum of the two numbers.",8,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",8,[[]]],[11,"powi","","Raise a number to an integer power.",8,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",8,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns `-0.0`.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",9,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",9,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",9,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",9,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",9,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",9,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",9,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",9,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",9,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",9,[[]]],[10,"exp2","","Returns `2^(self)`.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",9,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",9,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",10,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",10,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",10,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",10,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",10,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",10,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",10,[[]]],[10,"LN_10","","Return `ln(10.0)`.",10,[[]]],[10,"LN_2","","Return `ln(2.0)`.",10,[[]]],[10,"LOG10_E","","Return `log10(e)`.",10,[[]]],[10,"LOG2_E","","Return `log2(e)`.",10,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",10,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",10,[[]]],[11,"TAU","","Return the full circle constant `τ`.",10,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",10,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",10,[[]]],[0,"identities","abstract_integers::traits","",null,null],[8,"Zero","abstract_integers::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","abstract_integers::traits","",null,null],[8,"PrimInt","abstract_integers::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","abstract_integers::traits","",null,null],[0,"checked","abstract_integers::traits::ops","",null,null],[8,"CheckedAdd","abstract_integers::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[0,"inv","abstract_integers::traits::ops","",null,null],[8,"Inv","abstract_integers::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","abstract_integers::traits::ops","",null,null],[8,"MulAdd","abstract_integers::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[0,"overflowing","abstract_integers::traits::ops","",null,null],[8,"OverflowingAdd","abstract_integers::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",23,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",24,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",25,[[]]],[0,"saturating","abstract_integers::traits::ops","",null,null],[8,"Saturating","abstract_integers::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[0,"wrapping","abstract_integers::traits::ops","",null,null],[8,"WrappingAdd","abstract_integers::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[0,"pow","abstract_integers::traits","",null,null],[8,"Pow","abstract_integers::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","abstract_integers::traits","",null,null],[8,"Real","abstract_integers::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",37,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",37,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",37,[[]]],[10,"trunc","","Return the integer part of a number.",37,[[]]],[10,"fract","","Returns the fractional part of a number.",37,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",37,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",37,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",37,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",37,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",37,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",37,[[]]],[10,"powi","","Raise a number to an integer power.",37,[[]]],[10,"powf","","Raise a number to a real number power.",37,[[]]],[10,"sqrt","","Take the square root of a number.",37,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",37,[[]]],[10,"exp2","","Returns `2^(self)`.",37,[[]]],[10,"ln","","Returns the natural logarithm of the number.",37,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",37,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",37,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",37,[[]]],[10,"to_degrees","","Converts radians to degrees.",37,[[]]],[10,"to_radians","","Converts degrees to radians.",37,[[]]],[10,"max","","Returns the maximum of the two numbers.",37,[[]]],[10,"min","","Returns the minimum of the two numbers.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"cbrt","","Take the cubic root of a number.",37,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",37,[[]]],[10,"sin","","Computes the sine of a number (in radians).",37,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",37,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",37,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",37,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",37,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",37,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",37,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",37,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",37,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",37,[[]]],[10,"sinh","","Hyperbolic sine function.",37,[[]]],[10,"cosh","","Hyperbolic cosine function.",37,[[]]],[10,"tanh","","Hyperbolic tangent function.",37,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",37,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",37,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",37,[[]]],[0,"sign","abstract_integers::traits","",null,null],[8,"Signed","abstract_integers::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","abstract_integers::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",40,null],[13,"Invalid","","",40,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",41,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns `-0.0`.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",9,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",9,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",9,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",9,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",9,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",9,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",9,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",9,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",9,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",9,[[]]],[10,"exp2","","Returns `2^(self)`.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",9,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",9,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",10,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",10,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",10,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",10,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",10,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",10,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",10,[[]]],[10,"LN_10","","Return `ln(10.0)`.",10,[[]]],[10,"LN_2","","Return `ln(2.0)`.",10,[[]]],[10,"LOG10_E","","Return `log10(e)`.",10,[[]]],[10,"LOG2_E","","Return `log2(e)`.",10,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",10,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",10,[[]]],[11,"TAU","","Return the full circle constant `τ`.",10,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",10,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",10,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",7,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",5,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",6,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",4,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",4,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",4,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",4,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",4,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",4,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",4,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",4,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",4,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",4,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",4,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",4,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",4,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",4,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","abstract_integers","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",42,null],[10,"add","","Performs the `+` operation.",42,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",43,null],[10,"div","","Performs the `/` operation.",43,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",44,null],[10,"mul","","Performs the `*` operation.",44,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",45,null],[10,"neg","","Performs the unary `-` operation.",45,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",46,null],[10,"rem","","Performs the `%` operation.",46,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",47,null],[10,"sub","","Performs the `-` operation.",47,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",48,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",49,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",50,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",51,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",52,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",53,null],[10,"bitand","","Performs the `&` operation.",53,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",54,null],[10,"bitor","","Performs the `|` operation.",54,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",55,null],[10,"bitxor","","Performs the `^` operation.",55,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",56,null],[10,"not","","Performs the unary `!` operation.",56,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",57,null],[10,"shl","","Performs the `<<` operation.",57,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",58,null],[10,"shr","","Performs the `>>` operation.",58,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",59,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",60,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",61,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",62,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",63,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",64,null],[10,"deref","","Dereferences the value.",64,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",65,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",66,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",67,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",68,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",69,null],[10,"call_once","","Performs the call operation.",69,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",70,null],[10,"index","","Performs the indexing (`container[index]`) operation.",70,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",71,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",72,null],[12,"end","","The upper bound of the range (exclusive).",72,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",74,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",75,null],[13,"Excluded","","An exclusive bound.",75,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",75,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",76,[[],["bound",4]]],[10,"end_bound","","End index bound.",76,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",76,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",77,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",78,null],[16,"Error","","The type of this value when viewed as failed.",78,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",78,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",78,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",78,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",79,null],[16,"Return","","The type of value this generator returns.",79,null],[10,"resume","","Resumes the execution of this generator.",79,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",80,null],[13,"Complete","","The generator completed with a return value.",80,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",81,null],[13,"Equal","","An ordering where a compared value is equal to another.",81,null],[13,"Greater","","An ordering where a compared value is greater than another.",81,null],[0,"abstract_int","","",null,null],[0,"nat_mod","","",null,null],[14,"abstract_int","","",null,null],[14,"abstract_public","","",null,null],[14,"abstract_unsigned","","",null,null],[14,"abstract_signed","","",null,null],[14,"abstract_unsigned_public_integer","","",null,null],[14,"abstract_signed_public_integer","","",null,null],[14,"abstract_secret","","",null,null],[14,"abstract_unsigned_secret_integer","","",null,null],[14,"abstract_signed_secret_integer","","",null,null],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"modular_integer","","",null,null],[14,"abstract_secret_modular_integer","","",null,null],[14,"abstract_public_modular_integer","","",null,null],[14,"abstract_nat_mod","","",null,null],[14,"abstract_public_nat_mod","","",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",82,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",83,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",83,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","abstract_integers::traits","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","abstract_integers","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"description","","",84,[[]]],[11,"clone","","",74,[[],["rangeto",3]]],[11,"clone","","",86,[[],["rangeinclusive",3]]],[11,"clone","","",81,[[],["ordering",4]]],[11,"clone","","",80,[[],["generatorstate",4]]],[11,"clone","","",85,[[],["rangefull",3]]],[11,"clone","","",72,[[],["range",3]]],[11,"clone","","",84,[[],["parseinterror",3]]],[11,"clone","","",75,[[],["bound",4]]],[11,"clone","","",73,[[],["rangefrom",3]]],[11,"clone","","",77,[[],["rangetoinclusive",3]]],[11,"hash","","",86,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",75,[[]]],[11,"next_back","","",72,[[],["option",4]]],[11,"nth_back","","",72,[[],["option",4]]],[11,"next_back","","",86,[[],["option",4]]],[11,"nth_back","","",86,[[],["option",4]]],[11,"try_rfold","","",86,[[]]],[11,"next","","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"nth","","",86,[[],["option",4]]],[11,"try_fold","","",86,[[]]],[11,"last","","",86,[[],["option",4]]],[11,"min","","",86,[[],["option",4]]],[11,"max","","",86,[[],["option",4]]],[11,"next","","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"nth","","",72,[[],["option",4]]],[11,"last","","",72,[[],["option",4]]],[11,"min","","",72,[[],["option",4]]],[11,"max","","",72,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"nth","","",73,[[],["option",4]]],[11,"eq","","",81,[[["ordering",4]]]],[11,"eq","","",77,[[["rangetoinclusive",3]]]],[11,"ne","","",77,[[["rangetoinclusive",3]]]],[11,"eq","","",86,[[["rangeinclusive",3]]]],[11,"ne","","",86,[[["rangeinclusive",3]]]],[11,"eq","","",72,[[["range",3]]]],[11,"ne","","",72,[[["range",3]]]],[11,"eq","","",75,[[["bound",4]]]],[11,"ne","","",75,[[["bound",4]]]],[11,"eq","","",74,[[["rangeto",3]]]],[11,"ne","","",74,[[["rangeto",3]]]],[11,"eq","","",85,[[["rangefull",3]]]],[11,"eq","","",80,[[["generatorstate",4]]]],[11,"ne","","",80,[[["generatorstate",4]]]],[11,"eq","","",73,[[["rangefrom",3]]]],[11,"ne","","",73,[[["rangefrom",3]]]],[11,"eq","","",84,[[["parseinterror",3]]]],[11,"ne","","",84,[[["parseinterror",3]]]],[11,"cmp","","",80,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","","",81,[[["ordering",4]],["ordering",4]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",80,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",77,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"start_bound","","",77,[[],["bound",4]]],[11,"end_bound","","",77,[[],["bound",4]]],[11,"start_bound","","",72,[[],["bound",4]]],[11,"end_bound","","",72,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",86,[[],["bound",4]]],[11,"end_bound","","",86,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"start_bound","","",77,[[],["bound",4]]],[11,"end_bound","","",77,[[],["bound",4]]],[11,"start_bound","","",85,[[],["bound",4]]],[11,"end_bound","","",85,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"start_bound","","",86,[[],["bound",4]]],[11,"end_bound","","",86,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",72,[[],["bound",4]]],[11,"end_bound","","",72,[[],["bound",4]]],[11,"partial_cmp","","",80,[[["generatorstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",80,[[["generatorstate",4]]]],[11,"le","","",80,[[["generatorstate",4]]]],[11,"gt","","",80,[[["generatorstate",4]]]],[11,"ge","","",80,[[["generatorstate",4]]]],[11,"partial_cmp","","",81,[[["ordering",4]],[["option",4],["ordering",4]]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",85,[[],["option",4]]],[11,"get_mut","","",85,[[],["option",4]]],[11,"get_unchecked","","",85,[[]]],[11,"get_unchecked_mut","","",85,[[]]],[11,"index","","",85,[[]]],[11,"index_mut","","",85,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",86,[[],["option",4]]],[11,"get_mut","","",86,[[],["option",4]]],[11,"get_unchecked","","",86,[[]]],[11,"get_unchecked_mut","","",86,[[]]],[11,"index","","",86,[[]]],[11,"index_mut","","",86,[[]]],[11,"get","","",72,[[],["option",4]]],[11,"get_mut","","",72,[[],["option",4]]],[11,"get_unchecked","","",72,[[]]],[11,"get_unchecked_mut","","",72,[[]]],[11,"index","","",72,[[]]],[11,"index_mut","","",72,[[]]],[11,"get","","",77,[[],["option",4]]],[11,"get_mut","","",77,[[],["option",4]]],[11,"get_unchecked","","",77,[[]]],[11,"get_unchecked_mut","","",77,[[]]],[11,"index","","",77,[[]]],[11,"index_mut","","",77,[[]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",77,[[],["option",4]]],[11,"get_mut","","",77,[[],["option",4]]],[11,"get_unchecked","","",77,[[]]],[11,"get_unchecked_mut","","",77,[[]]],[11,"index","","",77,[[]]],[11,"index_mut","","",77,[[]]],[11,"get","","",86,[[],["option",4]]],[11,"get_mut","","",86,[[],["option",4]]],[11,"get_unchecked","","",86,[[]]],[11,"get_unchecked_mut","","",86,[[]]],[11,"index","","",86,[[]]],[11,"index_mut","","",86,[[]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",72,[[],["option",4]]],[11,"get_mut","","",72,[[],["option",4]]],[11,"get_unchecked","","",72,[[]]],[11,"get_unchecked_mut","","",72,[[]]],[11,"index","","",72,[[]]],[11,"index_mut","","",72,[[]]],[11,"get","","",85,[[],["option",4]]],[11,"get_mut","","",85,[[],["option",4]]],[11,"get_unchecked","","",85,[[]]],[11,"get_unchecked_mut","","",85,[[]]],[11,"index","","",85,[[]]],[11,"index_mut","","",85,[[]]],[11,"bitxor","","",82,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",83,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",82,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",83,[[["bigint",3]],["bigint",3]]],[11,"hash","","",0,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"neg","","",83,[[],["bigint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"bitand_assign","","",82,[[["biguint",3]]]],[11,"bitand_assign","","",82,[[["biguint",3]]]],[11,"bitand_assign","","",83,[[["bigint",3]]]],[11,"bitand_assign","","",83,[[["bigint",3]]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[["biguint",3]],["biguint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[["biguint",3]],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[["bigint",3]],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[],["bigint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",82,[[],["biguint",3]]],[11,"add","","",83,[[["bigint",3]],["bigint",3]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",83,[[],["bigint",3]]],[11,"shl","","",82,[[],["biguint",3]]],[11,"default","","",82,[[],["biguint",3]]],[11,"default","","",83,[[],["bigint",3]]],[11,"bitand","","",83,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",82,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",83,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",82,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"from_i64","","",83,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",83,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",83,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",83,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",83,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",82,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",82,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",82,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",82,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",82,[[],[["biguint",3],["option",4]]]],[11,"clone","","",83,[[],["bigint",3]]],[11,"clone_from","","",83,[[["bigint",3]]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",82,[[],["biguint",3]]],[11,"clone_from","","",82,[[["biguint",3]]]],[11,"to_biguint","","",82,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",83,[[],[["biguint",3],["option",4]]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[["bigint",3]]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[["biguint",3]]]],[11,"rem_assign","","",83,[[["bigint",3]]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[["biguint",3]]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"from","","",83,[[["biguint",3]],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",83,[[],["bigint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"from","","",82,[[],["biguint",3]]],[11,"eq","","",83,[[["bigint",3]]]],[11,"eq","","",82,[[["biguint",3]]]],[11,"eq","","",0,[[["sign",4]]]],[11,"nth_root","","",83,[[],["bigint",3]]],[11,"sqrt","","",83,[[],["bigint",3]]],[11,"cbrt","","",83,[[],["bigint",3]]],[11,"nth_root","","",82,[[],["biguint",3]]],[11,"sqrt","","",82,[[],["biguint",3]]],[11,"cbrt","","",82,[[],["biguint",3]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[["bigint",3]]]],[11,"mul_assign","","",82,[[["biguint",3]]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[["bigint",3]]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[["biguint",3]]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",82,[[],["biguint",3]]],[11,"shr","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",82,[[["biguint",3]],["biguint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[["bigint",3]],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",82,[[["biguint",3]],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",83,[[["bigint",3]],["bigint",3]]],[11,"mul","","",83,[[],["bigint",3]]],[11,"mul","","",82,[[],["biguint",3]]],[11,"cmp","","",83,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",82,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"abs","","",83,[[],["bigint",3]]],[11,"abs_sub","","",83,[[["bigint",3]],["bigint",3]]],[11,"signum","","",83,[[],["bigint",3]]],[11,"is_positive","","",83,[[]]],[11,"is_negative","","",83,[[]]],[11,"sum","","",82,[[],["biguint",3]]],[11,"sum","","",83,[[],["bigint",3]]],[11,"product","","",83,[[],["bigint",3]]],[11,"product","","",82,[[],["biguint",3]]],[11,"div_rem","","",82,[[["biguint",3]]]],[11,"div_floor","","",82,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",82,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",82,[[["biguint",3]]]],[11,"div_ceil","","",82,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",82,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",82,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",82,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",82,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",82,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",82,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",82,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",82,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",82,[[["biguint",3]],["biguint",3]]],[11,"div_rem","","",83,[[["bigint",3]]]],[11,"div_floor","","",83,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",83,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",83,[[["bigint",3]]]],[11,"div_ceil","","",83,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",83,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",83,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",83,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",83,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",83,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",83,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",83,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",83,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",83,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",83,[[["bigint",3]],["bigint",3]]],[11,"checked_div","","",82,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"not","","",83,[[],["bigint",3]]],[11,"checked_mul","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",82,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"bitxor_assign","","",83,[[["bigint",3]]]],[11,"bitxor_assign","","",83,[[["bigint",3]]]],[11,"bitxor_assign","","",82,[[["biguint",3]]]],[11,"bitxor_assign","","",82,[[["biguint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",82,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",83,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"div","","",82,[[["biguint",3]],["biguint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[["biguint",3]],["biguint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[["bigint",3]],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[["bigint",3]],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",82,[[],["biguint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"div","","",83,[[],["bigint",3]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[["bigint",3]],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[["bigint",3]],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",82,[[["biguint",3]],["biguint",3]]],[11,"rem","","",82,[[["biguint",3]],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",83,[[],["bigint",3]]],[11,"rem","","",82,[[],["biguint",3]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",82,[[["bigint",3]],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"try_from","","",82,[[["bigint",3]],[["biguint",3],["result",4],["tryfrombiginterror",3]]]],[11,"from_str","","",83,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"from_str","","",82,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"to_i64","","",83,[[],["option",4]]],[11,"to_i128","","",83,[[],["option",4]]],[11,"to_u64","","",83,[[],["option",4]]],[11,"to_u128","","",83,[[],["option",4]]],[11,"to_f32","","",83,[[],["option",4]]],[11,"to_f64","","",83,[[],["option",4]]],[11,"to_i64","","",82,[[],["option",4]]],[11,"to_i128","","",82,[[],["option",4]]],[11,"to_u64","","",82,[[],["option",4]]],[11,"to_u128","","",82,[[],["option",4]]],[11,"to_f32","","",82,[[],["option",4]]],[11,"to_f64","","",82,[[],["option",4]]],[11,"div_assign","","",82,[[["biguint",3]]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[["bigint",3]]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[["bigint",3]]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[["biguint",3]]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"one","","",83,[[],["bigint",3]]],[11,"set_one","","",83,[[]]],[11,"is_one","","",83,[[]]],[11,"one","","",82,[[],["biguint",3]]],[11,"set_one","","",82,[[]]],[11,"is_one","","",82,[[]]],[11,"zero","","",82,[[],["biguint",3]]],[11,"set_zero","","",82,[[]]],[11,"is_zero","","",82,[[]]],[11,"zero","","",83,[[],["bigint",3]]],[11,"set_zero","","",83,[[]]],[11,"is_zero","","",83,[[]]],[11,"checked_add","","",82,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_add","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[["biguint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[["bigint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[["bigint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[["biguint",3]]]],[11,"add_assign","","",82,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[["bigint",3]]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[["bigint",3]]]],[11,"sub_assign","","",82,[[["biguint",3]]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[["biguint",3]]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"bitor_assign","","",82,[[["biguint",3]]]],[11,"bitor_assign","","",82,[[["biguint",3]]]],[11,"bitor_assign","","",83,[[["bigint",3]]]],[11,"bitor_assign","","",83,[[["bigint",3]]]],[11,"bitor","","",82,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",82,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",83,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",83,[[["bigint",3]],["bigint",3]]],[11,"checked_sub","","",82,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",83,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",82,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",83,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",82,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",82,[[["biguint",3]],["biguint",3]]],[11,"sub","","",82,[[["biguint",3]],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[["bigint",3]],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[],["bigint",3]]],[11,"sub","","",82,[[],["biguint",3]]],[11,"sub","","",83,[[["bigint",3]],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[["biguint",3]],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",83,[[["biguint",3]],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[["biguint",3]],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[["biguint",3]],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"pow","","",83,[[],["bigint",3]]],[11,"pow","","",82,[[],["biguint",3]]],[11,"fmt","abstract_integers::traits","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"new","abstract_integers","Creates and initializes a `BigUint`.",82,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",82,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",82,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",82,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",82,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",82,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",82,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",82,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",82,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",82,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",82,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",82,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",82,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",82,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",82,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",82,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",82,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",82,[[]]],[11,"pow","","Returns `self ^ exponent`.",82,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",82,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",82,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",82,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",82,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",82,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",82,[[]]],[11,"count_ones","","Returns the number of one bits.",82,[[]]],[11,"bit","","Returns whether the bit in the given position is set",82,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",82,[[]]],[11,"new","","Creates and initializes a BigInt.",83,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",83,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",83,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",83,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",83,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",83,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",83,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",83,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",83,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",83,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",83,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",83,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",83,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",83,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",83,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",83,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",83,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",83,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",83,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",83,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",83,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",83,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",83,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",83,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",83,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",83,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",83,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",83,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",83,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",83,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",83,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",83,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",83,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",83,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",83,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",83,[[]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",84,[[],["interrorkind",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",72,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",72,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",73,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",74,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",75,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",86,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",86,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",86,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",86,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",86,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",86,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[11,"reverse","","Reverses the `Ordering`.",81,[[],["ordering",4]]],[11,"then","","Chains two orderings.",81,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",81,[[],["ordering",4]]]],"p":[[4,"Sign"],[8,"CheckedSub"],[8,"Zero"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[4,"Ordering"],[3,"BigUint"],[3,"BigInt"],[3,"ParseIntError"],[3,"RangeFull"],[3,"RangeInclusive"]]},\
"aead":{"doc":"[Authenticated Encryption with Associated Data] (AEAD)…","i":[[0,"consts","aead","Type aliases for many constants.",null,null],[6,"True","aead::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[3,"B0","","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[3,"Error","aead","Error type.",null,null],[3,"Payload","","AEAD payloads are a combination of a message (plaintext or…",null,null],[12,"msg","","Message to be encrypted/decrypted",0,null],[12,"aad","","Optional \\\"additional associated data\\\" to authenticate…",0,null],[6,"Key","","Key for a [`NewAead`] algorithm",null,null],[6,"Nonce","","Nonce: single-use value for ensuring ciphertexts are unique",null,null],[6,"Tag","","Tag: authentication code which ensures ciphertexts are…",null,null],[8,"NewAead","","Instantiate either a stateless [`Aead`] or stateful…",null,null],[16,"KeySize","","The size of the key array required by this algorithm.",1,null],[10,"new","","Create a new AEAD instance with the given key.",1,[[["key",6]]]],[11,"new_varkey","","Create new AEAD instance from key with variable size.",1,[[],[["result",4],["error",3]]]],[8,"Aead","","Authenticated Encryption with Associated Data (AEAD)…",null,null],[16,"NonceSize","","The length of a nonce.",2,null],[16,"TagSize","","The maximum length of the nonce.",2,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",2,null],[10,"encrypt","","Encrypt the given plaintext payload, and return the…",2,[[["nonce",6]],[["error",3],["result",4],["vec",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",2,[[["nonce",6]],[["error",3],["result",4],["vec",3]]]],[8,"AeadMut","","Stateful Authenticated Encryption with Associated Data…",null,null],[16,"NonceSize","","The length of a nonce.",3,null],[16,"TagSize","","The maximum length of the nonce.",3,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",3,null],[10,"encrypt","","Encrypt the given plaintext slice, and return the…",3,[[["nonce",6]],[["error",3],["result",4],["vec",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",3,[[["nonce",6]],[["error",3],["result",4],["vec",3]]]],[8,"AeadInPlace","","In-place stateless AEAD trait.",null,null],[16,"NonceSize","","The length of a nonce.",4,null],[16,"TagSize","","The maximum length of the nonce.",4,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",4,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",4,[[["nonce",6],["buffer",8]],[["result",4],["error",3]]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",4,[[["nonce",6]],[["tag",6],["result",4],["error",3]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",4,[[["nonce",6],["buffer",8]],[["result",4],["error",3]]]],[10,"decrypt_in_place_detached","","Decrypt the message in-place, returning an error in the…",4,[[["tag",6],["nonce",6]],[["result",4],["error",3]]]],[8,"AeadMutInPlace","","In-place stateful AEAD trait.",null,null],[16,"NonceSize","","The length of a nonce.",5,null],[16,"TagSize","","The maximum length of the nonce.",5,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",5,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",5,[[["nonce",6]],[["result",4],["error",3]]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",5,[[["nonce",6]],[["result",4],["tag",6],["error",3]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",5,[[["nonce",6]],[["result",4],["error",3]]]],[10,"decrypt_in_place_detached","","Decrypt the data in-place, returning an error in the event…",5,[[["nonce",6],["tag",6]],[["result",4],["error",3]]]],[8,"Buffer","","In-place encryption/decryption byte buffers.",null,null],[11,"len","","Get the length of the buffer",6,[[]]],[11,"is_empty","","Is the buffer empty?",6,[[]]],[10,"extend_from_slice","","Extend this buffer from the given slice",6,[[],[["result",4],["error",3]]]],[10,"truncate","","Truncate this buffer to the given size",6,[[]]],[11,"from","aead::consts","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"is_equal","","",7,[[]]],[11,"is_greater","","",7,[[]]],[11,"is_greater_or_equal","","",7,[[]]],[11,"is_less","","",7,[[]]],[11,"is_less_or_equal","","",7,[[]]],[11,"is_not_equal","","",7,[[]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"is_equal","","",8,[[]]],[11,"is_greater","","",8,[[]]],[11,"is_greater_or_equal","","",8,[[]]],[11,"is_less","","",8,[[]]],[11,"is_less_or_equal","","",8,[[]]],[11,"is_not_equal","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"powi","","",9,[[]]],[11,"partial_div","","",9,[[]]],[11,"is_equal","","",9,[[]]],[11,"is_greater","","",9,[[]]],[11,"is_greater_or_equal","","",9,[[]]],[11,"is_less","","",9,[[]]],[11,"is_less_or_equal","","",9,[[]]],[11,"is_not_equal","","",9,[[]]],[11,"from","aead","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"hash","aead::consts","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",8,[[]]],[11,"neg","","",9,[[]]],[11,"min","","",9,[[["nint",3]]]],[11,"min","","",8,[[["b1",3]],["b1",3]]],[11,"min","","",8,[[["b0",3]],["b0",3]]],[11,"min","","",9,[[["z0",3]]]],[11,"min","","",9,[[["pint",3]]]],[11,"min","","",7,[[["b1",3]],["b0",3]]],[11,"min","","",7,[[["b0",3]],["b0",3]]],[11,"compare","","",9,[[["z0",3]]]],[11,"compare","","",7,[[["b0",3]]]],[11,"compare","","",7,[[["b1",3]]]],[11,"compare","","",9,[[["pint",3]]]],[11,"compare","","",9,[[["nint",3]]]],[11,"compare","","",8,[[["b1",3]]]],[11,"compare","","",8,[[["b0",3]]]],[11,"powi","","",9,[[["z0",3]]]],[11,"powi","","",9,[[["nint",3]]]],[11,"powi","","",9,[[["pint",3]]]],[11,"add","","",9,[[]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",9,[[],["z0",3]]],[11,"default","","",7,[[],["b0",3]]],[11,"default","","",8,[[],["b1",3]]],[11,"to_i8","","",9,[[]]],[11,"to_i16","","",9,[[]]],[11,"to_i32","","",9,[[]]],[11,"to_i64","","",9,[[]]],[11,"to_isize","","",9,[[]]],[11,"bitand","","",8,[[["b0",3]]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[["b1",3]]]],[11,"clone","","",7,[[],["b0",3]]],[11,"clone","","",9,[[],["z0",3]]],[11,"clone","","",8,[[],["b1",3]]],[11,"eq","","",7,[[["b0",3]]]],[11,"eq","","",9,[[["z0",3]]]],[11,"eq","","",8,[[["b1",3]]]],[11,"mul","","",9,[[["aterm",3]]]],[11,"mul","","",9,[[["tarr",3]]]],[11,"mul","","",9,[[]]],[11,"cmp","","",9,[[["z0",3]],["ordering",4]]],[11,"cmp","","",7,[[["b0",3]],["ordering",4]]],[11,"cmp","","",8,[[["b1",3]],["ordering",4]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"div","","",9,[[]]],[11,"rem","","",9,[[]]],[11,"to_int","","",9,[[]]],[11,"to_int","","",9,[[]]],[11,"to_int","","",9,[[]]],[11,"to_int","","",9,[[]]],[11,"max","","",9,[[["pint",3]]]],[11,"max","","",9,[[["z0",3]]]],[11,"max","","",7,[[["b0",3]],["b0",3]]],[11,"max","","",9,[[["nint",3]]]],[11,"max","","",8,[[["b0",3]],["b1",3]]],[11,"max","","",7,[[["b1",3]],["b1",3]]],[11,"max","","",8,[[["b1",3]],["b1",3]]],[11,"new","","",8,[[],["b1",3]]],[11,"to_u8","","",8,[[]]],[11,"to_bool","","",8,[[]]],[11,"new","","",7,[[],["b0",3]]],[11,"to_u8","","",7,[[]]],[11,"to_bool","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitor","","",7,[[["b0",3]]]],[11,"bitor","","",7,[[["b1",3]]]],[11,"partial_cmp","","",7,[[["b0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["z0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",8,[[["b1",3]],[["option",4],["ordering",4]]]],[11,"sub","","",9,[[["pint",3]]]],[11,"sub","","",9,[[["nint",3]]]],[11,"sub","","",9,[[["z0",3]]]],[11,"bitxor","","",8,[[["b1",3]]]],[11,"bitxor","","",8,[[["b0",3]]]],[11,"bitxor","","",7,[[["b0",3]]]],[11,"bitxor","","",7,[[["b1",3]]]],[11,"from","aead","",0,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"eq","","",10,[[["error",3]]]],[11,"cmp","","",10,[[["error",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["error",3]],[["option",4],["ordering",4]]]],[11,"hash","","",10,[[]]],[11,"clone","","",10,[[],["error",3]]],[11,"new","aead::consts","Instantiates a singleton representing this bit.",7,[[],["b0",3]]],[11,"new","","Instantiates a singleton representing this bit.",8,[[],["b1",3]]],[11,"new","","Instantiates a singleton representing the integer 0.",9,[[],["z0",3]]]],"p":[[3,"Payload"],[8,"NewAead"],[8,"Aead"],[8,"AeadMut"],[8,"AeadInPlace"],[8,"AeadMutInPlace"],[8,"Buffer"],[3,"B0"],[3,"B1"],[3,"Z0"],[3,"Error"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",0,null],[12,"background","","The style\'s background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings",6]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings",6]]],[5,"sub_string","","Return a substring of the given ANSIStrings sequence,…",null,[[["ansistrings",6]],[["ansistring",6],["vec",3]]]],[5,"unstyle","","Return a concatenated copy of `strs` without the…",null,[[["ansistrings",6]],["string",3]]],[5,"unstyled_len","","Return the unstyled length of ANSIStrings. This is…",null,[[["ansistrings",6]]]],[11,"prefix","","The prefix bytes for this style. These are the bytes that…",0,[[],["prefix",3]]],[11,"infix","","The infix bytes between this style and `next` style. These…",0,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style. These are the bytes that tell…",0,[[],["suffix",3]]],[11,"prefix","","The prefix bytes for this colour as a `Style`. These are…",2,[[],["prefix",3]]],[11,"infix","","The infix bytes between this colour and `next` colour.…",2,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour as a `Style`. These are the…",2,[[],["suffix",3]]],[11,"new","","Creates a new Style with no properties set.",0,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set. # Examples",0,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",0,[[],["style",3]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour",4]],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[]]],[11,"normal","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"bold","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"italic","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"underline","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"blink","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"on","","Returns a `Style` with the foreground colour set to this…",2,[[["colour",4]],["style",3]]],[11,"style_ref","","Directly access the style",3,[[],["style",3]]],[11,"style_ref_mut","","Directly access the style mutably",3,[[],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[],["result",6]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour",4]],["style",3]]],[11,"from","","",3,[[],["ansigenericstring",3]]],[11,"clone","","",4,[[],["prefix",3]]],[11,"clone","","",5,[[],["infix",3]]],[11,"clone","","",6,[[],["suffix",3]]],[11,"clone","","",0,[[],["style",3]]],[11,"clone","","",2,[[],["colour",4]]],[11,"clone","","",3,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style",3]]],[11,"eq","","",0,[[["style",3]]]],[11,"ne","","",0,[[["style",3]]]],[11,"eq","","",2,[[["colour",4]]]],[11,"ne","","",2,[[["colour",4]]]],[11,"eq","","",3,[[["ansigenericstring",3]]]],[11,"ne","","",3,[[["ansigenericstring",3]]]],[11,"eq","","",1,[[["ansigenericstrings",3]]]],[11,"ne","","",1,[[["ansigenericstrings",3]]]],[11,"deref","","",3,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[],["result",6]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"generic_array":{"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[],["mappedsequence",6]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[],["mappedsequence",6]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray",3]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray",3]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray",3]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[],["option",4]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","generic_array::iter","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"map","generic_array","",10,[[],["mappedsequence",6]]],[11,"zip","","",10,[[],["mappedsequence",6]]],[11,"fold","","",10,[[]]],[11,"generate","","",10,[[],["genericarray",3]]],[11,"append","","",10,[[]]],[11,"prepend","","",10,[[]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","generic_array::iter","",3,[[["formatter",3]],["result",6]]],[11,"eq","generic_array","",10,[[]]],[11,"cmp","","",10,[[["genericarray",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["genericarray",3]],[["option",4],["ordering",4]]]],[11,"drop","generic_array::iter","",3,[[]]],[11,"hash","generic_array","",10,[[]]],[11,"next","generic_array::iter","",3,[[],["option",4]]],[11,"fold","","",3,[[]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"nth","","",3,[[],["option",4]]],[11,"last","","",3,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"rfold","","",3,[[]]],[11,"from_iter","generic_array","",10,[[],["genericarray",3]]],[11,"into_iter","","",10,[[]]],[11,"len","generic_array::iter","",3,[[]]],[11,"as_ref","generic_array","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"clone","","",10,[[],["genericarray",3]]],[11,"clone","generic_array::iter","",3,[[]]],[11,"default","generic_array","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]},\
"getrandom":{"doc":"Interface to the operating system\'s random number generator.","i":[[3,"Error","getrandom","A small and `no_std` compatible error type",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system\'s preferred…",null,[[],[["result",4],["error",3]]]],[18,"UNSUPPORTED","","This target/platform is not supported by `getrandom`.",0,null],[18,"ERRNO_NOT_POSITIVE","","The platform-specific `errno` returned a non-positive value.",0,null],[18,"IOS_SEC_RANDOM","","Call to iOS `SecRandomCopyBytes` failed.",0,null],[18,"WINDOWS_RTL_GEN_RANDOM","","Call to Windows `RtlGenRandom` failed.",0,null],[18,"FAILED_RDRAND","","RDRAND instruction failed due to a hardware issue.",0,null],[18,"NO_RDRAND","","RDRAND instruction unsupported on this target.",0,null],[18,"WEB_CRYPTO","","The browser does not have support for `self.crypto`.",0,null],[18,"WEB_GET_RANDOM_VALUES","","The browser does not have support for…",0,null],[18,"VXWORKS_RAND_SECURE","","On VxWorks, call to `randSecure` failed (random number…",0,null],[18,"NODE_CRYPTO","","NodeJS does not have support for the `crypto` module.",0,null],[18,"NODE_RANDOM_FILL_SYNC","","NodeJS does not have support for `crypto.randomFillSync`.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]]],"p":[[3,"Error"]]},\
"hacspec_attributes":{"doc":"","i":[[23,"in_hacspec","hacspec_attributes","This function is within the hacspec subset of Rust: its…",null,null],[23,"unsafe_hacspec","","This function can be called from hacspec programs but its…",null,null],[23,"not_hacspec","","Function that is not part of the language but is offered…",null,null]],"p":[]},\
"hacspec_bls12_381":{"doc":"","i":[[3,"FpCanvas","hacspec_bls12_381","",null,null],[3,"Fp","","",null,null],[3,"SerializedFp","","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"ArrayFp","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[5,"fp12fromfp6","","",null,[[["fp6",6]],["fp12",6]]],[5,"fp12neg","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12add","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12sub","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12mul","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12inv","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12exp","","",null,[[["fp12",6],["scalar",3]],["fp12",6]]],[5,"fp12conjugate","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12zero","","",null,[[],["fp12",6]]],[5,"g1add","","",null,[[["g1",6]],["g1",6]]],[5,"g1double","","",null,[[["g1",6]],["g1",6]]],[5,"g1mul","","",null,[[["g1",6],["scalar",3]],["g1",6]]],[5,"g1neg","","",null,[[["g1",6]],["g1",6]]],[5,"g2add","","",null,[[["g2",6]],["g2",6]]],[5,"g2double","","",null,[[["g2",6]],["g2",6]]],[5,"g2mul","","",null,[[["g2",6],["scalar",3]],["g2",6]]],[5,"g2neg","","",null,[[["g2",6]],["g2",6]]],[5,"pairing","","",null,[[["g1",6],["g2",6]],["fp12",6]]],[6,"G1","","",null,null],[6,"Fp2","","",null,null],[6,"G2","","",null,null],[6,"Fp6","","",null,null],[6,"Fp12","","",null,null],[11,"max_value","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fpcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"from_canvas","","",3,[[["fpcanvas",3]],["fp",3]]],[11,"into_canvas","","",3,[[],["fpcanvas",3]]],[11,"max","","",3,[[],["fpcanvas",3]]],[11,"declassify","","",3,[[],["bigint",3]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[],["vec",3]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"comp_eq","","",3,[[]]],[11,"comp_ne","","",3,[[]]],[11,"comp_gte","","",3,[[]]],[11,"comp_gt","","",3,[[]]],[11,"comp_lte","","",3,[[]]],[11,"comp_lt","","",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["fp",3]]],[11,"from_byte_seq_be","","",3,[[["seqtrait",8],["u8",3]],["fp",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["fp",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",3,[[],["seq",3]]],[11,"from_byte_seq_le","","",3,[[["seqtrait",8],["u8",3]],["fp",3]]],[11,"from_public_byte_seq_le","","",3,[[["seqtrait",8]],["fp",3]]],[11,"to_byte_seq_le","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",3,[[],["seq",3]]],[11,"from_secret_literal","","",3,[[["u128",3]],["fp",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["serializedfp",3]]],[11,"from_seq","","",0,[[],["serializedfp",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["serializedfp",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["serializedfp",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["serializedfp",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u64",3]],["arrayfp",3]]],[11,"from_seq","","",1,[[],["arrayfp",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["arrayfp",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["arrayfp",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["arrayfp",3]]],[11,"max_value","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"from_canvas","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",5,[[],["scalarcanvas",3]]],[11,"max","","",5,[[],["scalarcanvas",3]]],[11,"declassify","","",5,[[],["bigint",3]]],[11,"from_hex","","",5,[[]]],[11,"from_be_bytes","","",5,[[]]],[11,"to_be_bytes","","",5,[[],["vec",3]]],[11,"from_le_bytes","","",5,[[]]],[11,"to_le_bytes","","",5,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_signed_literal","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","",5,[[]]],[11,"comp_gte","","",5,[[]]],[11,"comp_gt","","",5,[[]]],[11,"comp_lte","","",5,[[]]],[11,"comp_lt","","",5,[[]]],[11,"inv","","",5,[[]]],[11,"pow_felem","","",5,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",5,[[]]],[11,"pow2","","Returns 2 to the power of the argument",5,[[],["scalar",3]]],[11,"from_byte_seq_be","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_be","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",5,[[],["seq",3]]],[11,"from_byte_seq_le","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",5,[[],["seq",3]]],[11,"from_secret_literal","","",5,[[["u128",3]],["scalar",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[["biguint",3]],["fpcanvas",3]]],[11,"from","","",2,[[["bigint",3]],["fpcanvas",3]]],[11,"from","","",3,[[["fpcanvas",3]],["fp",3]]],[11,"from","","",4,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",4,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into","","",2,[[],["bigint",3]]],[11,"into","","",2,[[],["biguint",3]]],[11,"into","","",3,[[],["fpcanvas",3]]],[11,"into","","",4,[[],["bigint",3]]],[11,"into","","",4,[[],["biguint",3]]],[11,"into","","",5,[[],["scalarcanvas",3]]],[11,"clone","","",2,[[],["fpcanvas",3]]],[11,"clone","","",3,[[],["fp",3]]],[11,"clone","","",0,[[],["serializedfp",3]]],[11,"clone","","",1,[[],["arrayfp",3]]],[11,"clone","","",4,[[],["scalarcanvas",3]]],[11,"clone","","",5,[[],["scalar",3]]],[11,"default","","",2,[[],["fpcanvas",3]]],[11,"default","","",3,[[],["fp",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",4,[[],["scalarcanvas",3]]],[11,"default","","",5,[[],["scalar",3]]],[11,"cmp","","",2,[[["fpcanvas",3]],["ordering",4]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",4,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",2,[[["fpcanvas",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[["scalarcanvas",3]]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",2,[[["fpcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"div","","",3,[[["fp",3]],["fp",3]]],[11,"div","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"rem","","",3,[[["fp",3]],["fp",3]]],[11,"rem","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"rem","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"rem","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",5,[[["scalar",3]],["scalar",3]]],[11,"sub","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"sub","","",3,[[["fp",3]],["fp",3]]],[11,"sub","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"sub","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"sub","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",5,[[["scalar",3]],["scalar",3]]],[11,"add","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"add","","",3,[[["fp",3]],["fp",3]]],[11,"add","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"add","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"add","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",5,[[["scalar",3]],["scalar",3]]],[11,"mul","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"mul","","",3,[[["fp",3]],["fp",3]]],[11,"mul","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"mul","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"mul","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",5,[[["scalar",3]],["scalar",3]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"ZERO","","",5,[[]]],[11,"ONE","","",5,[[]]],[11,"TWO","","",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_hex_string","","",5,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",5,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",5,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",5,[[]]],[11,"absolute","","`|self|`",5,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]]],"p":[[3,"SerializedFp"],[3,"ArrayFp"],[3,"FpCanvas"],[3,"Fp"],[3,"ScalarCanvas"],[3,"Scalar"]]},\
"hacspec_chacha20":{"doc":"","i":[[3,"State","hacspec_chacha20","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"StateBytes","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"IV","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Key","","Fixed length byte array.",null,null],[12,"0","","",3,null],[5,"state_to_bytes","","",null,[[["state",3]],["statebytes",3]]],[5,"chacha_quarter_round","","",null,[[["stateidx",6],["state",3]],["state",3]]],[5,"chacha20_constants_init","","",null,[[],[["seq",3],["u32",3]]]],[5,"chacha20_key_to_u32s","","",null,[[["key",3]],[["seq",3],["u32",3]]]],[5,"chacha20_iv_to_u32s","","",null,[[["iv",3]],[["seq",3],["u32",3]]]],[5,"chacha20_ctr_to_seq","","",null,[[["u32",3]],[["seq",3],["u32",3]]]],[5,"chacha_block_init","","",null,[[["key",3],["u32",3],["iv",3]],["state",3]]],[5,"chacha_block_inner","","",null,[[["key",3],["u32",3],["iv",3]],["state",3]]],[5,"chacha_block","","",null,[[["key",3],["u32",3],["iv",3]],["statebytes",3]]],[5,"chacha","","",null,[[["key",3],["iv",3],["byteseq",6]],["byteseq",6]]],[6,"StateIdx","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u32",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["statebytes",3]]],[11,"from_seq","","",1,[[],["statebytes",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["statebytes",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["statebytes",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["statebytes",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["iv",3]]],[11,"from_seq","","",2,[[],["iv",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["iv",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["iv",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["iv",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["key",3]]],[11,"from_seq","","",3,[[],["key",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["key",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["key",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["statebytes",3]]],[11,"clone","","",2,[[],["iv",3]]],[11,"clone","","",3,[[],["key",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["statebytes",3]],["statebytes",3]]],[11,"rem","","",2,[[["iv",3]],["iv",3]]],[11,"rem","","",3,[[["key",3]],["key",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["statebytes",3]],["statebytes",3]]],[11,"sub","","",2,[[["iv",3]],["iv",3]]],[11,"sub","","",3,[[["key",3]],["key",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["statebytes",3]],["statebytes",3]]],[11,"add","","",2,[[["iv",3]],["iv",3]]],[11,"add","","",3,[[["key",3]],["key",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["statebytes",3]],["statebytes",3]]],[11,"mul","","",2,[[["iv",3]],["iv",3]]],[11,"mul","","",3,[[["key",3]],["key",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]]],"p":[[3,"State"],[3,"StateBytes"],[3,"IV"],[3,"Key"]]},\
"hacspec_chacha20poly1305":{"doc":"","i":[[5,"poly_mac","hacspec_chacha20poly1305","",null,[[["iv",3],["keypoly",3],["byteseq",6]],["tag",3]]],[5,"encrypt","","",null,[[["iv",3],["byteseq",6],["key",3]]]],[5,"decrypt","","",null,[[["iv",3],["byteseq",6],["tag",3],["key",3]]]]],"p":[]},\
"hacspec_curve25519":{"doc":"","i":[[3,"FieldCanvas","hacspec_curve25519","",null,null],[3,"FieldElement","","",null,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[3,"SerializedPoint","","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"SerializedScalar","","Fixed length byte array.",null,null],[12,"0","","",1,null],[5,"scalarmult","","",null,[[["serializedpoint",3],["serializedscalar",3]],["serializedpoint",3]]],[5,"secret_to_public","","",null,[[["serializedscalar",3]],["serializedpoint",3]]],[11,"max_value","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"from_canvas","","",3,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",3,[[],["fieldcanvas",3]]],[11,"max","","",3,[[],["fieldcanvas",3]]],[11,"declassify","","",3,[[],["bigint",3]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[],["vec",3]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"comp_eq","","",3,[[]]],[11,"comp_ne","","",3,[[]]],[11,"comp_gte","","",3,[[]]],[11,"comp_gt","","",3,[[]]],[11,"comp_lte","","",3,[[]]],[11,"comp_lt","","",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",3,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",3,[[],["seq",3]]],[11,"from_byte_seq_le","","",3,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",3,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",3,[[],["seq",3]]],[11,"from_secret_literal","","",3,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"from_canvas","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",5,[[],["scalarcanvas",3]]],[11,"max","","",5,[[],["scalarcanvas",3]]],[11,"declassify","","",5,[[],["bigint",3]]],[11,"from_hex","","",5,[[]]],[11,"from_be_bytes","","",5,[[]]],[11,"to_be_bytes","","",5,[[],["vec",3]]],[11,"from_le_bytes","","",5,[[]]],[11,"to_le_bytes","","",5,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_signed_literal","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","",5,[[]]],[11,"comp_gte","","",5,[[]]],[11,"comp_gt","","",5,[[]]],[11,"comp_lte","","",5,[[]]],[11,"comp_lt","","",5,[[]]],[11,"inv","","",5,[[]]],[11,"pow_felem","","",5,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",5,[[]]],[11,"pow2","","Returns 2 to the power of the argument",5,[[],["scalar",3]]],[11,"from_byte_seq_be","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_be","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",5,[[],["seq",3]]],[11,"from_byte_seq_le","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",5,[[],["seq",3]]],[11,"from_secret_literal","","",5,[[["u128",3]],["scalar",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["serializedpoint",3]]],[11,"from_seq","","",0,[[],["serializedpoint",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["serializedpoint",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["serializedpoint",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["serializedpoint",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["serializedscalar",3]]],[11,"from_seq","","",1,[[],["serializedscalar",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["serializedscalar",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["serializedscalar",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["serializedscalar",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",2,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",3,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",4,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",4,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into","","",2,[[],["bigint",3]]],[11,"into","","",2,[[],["biguint",3]]],[11,"into","","",3,[[],["fieldcanvas",3]]],[11,"into","","",4,[[],["bigint",3]]],[11,"into","","",4,[[],["biguint",3]]],[11,"into","","",5,[[],["scalarcanvas",3]]],[11,"clone","","",2,[[],["fieldcanvas",3]]],[11,"clone","","",3,[[],["fieldelement",3]]],[11,"clone","","",4,[[],["scalarcanvas",3]]],[11,"clone","","",5,[[],["scalar",3]]],[11,"clone","","",0,[[],["serializedpoint",3]]],[11,"clone","","",1,[[],["serializedscalar",3]]],[11,"default","","",2,[[],["fieldcanvas",3]]],[11,"default","","",3,[[],["fieldelement",3]]],[11,"default","","",4,[[],["scalarcanvas",3]]],[11,"default","","",5,[[],["scalar",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"cmp","","",2,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",4,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",2,[[["fieldcanvas",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[["scalarcanvas",3]]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",2,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",3,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",3,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",0,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"rem","","",1,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"sub","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",3,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",5,[[["scalar",3]],["scalar",3]]],[11,"sub","","",0,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"sub","","",1,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"add","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",3,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",5,[[["scalar",3]],["scalar",3]]],[11,"add","","",0,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"add","","",1,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"mul","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",3,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",5,[[["scalar",3]],["scalar",3]]],[11,"mul","","",0,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"mul","","",1,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"ZERO","","",5,[[]]],[11,"ONE","","",5,[[]]],[11,"TWO","","",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_hex_string","","",5,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",5,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",5,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",5,[[]]],[11,"absolute","","`|self|`",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"SerializedPoint"],[3,"SerializedScalar"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"ScalarCanvas"],[3,"Scalar"]]},\
"hacspec_derive":{"doc":"","i":[[24,"Numeric","hacspec_derive","",null,null]],"p":[]},\
"hacspec_dev":{"doc":"This crate can be used for tests that accompany hacspecs.","i":[[0,"prelude","hacspec_dev","",null,null],[8,"DeserializeOwned","hacspec_dev::prelude","A data structure that can be deserialized without…",null,null],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",0,[[],["result",4]]],[24,"Deserialize","","",null,null],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",1,[[],["result",4]]],[24,"Serialize","","",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",2,null],[13,"Bool","","Represents a JSON boolean.",2,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",2,null],[13,"String","","Represents a JSON string.",2,null],[13,"Array","","Represents a JSON array.",2,null],[13,"Object","","Represents a JSON object.",2,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[3,"BufReader","","The `BufReader<R>` struct adds buffering to any reader.",null,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal…",null,null],[10,"fill_buf","","Returns the contents of the internal buffer, filling it…",3,[[],[["result",4],["error",3]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",3,[[]]],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` or…",3,[[["vec",3]],[["error",3],["result",4]]]],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached,…",3,[[["string",3]],[["error",3],["result",4]]]],[11,"split","","Returns an iterator over the contents of this reader split…",3,[[],["split",3]]],[11,"lines","","Returns an iterator over the lines of this reader.",3,[[],["lines",3]]],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified…",4,[[],[["error",3],["result",4]]]],[11,"read_vectored","","Like `read`, except that it reads into a slice of buffers.",4,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","Determines if this `Read`er has an efficient…",4,[[]]],[11,"initializer","","Determines if this `Read`er can work with buffers of…",4,[[],["initializer",3]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",4,[[["vec",3]],[["error",3],["result",4]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",4,[[["string",3]],[["error",3],["result",4]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",4,[[],[["error",3],["result",4]]]],[11,"by_ref","","Creates a \\\"by reference\\\" adaptor for this instance of…",4,[[]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",4,[[],["bytes",3]]],[11,"chain","","Creates an adaptor which will chain this stream with…",4,[[],["chain",3]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",4,[[],["take",3]]],[8,"Seek","","The `Seek` trait provides a cursor which can be moved…",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",5,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"stream_len","","Returns the length of this stream (in bytes).",5,[[],[["result",4],["error",3]]]],[11,"stream_position","","Returns the current seek position from the start of the…",5,[[],[["result",4],["error",3]]]],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this writer, returning how many bytes…",6,[[],[["error",3],["result",4]]]],[11,"write_vectored","","Like `write`, except that it writes from a slice of buffers.",6,[[],[["error",3],["result",4]]]],[11,"is_write_vectored","","Determines if this `Write`er has an efficient…",6,[[]]],[10,"flush","","Flush this output stream, ensuring that all intermediately…",6,[[],[["error",3],["result",4]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",6,[[],[["error",3],["result",4]]]],[11,"write_all_vectored","","Attempts to write multiple buffers into this writer.",6,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",6,[[["arguments",3]],[["error",3],["result",4]]]],[11,"by_ref","","Creates a \\\"by reference\\\" adaptor for this instance of…",6,[[]]],[0,"rand","hacspec_dev","",null,null],[5,"random_public_integer","hacspec_dev::rand","Random public integer",null,[[]]],[5,"random_public_integer_range","","Random public integer in range `[min, max)`",null,[[]]],[5,"random_public_byte","","Random public byte",null,[[]]],[5,"random_byte","","Random byte",null,[[],["u8",3]]],[5,"random_bytes","","Random array",null,[[],[["default",8],["fill",8]]]],[5,"random_byte_vec","","Random vector",null,[[],["vec",3]]],[0,"test_vectors","hacspec_dev","Provide utilities to read test vectors from JSON files.",null,null],[14,"create_test_vectors","","",null,null],[11,"from","hacspec_dev::prelude","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"write","","",7,[[],[["error",3],["result",4]]]],[11,"write_vectored","","",7,[[],[["error",3],["result",4]]]],[11,"is_write_vectored","","",7,[[]]],[11,"flush","","",7,[[],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"read","","",8,[[],[["error",3],["result",4]]]],[11,"read_vectored","","",8,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","",8,[[]]],[11,"initializer","","",8,[[],["initializer",3]]],[11,"read","","",7,[[],[["error",3],["result",4]]]],[11,"read_vectored","","",7,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","",7,[[]]],[11,"initializer","","",7,[[],["initializer",3]]],[11,"as_raw_fd","","",7,[[]]],[11,"from_raw_fd","","",7,[[],["file",3]]],[11,"fill_buf","","",8,[[],[["result",4],["error",3]]]],[11,"consume","","",8,[[]]],[11,"seek","","",7,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",8,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"into_raw_fd","","",7,[[]]],[11,"read_at","","",7,[[],[["error",3],["result",4]]]],[11,"write_at","","",7,[[],[["error",3],["result",4]]]],[11,"from_str","","",2,[[],[["result",4],["error",3],["value",4]]]],[11,"deserialize_any","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_seq","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_map","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",2,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",2,[[],[["error",3],["result",4]]]],[11,"from_iter","","Convert an iteratable type to a `Value`",2,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",2,[[],["value",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert `()` to `Value`",2,[[],["value",4]]],[11,"from","","Convert 64-bit floating point number to `Value`",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert copy-on-write string to `Value`",2,[[["cow",4]],["value",4]]],[11,"from","","Convert a slice to `Value`",2,[[],["value",4]]],[11,"from","","Convert boolean to `Value`",2,[[],["value",4]]],[11,"from","","Convert `Number` to `Value`",2,[[["number",3]],["value",4]]],[11,"from","","Convert string slice to `Value`",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert map (with string keys) to `Value`",2,[[["string",3],["map",3],["value",4]],["value",4]]],[11,"from","","Convert 32-bit floating point number to `Value`",2,[[],["value",4]]],[11,"from","","Convert a `Vec` to `Value`",2,[[["vec",3]],["value",4]]],[11,"from","","Convert `String` to `Value`",2,[[["string",3]],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"index_mut","","Write into a `serde_json::Value` using the syntax…",2,[[],["value",4]]],[11,"fmt","","Display a JSON value as a string.",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deserialize","","",2,[[],[["result",4],["value",4]]]],[11,"default","","",2,[[],["value",4]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"index","","Index into a `serde_json::Value` using the syntax…",2,[[],["value",4]]],[11,"into_deserializer","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[["value",4]]]],[11,"ne","","",2,[[["value",4]]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[["string",3]]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"clone","","",2,[[],["value",4]]],[11,"get","","Index into a JSON array or map. A string index can be used…",2,[[],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",2,[[],[["option",4],["value",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",2,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",2,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",2,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",2,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",2,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",2,[[],[["vec",3],["option",4]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",2,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",2,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",2,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",2,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",2,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",2,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",2,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",2,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",2,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",2,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",2,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",2,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",2,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",2,[[],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",2,[[],[["option",4],["value",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",2,[[],["value",4]]],[11,"open","","Attempts to open a file in read-only mode.",7,[[],[["error",3],["result",4],["file",3]]]],[11,"create","","Opens a file in write-only mode.",7,[[],[["error",3],["result",4],["file",3]]]],[11,"with_options","","Returns a new OpenOptions object.",7,[[],["openoptions",3]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",7,[[],[["error",3],["result",4]]]],[11,"sync_data","","This function is similar to [`sync_all`], except that it…",7,[[],[["error",3],["result",4]]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",7,[[],[["error",3],["result",4]]]],[11,"metadata","","Queries metadata about the underlying file.",7,[[],[["metadata",3],["error",3],["result",4]]]],[11,"try_clone","","Creates a new `File` instance that shares the same…",7,[[],[["error",3],["result",4],["file",3]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",7,[[["permissions",3]],[["error",3],["result",4]]]],[11,"new","","Creates a new `BufReader<R>` with a default buffer…",8,[[],["bufreader",3]]],[11,"with_capacity","","Creates a new `BufReader<R>` with the specified buffer…",8,[[],["bufreader",3]]],[11,"get_ref","","Gets a reference to the underlying reader.",8,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",8,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",8,[[]]],[11,"capacity","","Returns the number of bytes the internal buffer can hold…",8,[[]]],[11,"into_inner","","Unwraps this `BufReader<R>`, returning the underlying…",8,[[]]],[11,"seek_relative","","Seeks relative to the current position. If the new…",8,[[],[["error",3],["result",4]]]]],"p":[[8,"Deserialize"],[8,"Serialize"],[4,"Value"],[8,"BufRead"],[8,"Read"],[8,"Seek"],[8,"Write"],[3,"File"],[3,"BufReader"]]},\
"hacspec_gimli":{"doc":"","i":[[3,"State","hacspec_gimli","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Digest","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Nonce","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Key","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"Tag","","Fixed length byte array.",null,null],[12,"0","","",5,null],[5,"gimli","","",null,[[["state",3]],["state",3]]],[5,"gimli_hash","","",null,[[["byteseq",6]],["digest",3]]],[5,"nonce_to_u32s","","",null,[[["nonce",3]],[["seq",3],["u32",3]]]],[5,"key_to_u32s","","",null,[[["key",3]],[["seq",3],["u32",3]]]],[5,"gimli_aead_encrypt","","",null,[[["nonce",3],["key",3],["byteseq",6]]]],[5,"gimli_aead_decrypt","","",null,[[["nonce",3],["byteseq",6],["key",3],["tag",3]],["byteseq",6]]],[6,"StateIdx","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u32",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",1,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["block",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["block",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["digest",3]]],[11,"from_seq","","",2,[[],["digest",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["digest",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["digest",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["nonce",3]]],[11,"from_seq","","",3,[[],["nonce",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["nonce",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["nonce",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["nonce",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["key",3]]],[11,"from_seq","","",4,[[],["key",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["key",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["key",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["tag",3]]],[11,"from_seq","","",5,[[],["tag",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["tag",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["tag",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["block",3]]],[11,"clone","","",2,[[],["digest",3]]],[11,"clone","","",3,[[],["nonce",3]]],[11,"clone","","",4,[[],["key",3]]],[11,"clone","","",5,[[],["tag",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["block",3]],["block",3]]],[11,"rem","","",2,[[["digest",3]],["digest",3]]],[11,"rem","","",3,[[["nonce",3]],["nonce",3]]],[11,"rem","","",4,[[["key",3]],["key",3]]],[11,"rem","","",5,[[["tag",3]],["tag",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["block",3]],["block",3]]],[11,"sub","","",2,[[["digest",3]],["digest",3]]],[11,"sub","","",3,[[["nonce",3]],["nonce",3]]],[11,"sub","","",4,[[["key",3]],["key",3]]],[11,"sub","","",5,[[["tag",3]],["tag",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["block",3]],["block",3]]],[11,"add","","",2,[[["digest",3]],["digest",3]]],[11,"add","","",3,[[["nonce",3]],["nonce",3]]],[11,"add","","",4,[[["key",3]],["key",3]]],[11,"add","","",5,[[["tag",3]],["tag",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["block",3]],["block",3]]],[11,"mul","","",2,[[["digest",3]],["digest",3]]],[11,"mul","","",3,[[["nonce",3]],["nonce",3]]],[11,"mul","","",4,[[["key",3]],["key",3]]],[11,"mul","","",5,[[["tag",3]],["tag",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]]],"p":[[3,"State"],[3,"Block"],[3,"Digest"],[3,"Nonce"],[3,"Key"],[3,"Tag"]]},\
"hacspec_hkdf":{"doc":"","i":[[5,"extract","hacspec_hkdf","Extract a pseudo-random key from input key material (IKM)…",null,[[["byteseq",6]],["prk",3]]],[5,"expand","","Expand a key prk, using potentially empty info, and output…",null,[[["byteseq",6]]]]],"p":[]},\
"hacspec_hmac":{"doc":"","i":[[3,"PRK","hacspec_hmac","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",1,null],[5,"hmac","","",null,[[["byteseq",6]],["prk",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["prk",3]]],[11,"from_seq","","",0,[[],["prk",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["prk",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["prk",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["prk",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",1,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["block",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["block",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["prk",3]]],[11,"clone","","",1,[[],["block",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["prk",3]],["prk",3]]],[11,"rem","","",1,[[["block",3]],["block",3]]],[11,"sub","","",0,[[["prk",3]],["prk",3]]],[11,"sub","","",1,[[["block",3]],["block",3]]],[11,"add","","",0,[[["prk",3]],["prk",3]]],[11,"add","","",1,[[["block",3]],["block",3]]],[11,"mul","","",0,[[["prk",3]],["prk",3]]],[11,"mul","","",1,[[["block",3]],["block",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"PRK"],[3,"Block"]]},\
"hacspec_lib":{"doc":"The hacspec standard library","i":[[0,"array","hacspec_lib","Arrays",null,null],[0,"math_integers","","Math Integers",null,null],[0,"prelude","","This module conveniently exports common subroutines…",null,null],[0,"abstract_int","hacspec_lib::prelude","",null,null],[0,"nat_mod","","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[0,"traits","","",null,null],[0,"bounds","hacspec_lib::prelude::traits","",null,null],[8,"Bounded","hacspec_lib::prelude::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[0,"cast","hacspec_lib::prelude::traits","",null,null],[8,"ToPrimitive","hacspec_lib::prelude::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",4,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",4,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",4,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",4,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",4,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",4,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",4,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",4,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",4,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",4,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",4,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",4,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",4,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",4,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",5,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",6,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",7,[[]]],[0,"float","hacspec_lib::prelude::traits","",null,null],[8,"FloatCore","hacspec_lib::prelude::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",8,[[]]],[10,"neg_infinity","","Returns negative infinity.",8,[[]]],[10,"nan","","Returns NaN.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",8,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",8,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",8,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[11,"trunc","","Return the integer part of a number.",8,[[]]],[11,"fract","","Returns the fractional part of a number.",8,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",8,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",8,[[]]],[11,"min","","Returns the minimum of the two numbers.",8,[[]]],[11,"max","","Returns the maximum of the two numbers.",8,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",8,[[]]],[11,"powi","","Raise a number to an integer power.",8,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",8,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns `-0.0`.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",9,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",9,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",9,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",9,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",9,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",9,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",9,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",9,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",9,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",9,[[]]],[10,"exp2","","Returns `2^(self)`.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",9,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",9,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",10,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",10,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",10,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",10,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",10,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",10,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",10,[[]]],[10,"LN_10","","Return `ln(10.0)`.",10,[[]]],[10,"LN_2","","Return `ln(2.0)`.",10,[[]]],[10,"LOG10_E","","Return `log10(e)`.",10,[[]]],[10,"LOG2_E","","Return `log2(e)`.",10,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",10,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",10,[[]]],[11,"TAU","","Return the full circle constant `τ`.",10,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",10,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",10,[[]]],[0,"identities","hacspec_lib::prelude::traits","",null,null],[8,"Zero","hacspec_lib::prelude::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","hacspec_lib::prelude::traits","",null,null],[8,"PrimInt","hacspec_lib::prelude::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","hacspec_lib::prelude::traits","",null,null],[0,"checked","hacspec_lib::prelude::traits::ops","",null,null],[8,"CheckedAdd","hacspec_lib::prelude::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[0,"inv","hacspec_lib::prelude::traits::ops","",null,null],[8,"Inv","hacspec_lib::prelude::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","hacspec_lib::prelude::traits::ops","",null,null],[8,"MulAdd","hacspec_lib::prelude::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[0,"overflowing","hacspec_lib::prelude::traits::ops","",null,null],[8,"OverflowingAdd","hacspec_lib::prelude::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",23,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",24,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",25,[[]]],[0,"saturating","hacspec_lib::prelude::traits::ops","",null,null],[8,"Saturating","hacspec_lib::prelude::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[0,"wrapping","hacspec_lib::prelude::traits::ops","",null,null],[8,"WrappingAdd","hacspec_lib::prelude::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[0,"pow","hacspec_lib::prelude::traits","",null,null],[8,"Pow","hacspec_lib::prelude::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","hacspec_lib::prelude::traits","",null,null],[8,"Real","hacspec_lib::prelude::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",37,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",37,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",37,[[]]],[10,"trunc","","Return the integer part of a number.",37,[[]]],[10,"fract","","Returns the fractional part of a number.",37,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",37,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",37,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",37,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",37,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",37,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",37,[[]]],[10,"powi","","Raise a number to an integer power.",37,[[]]],[10,"powf","","Raise a number to a real number power.",37,[[]]],[10,"sqrt","","Take the square root of a number.",37,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",37,[[]]],[10,"exp2","","Returns `2^(self)`.",37,[[]]],[10,"ln","","Returns the natural logarithm of the number.",37,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",37,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",37,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",37,[[]]],[10,"to_degrees","","Converts radians to degrees.",37,[[]]],[10,"to_radians","","Converts degrees to radians.",37,[[]]],[10,"max","","Returns the maximum of the two numbers.",37,[[]]],[10,"min","","Returns the minimum of the two numbers.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"cbrt","","Take the cubic root of a number.",37,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",37,[[]]],[10,"sin","","Computes the sine of a number (in radians).",37,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",37,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",37,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",37,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",37,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",37,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",37,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",37,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",37,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",37,[[]]],[10,"sinh","","Hyperbolic sine function.",37,[[]]],[10,"cosh","","Hyperbolic cosine function.",37,[[]]],[10,"tanh","","Hyperbolic tangent function.",37,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",37,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",37,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",37,[[]]],[0,"sign","hacspec_lib::prelude::traits","",null,null],[8,"Signed","hacspec_lib::prelude::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","hacspec_lib::prelude::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",40,null],[13,"Invalid","","",40,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",41,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",3,[[]]],[10,"max_value","","returns the largest finite number this type can represent",3,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",9,[[]]],[10,"infinity","","Returns the infinite value.",9,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",9,[[]]],[10,"neg_zero","","Returns `-0.0`.",9,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",9,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",9,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",9,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",9,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",9,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",9,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",9,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",9,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",9,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",9,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",9,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",9,[[]]],[10,"trunc","","Return the integer part of a number.",9,[[]]],[10,"fract","","Returns the fractional part of a number.",9,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",9,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",9,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",9,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",9,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",9,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",9,[[]]],[10,"powi","","Raise a number to an integer power.",9,[[]]],[10,"powf","","Raise a number to a floating point power.",9,[[]]],[10,"sqrt","","Take the square root of a number.",9,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",9,[[]]],[10,"exp2","","Returns `2^(self)`.",9,[[]]],[10,"ln","","Returns the natural logarithm of the number.",9,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",9,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",9,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",9,[[]]],[11,"to_degrees","","Converts radians to degrees.",9,[[]]],[11,"to_radians","","Converts degrees to radians.",9,[[]]],[10,"max","","Returns the maximum of the two numbers.",9,[[]]],[10,"min","","Returns the minimum of the two numbers.",9,[[]]],[10,"abs_sub","","The positive difference of two numbers.",9,[[]]],[10,"cbrt","","Take the cubic root of a number.",9,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",9,[[]]],[10,"sin","","Computes the sine of a number (in radians).",9,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",9,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",9,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",9,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",9,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",9,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",9,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",9,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",9,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",9,[[]]],[10,"sinh","","Hyperbolic sine function.",9,[[]]],[10,"cosh","","Hyperbolic cosine function.",9,[[]]],[10,"tanh","","Hyperbolic tangent function.",9,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",9,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",9,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",9,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",9,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",10,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",10,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",10,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",10,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",10,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",10,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",10,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",10,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",10,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",10,[[]]],[10,"LN_10","","Return `ln(10.0)`.",10,[[]]],[10,"LN_2","","Return `ln(2.0)`.",10,[[]]],[10,"LOG10_E","","Return `log10(e)`.",10,[[]]],[10,"LOG2_E","","Return `log2(e)`.",10,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",10,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",10,[[]]],[11,"TAU","","Return the full circle constant `τ`.",10,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",10,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",10,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",7,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",5,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",5,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",5,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",5,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",5,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",6,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",4,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",4,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",4,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",4,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",4,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",4,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",4,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",4,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",4,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",4,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",4,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",4,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",4,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",4,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[3,"ParseIntError","hacspec_lib::prelude","An error which can be returned when parsing an integer.",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",42,null],[13,"Equal","","An ordering where a compared value is equal to another.",42,null],[13,"Greater","","An ordering where a compared value is greater than another.",42,null],[14,"abstract_int","","",null,null],[14,"abstract_public","","",null,null],[14,"abstract_unsigned","","",null,null],[14,"abstract_signed","","",null,null],[14,"abstract_unsigned_public_integer","","",null,null],[14,"abstract_signed_public_integer","","",null,null],[14,"abstract_secret","","",null,null],[14,"abstract_unsigned_secret_integer","","",null,null],[14,"abstract_signed_secret_integer","","",null,null],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"modular_integer","","",null,null],[14,"abstract_secret_modular_integer","","",null,null],[14,"abstract_public_modular_integer","","",null,null],[14,"abstract_nat_mod","","",null,null],[14,"abstract_public_nat_mod","","",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",43,null],[10,"add","","Performs the `+` operation.",43,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",44,null],[10,"div","","Performs the `/` operation.",44,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",45,null],[10,"mul","","Performs the `*` operation.",45,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",46,null],[10,"neg","","Performs the unary `-` operation.",46,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",47,null],[10,"rem","","Performs the `%` operation.",47,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",48,null],[10,"sub","","Performs the `-` operation.",48,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",49,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",50,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",51,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",52,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",53,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",54,null],[10,"bitand","","Performs the `&` operation.",54,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",55,null],[10,"bitor","","Performs the `|` operation.",55,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",56,null],[10,"bitxor","","Performs the `^` operation.",56,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",57,null],[10,"not","","Performs the unary `!` operation.",57,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",58,null],[10,"shl","","Performs the `<<` operation.",58,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",59,null],[10,"shr","","Performs the `>>` operation.",59,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",60,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",61,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",62,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",63,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",64,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",65,null],[10,"deref","","Dereferences the value.",65,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",66,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",67,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",68,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",69,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",70,null],[10,"call_once","","Performs the call operation.",70,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",71,null],[10,"index","","Performs the indexing (`container[index]`) operation.",71,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",72,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[12,"end","","The upper bound of the range (exclusive).",73,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",74,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",75,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",76,null],[13,"Excluded","","An exclusive bound.",76,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",76,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",77,[[],["bound",4]]],[10,"end_bound","","End index bound.",77,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",78,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",79,null],[16,"Error","","The type of this value when viewed as failed.",79,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",79,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",79,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",79,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",80,null],[16,"Return","","The type of value this generator returns.",80,null],[10,"resume","","Resumes the execution of this generator.",80,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",81,null],[13,"Complete","","The generator completed with a return value.",81,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[23,"in_hacspec","","This function is within the hacspec subset of Rust: its…",null,null],[23,"unsafe_hacspec","","This function can be called from hacspec programs but its…",null,null],[23,"not_hacspec","","Function that is not part of the language but is offered…",null,null],[3,"U8","","",null,null],[12,"0","","",82,null],[3,"U16","","",null,null],[12,"0","","",83,null],[3,"U32","","",null,null],[12,"0","","",84,null],[3,"U64","","",null,null],[12,"0","","",85,null],[3,"U128","","",null,null],[12,"0","","",86,null],[3,"I8","","",null,null],[12,"0","","",87,null],[3,"I16","","",null,null],[12,"0","","",88,null],[3,"I32","","",null,null],[12,"0","","",89,null],[3,"I64","","",null,null],[12,"0","","",90,null],[3,"I128","","",null,null],[12,"0","","",91,null],[5,"U128_from_U8","","",null,[[["u8",3]],["u128",3]]],[5,"U8_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u8",3]]],[5,"U128_from_U16","","",null,[[["u16",3]],["u128",3]]],[5,"U16_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u16",3]]],[5,"U128_from_U32","","",null,[[["u32",3]],["u128",3]]],[5,"U32_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u32",3]]],[5,"U128_from_U64","","",null,[[["u64",3]],["u128",3]]],[5,"U64_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u64",3]]],[5,"U64_from_U8","","",null,[[["u8",3]],["u64",3]]],[5,"U8_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u8",3]]],[5,"U64_from_U16","","",null,[[["u16",3]],["u64",3]]],[5,"U16_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u16",3]]],[5,"U64_from_U32","","",null,[[["u32",3]],["u64",3]]],[5,"U32_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u32",3]]],[5,"U32_from_U8","","",null,[[["u8",3]],["u32",3]]],[5,"U8_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u8",3]]],[5,"U32_from_U16","","",null,[[["u16",3]],["u32",3]]],[5,"U16_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u16",3]]],[5,"U16_from_U8","","",null,[[["u8",3]],["u16",3]]],[5,"U8_from_U16","","Warning: wrapping semantics.",null,[[["u16",3]],["u8",3]]],[5,"declassify_u8_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u16_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u32_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u64_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u128_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_usize_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"U8_from_usize","","",null,[[],["u8",3]]],[5,"declassify_u16_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u64_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"u128_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u128_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U128","","Warning: conversion can be lossy!",null,[[["u128",3]]]],[5,"u8_from_U16","","",null,[[],["u16",3]]],[5,"u8_from_U32","","",null,[[],["u32",3]]],[5,"u16_from_U32","","",null,[[],["u32",3]]],[5,"u8_from_U64","","",null,[[],["u64",3]]],[5,"u16_from_U64","","",null,[[],["u64",3]]],[5,"u32_from_U64","","",null,[[],["u64",3]]],[5,"U64_from_usize","","",null,[[],["u64",3]]],[5,"u8_from_U128","","",null,[[],["u128",3]]],[5,"u16_from_U128","","",null,[[],["u128",3]]],[5,"u32_from_U128","","",null,[[],["u128",3]]],[5,"u64_from_U128","","",null,[[],["u128",3]]],[5,"U128_from_usize","","",null,[[],["u128",3]]],[5,"I128_from_I8","","",null,[[["i8",3]],["i128",3]]],[5,"I8_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i8",3]]],[5,"I128_from_I16","","",null,[[["i16",3]],["i128",3]]],[5,"I16_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i16",3]]],[5,"I128_from_I32","","",null,[[["i32",3]],["i128",3]]],[5,"I32_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i32",3]]],[5,"I128_from_I64","","",null,[[["i64",3]],["i128",3]]],[5,"I64_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i64",3]]],[5,"I64_from_I8","","",null,[[["i8",3]],["i64",3]]],[5,"I8_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i8",3]]],[5,"I64_from_I16","","",null,[[["i16",3]],["i64",3]]],[5,"I16_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i16",3]]],[5,"I64_from_I32","","",null,[[["i32",3]],["i64",3]]],[5,"I32_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i32",3]]],[5,"I32_from_I8","","",null,[[["i8",3]],["i32",3]]],[5,"I8_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i8",3]]],[5,"I32_from_I16","","",null,[[["i16",3]],["i32",3]]],[5,"I16_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i16",3]]],[5,"I16_from_I8","","",null,[[["i8",3]],["i16",3]]],[5,"I8_from_I16","","Warning: wrapping semantics.",null,[[["i16",3]],["i8",3]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",1,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",2,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",2,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[]]],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",43,null],[10,"add","","Performs the `+` operation.",43,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",44,null],[10,"div","","Performs the `/` operation.",44,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",45,null],[10,"mul","","Performs the `*` operation.",45,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",46,null],[10,"neg","","Performs the unary `-` operation.",46,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",47,null],[10,"rem","","Performs the `%` operation.",47,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",48,null],[10,"sub","","Performs the `-` operation.",48,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",49,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",50,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",51,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",52,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",53,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",54,null],[10,"bitand","","Performs the `&` operation.",54,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",55,null],[10,"bitor","","Performs the `|` operation.",55,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",56,null],[10,"bitxor","","Performs the `^` operation.",56,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",57,null],[10,"not","","Performs the unary `!` operation.",57,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",58,null],[10,"shl","","Performs the `<<` operation.",58,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",59,null],[10,"shr","","Performs the `>>` operation.",59,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",60,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",61,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",62,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",63,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",64,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",65,null],[10,"deref","","Dereferences the value.",65,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",66,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",67,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",68,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",69,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",70,null],[10,"call_once","","Performs the call operation.",70,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",71,null],[10,"index","","Performs the indexing (`container[index]`) operation.",71,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",72,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[12,"end","","The upper bound of the range (exclusive).",73,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",74,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",75,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",76,null],[13,"Excluded","","An exclusive bound.",76,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",76,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",77,[[],["bound",4]]],[10,"end_bound","","End index bound.",77,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",78,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",79,null],[16,"Error","","The type of this value when viewed as failed.",79,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",79,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",79,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",79,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",80,null],[16,"Return","","The type of value this generator returns.",80,null],[10,"resume","","Resumes the execution of this generator.",80,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",81,null],[13,"Complete","","The generator completed with a return value.",81,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[8,"FromStr","","Parse a value from a string",null,null],[16,"Err","","The associated error which can be returned from parsing.",92,null],[10,"from_str","","Parses a string `s` to return a value of this type.",92,[[],["result",4]]],[5,"min","","Compares and returns the minimum of two values.",null,[[]]],[8,"PartialEq","","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",93,[[]]],[11,"ne","","This method tests for `!=`.",93,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[0,"fmt","","Utilities for formatting and printing `String`s.",null,null],[5,"format","hacspec_lib::prelude::fmt","The `format` function takes an [`Arguments`] struct and…",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",94,null],[13,"Right","","Indication that contents should be right-aligned.",94,null],[13,"Center","","Indication that contents should be center-aligned.",94,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments",3],["write",8]],[["result",4],["error",3]]]],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",95,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",96,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",97,[[["formatter",3]],[["result",4],["error",3]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",98,[[["formatter",3]],[["result",4],["error",3]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"Formatter","","Configuration for formatting.",null,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A collection of methods that are required to format a…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",99,[[],[["result",4],["error",3]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",99,[[],[["result",4],["error",3]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",99,[[["arguments",3]],[["result",4],["error",3]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",100,[[["formatter",3]],[["result",4],["error",3]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",101,[[["formatter",3]],[["result",4],["error",3]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",102,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",103,[[["formatter",3]],[["result",4],["error",3]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",104,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Debug","hacspec_lib::prelude","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",97,[[["formatter",3]],[["result",4],["error",3]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",105,null],[10,"try_from","","Performs the conversion.",105,[[],["result",4]]],[3,"U16Word","","Fixed length byte array.",null,null],[12,"0","","",106,null],[3,"U32Word","","Fixed length byte array.",null,null],[12,"0","","",107,null],[3,"U64Word","","Fixed length byte array.",null,null],[12,"0","","",108,null],[3,"U128Word","","Fixed length byte array.",null,null],[12,"0","","",109,null],[3,"u16Word","","Fixed length byte array.",null,null],[12,"0","","",110,null],[3,"u32Word","","Fixed length byte array.",null,null],[12,"0","","",111,null],[3,"u64Word","","Fixed length byte array.",null,null],[12,"0","","",112,null],[3,"u128Word","","Fixed length byte array.",null,null],[12,"0","","",113,null],[5,"cswap_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cswap","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cset_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"cadd","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"csub","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"cmul","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"ct_div","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"sub_poly","","This function can be called from hacspec programs but its…",null,[[["copy",8],["numeric",8],["seq",3]],[["copy",8],["numeric",8],["seq",3]]]],[5,"add_poly","","This function can be called from hacspec programs but its…",null,[[["copy",8],["numeric",8],["seq",3]],[["copy",8],["numeric",8],["seq",3]]]],[5,"mul_poly","","Simple polynomial multiplication for two fixed size…",null,[[["copy",8],["numeric",8],["seq",3]],[["copy",8],["numeric",8],["seq",3]]]],[5,"div_poly","","Euclidean polynomial division, calculates `a/b` in `R_n`.…",null,[[["copy",8],["integer",8],["seq",3]],["result",4]]],[5,"div_scalar","","Function that is not part of the language but is offered…",null,[[["seq",3],["integer",8],["copy",8]],[["copy",8],["integer",8],["seq",3]]]],[5,"degree_poly","","This function can be called from hacspec programs but its…",null,[[["seq",3]]]],[5,"extended_euclid","","This function can be called from hacspec programs but its…",null,[[["copy",8],["integer",8],["seq",3]],[["result",4],["seq",3]]]],[5,"weight","","Returns number of coefficient != 0, e.g. for -3x⁵ + 3x² +…",null,[[["seq",3]]]],[5,"make_positive","","makes coefficients positiv, e.g. -3 mod 4 = 1",null,[[["copy",8],["numeric",8],["seq",3]],[["copy",8],["numeric",8],["seq",3]]]],[5,"poly_to_ring","","This function can be called from hacspec programs but its…",null,[[["copy",8],["integer",8],["seq",3]]]],[5,"mul_poly_irr","","This function can be called from hacspec programs but its…",null,[[["copy",8],["integer",8],["seq",3]],[["copy",8],["integer",8],["seq",3]]]],[5,"U16_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16",3]],["u16word",3]]],[5,"U16_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16",3]],["u16word",3]]],[5,"U16_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]],["u16",3]]],[5,"U16_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]],["u16",3]]],[5,"U32_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32",3]],["u32word",3]]],[5,"U32_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32",3]],["u32word",3]]],[5,"U32_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]],["u32",3]]],[5,"U32_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]],["u32",3]]],[5,"U64_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64",3]],["u64word",3]]],[5,"U64_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64",3]],["u64word",3]]],[5,"U64_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]],["u64",3]]],[5,"U64_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]],["u64",3]]],[5,"U128_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128",3]],["u128word",3]]],[5,"U128_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128",3]],["u128word",3]]],[5,"U128_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]],["u128",3]]],[5,"U128_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]],["u128",3]]],[5,"u16_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u16word",3]]],[5,"u16_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u16word",3]]],[5,"u16_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]]]],[5,"u16_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]]]],[5,"u32_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u32word",3]]],[5,"u32_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u32word",3]]],[5,"u32_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]]]],[5,"u32_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]]]],[5,"u64_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u64word",3]]],[5,"u64_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u64word",3]]],[5,"u64_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]]]],[5,"u64_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]]]],[5,"u128_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u128word",3]]],[5,"u128_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u128word",3]]],[5,"u128_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]]]],[5,"u128_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]]]],[5,"hex_string_to_bytes","","Function that is not part of the language but is offered…",null,[[],["vec",3]]],[5,"to_array","","Function that is not part of the language but is offered…",null,[[]]],[5,"vec_poly_mul","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["seqtrait",8],["numeric",8],["copy",8]]]],[5,"vec_poly_add","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["seqtrait",8],["numeric",8],["copy",8]]]],[5,"vec_poly_sub","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["seqtrait",8],["numeric",8],["copy",8]]]],[0,"ct_util","","",null,null],[5,"cswap_bit","hacspec_lib::prelude::ct_util","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cswap","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cset_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"cadd","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"csub","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"cmul","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["integer",8],["copy",8]]]],[5,"ct_div","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[0,"poly","hacspec_lib::prelude","",null,null],[8,"SeqTrait","","Common trait for all byte arrays and sequences.",null,null],[10,"len","","",114,[[]]],[10,"iter","","",114,[[],["iter",3]]],[10,"create","","",114,[[]]],[10,"update_slice","","Update this sequence with `l` elements of `v`, starting at…",114,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",114,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",114,[[]]],[8,"Integer","","This trait extends the `Numeric` trait and is implemented…",null,null],[18,"NUM_BITS","","",115,null],[10,"ZERO","","",115,[[]]],[10,"ONE","","",115,[[]]],[10,"TWO","","",115,[[]]],[10,"from_literal","","Get an integer with value `val`.",115,[[]]],[10,"from_hex_string","","Read a hex string (starting with 0x) into an `Integer`.",115,[[["string",3]]]],[10,"get_bit","","",115,[[]]],[10,"set_bit","","",115,[[]]],[10,"set","","",115,[[]]],[10,"rotate_left","","",115,[[]]],[10,"rotate_right","","",115,[[]]],[8,"SecretInteger","","",null,null],[16,"PublicVersion","","",116,null],[10,"classify","","",116,[[]]],[8,"SecretIntegerCopy","","",null,null],[16,"PublicVersionCopy","","",117,null],[10,"classify","","",117,[[]]],[8,"PublicInteger","","",null,null],[16,"SecretVersion","","",118,null],[8,"PublicIntegerCopy","","",null,null],[16,"SecretVersionCopy","","",119,null],[8,"UnsignedInteger","","",null,null],[8,"UnsignedIntegerCopy","","",null,null],[8,"SignedInteger","","",null,null],[8,"SignedIntegerCopy","","",null,null],[8,"UnsignedSecretInteger","","",null,null],[10,"to_le_bytes","","",120,[[],[["u8",3],["seq",3]]]],[10,"to_be_bytes","","",120,[[],[["u8",3],["seq",3]]]],[10,"from_le_bytes","","",120,[[["seq",3]]]],[10,"from_be_bytes","","",120,[[["seq",3]]]],[11,"get_byte","","This function is within the hacspec subset of Rust: its…",120,[[]]],[8,"UnsignedSecretIntegerCopy","","",null,null],[8,"UnsignedPublicInteger","","",null,null],[10,"to_le_bytes","","",121,[[],["seq",3]]],[10,"to_be_bytes","","",121,[[],["seq",3]]],[10,"from_le_bytes","","",121,[[["seq",3]]]],[10,"from_be_bytes","","",121,[[["seq",3]]]],[8,"UnsignedPublicIntegerCopy","","",null,null],[8,"ModNumeric","","",null,null],[10,"sub_mod","","(self - rhs) % n.",122,[[]]],[10,"add_mod","","`(self + rhs) % n`",122,[[]]],[10,"mul_mod","","`(self * rhs) % n`",122,[[]]],[10,"pow_mod","","`(self ^ exp) % n`",122,[[]]],[10,"modulo","","`self % n`",122,[[]]],[10,"signed_modulo","","`self % n` that always returns a positive integer",122,[[]]],[10,"absolute","","`|self|`",122,[[]]],[8,"NumericCopy","","",null,null],[8,"Numeric","","The `Numeric` trait has to be implemented by all numeric…",null,null],[10,"max_val","","Return largest value that can be represented.",123,[[]]],[10,"wrap_add","","",123,[[]]],[10,"wrap_sub","","",123,[[]]],[10,"wrap_mul","","",123,[[]]],[10,"wrap_div","","",123,[[]]],[10,"exp","","`self ^ exp` where `exp` is a `u32`.",123,[[]]],[10,"pow_self","","`self ^ exp` where `exp` is a `Self`.",123,[[]]],[10,"divide","","Division.",123,[[]]],[10,"inv","","Invert self modulo n.",123,[[]]],[10,"equal","","",123,[[]]],[10,"greater_than","","",123,[[]]],[10,"greater_than_or_qual","","",123,[[]]],[10,"less_than","","",123,[[]]],[10,"less_than_or_equal","","",123,[[]]],[10,"not_equal_bm","","",123,[[]]],[10,"equal_bm","","",123,[[]]],[10,"greater_than_bm","","",123,[[]]],[10,"greater_than_or_equal_bm","","",123,[[]]],[10,"less_than_bm","","",123,[[]]],[10,"less_than_or_equal_bm","","",123,[[]]],[11,"new","","This function can be called from hacspec programs but its…",106,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",106,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",106,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",106,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",106,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",106,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",106,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",106,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",106,[[["u8",3],["vec",3]],["u16word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",106,[[],["u16word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",106,[[],["u16word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",106,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",106,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",106,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",106,[[],["u16word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",106,[[],["u16word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",106,[[],[["u64",3],["seq",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",106,[[],[["u64",3],["seq",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",106,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",106,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",106,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",107,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",107,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",107,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",107,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",107,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",107,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",107,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",107,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",107,[[["u8",3],["vec",3]],["u32word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",107,[[],["u32word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",107,[[],["u32word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",107,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",107,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",107,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",107,[[],["u32word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",107,[[],["u32word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",107,[[],[["u64",3],["seq",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",107,[[],[["u64",3],["seq",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",107,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",107,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",107,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",108,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",108,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",108,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",108,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",108,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",108,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",108,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",108,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",108,[[["u8",3],["vec",3]],["u64word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",108,[[],["u64word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",108,[[],["u64word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",108,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",108,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",108,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",108,[[],["u64word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",108,[[],["u64word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",108,[[],[["u64",3],["seq",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",108,[[],[["u64",3],["seq",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",108,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",108,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",108,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",109,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",109,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",109,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",109,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",109,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",109,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",109,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",109,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",109,[[["u8",3],["vec",3]],["u128word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",109,[[],["u128word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",109,[[],["u128word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",109,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",109,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",109,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",109,[[],["u128word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",109,[[],["u128word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",109,[[],[["u64",3],["seq",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",109,[[],[["u64",3],["seq",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",109,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",109,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",109,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",110,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",110,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",110,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",110,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",110,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",110,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",110,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",110,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",110,[[["vec",3]],["u16word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",110,[[],["u16word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",110,[[],["u16word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",110,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",111,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",111,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",111,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",111,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",111,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",111,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",111,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",111,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",111,[[["vec",3]],["u32word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",111,[[],["u32word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",111,[[],["u32word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",111,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",112,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",112,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",112,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",112,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",112,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",112,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",112,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",112,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",112,[[["vec",3]],["u64word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",112,[[],["u64word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",112,[[],["u64word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",112,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",113,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",113,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",113,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",113,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",113,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",113,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",113,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",113,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",113,[[["vec",3]],["u128word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",113,[[],["u128word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",113,[[],["u128word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",113,[[],["string",3]]],[0,"seq","hacspec_lib","Sequences",null,null],[3,"SecretSeq","hacspec_lib::seq","Variable length byte arrays.",null,null],[3,"PublicSeq","","Variable length byte arrays.",null,null],[3,"Seq","","Variable length byte arrays.",null,null],[6,"ByteSeq","","",null,null],[6,"PublicByteSeq","","",null,null],[11,"new","","This function can be called from hacspec programs but its…",124,[[]]],[11,"len","","This function can be called from hacspec programs but its…",124,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",124,[[["range",3]]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",124,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",124,[[["vec",3]],["secretseq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",124,[[],["secretseq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",124,[[],["secretseq",3]]],[11,"new","","This function can be called from hacspec programs but its…",125,[[]]],[11,"len","","This function can be called from hacspec programs but its…",125,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",125,[[["range",3]]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",125,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",125,[[["vec",3]],["publicseq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",125,[[],["publicseq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",125,[[],["publicseq",3]]],[11,"new","","This function can be called from hacspec programs but its…",126,[[]]],[11,"len","","This function can be called from hacspec programs but its…",126,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",126,[[["range",3]]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",126,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",126,[[["vec",3]],["seq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",126,[[],["seq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",126,[[],[["u8",3],["seq",3]]]],[11,"from_string","","Function that is not part of the language but is offered…",126,[[["string",3]],[["u8",3],["seq",3]]]],[11,"from_hex","","This function can be called from hacspec programs but its…",125,[[],["publicseq",3]]],[11,"from_string","","Function that is not part of the language but is offered…",125,[[["string",3]],["publicseq",3]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["seq",3],["u16",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["seq",3],["u32",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["u64",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",126,[[],["string",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",125,[[],["string",3]]],[11,"update","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",114,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",114,[[]]],[18,"NUM_BITS","","",115,null],[11,"get_byte","","This function is within the hacspec subset of Rust: its…",120,[[]]],[14,"generic_array","hacspec_lib","",null,null],[14,"array","","Create a new array with the given name, length, and type.",null,null],[14,"bytes","","Convenience function to create a new byte array (of type…",null,null],[14,"public_bytes","","Convenience function to create a new public byte array (of…",null,null],[14,"secret_array","","",null,null],[14,"secret_bytes","","",null,null],[14,"assert_secret_array_eq","","",null,null],[14,"assert_bytes_eq","","",null,null],[14,"both_arrays","","",null,null],[14,"both_bytes","","",null,null],[14,"unsigned_public_integer","","",null,null],[14,"signed_public_integer","","",null,null],[14,"unsigned_integer","","",null,null],[14,"signed_integer","","",null,null],[14,"nat_mod","","",null,null],[14,"public_nat_mod","","",null,null],[11,"from","hacspec_lib::prelude","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"to_string","","",127,[[],["string",3]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",127,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"to_string","","",128,[[],["string",3]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",128,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",128,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude::traits","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"to_string","","",129,[[],["string",3]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"into_iter","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude::fmt","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","hacspec_lib::seq","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"description","hacspec_lib::prelude","",129,[[]]],[11,"description","hacspec_lib::prelude::fmt","",132,[[]]],[11,"clone","hacspec_lib::prelude","",75,[[],["rangeto",3]]],[11,"clone","","",131,[[],["rangeinclusive",3]]],[11,"clone","hacspec_lib::prelude::fmt","",133,[[],["arguments",3]]],[11,"clone","hacspec_lib::prelude","",42,[[],["ordering",4]]],[11,"clone","","",81,[[],["generatorstate",4]]],[11,"clone","hacspec_lib::prelude::fmt","",132,[[],["error",3]]],[11,"clone","hacspec_lib::prelude","",130,[[],["rangefull",3]]],[11,"clone","","",73,[[],["range",3]]],[11,"clone","","",129,[[],["parseinterror",3]]],[11,"clone","","",76,[[],["bound",4]]],[11,"clone","","",74,[[],["rangefrom",3]]],[11,"clone","","",78,[[],["rangetoinclusive",3]]],[11,"hash","hacspec_lib::prelude::fmt","",132,[[]]],[11,"hash","hacspec_lib::prelude","",131,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",76,[[]]],[11,"next_back","","",73,[[],["option",4]]],[11,"nth_back","","",73,[[],["option",4]]],[11,"next_back","","",131,[[],["option",4]]],[11,"nth_back","","",131,[[],["option",4]]],[11,"try_rfold","","",131,[[]]],[11,"default","hacspec_lib::prelude::fmt","",132,[[],["error",3]]],[11,"next","hacspec_lib::prelude","",131,[[],["option",4]]],[11,"size_hint","","",131,[[]]],[11,"nth","","",131,[[],["option",4]]],[11,"try_fold","","",131,[[]]],[11,"last","","",131,[[],["option",4]]],[11,"min","","",131,[[],["option",4]]],[11,"max","","",131,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"nth","","",73,[[],["option",4]]],[11,"last","","",73,[[],["option",4]]],[11,"min","","",73,[[],["option",4]]],[11,"max","","",73,[[],["option",4]]],[11,"next","","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"nth","","",74,[[],["option",4]]],[11,"eq","","",42,[[["ordering",4]]]],[11,"eq","","",78,[[["rangetoinclusive",3]]]],[11,"ne","","",78,[[["rangetoinclusive",3]]]],[11,"eq","","",131,[[["rangeinclusive",3]]]],[11,"ne","","",131,[[["rangeinclusive",3]]]],[11,"eq","hacspec_lib::prelude::fmt","",132,[[["error",3]]]],[11,"eq","hacspec_lib::prelude","",73,[[["range",3]]]],[11,"ne","","",73,[[["range",3]]]],[11,"eq","","",76,[[["bound",4]]]],[11,"ne","","",76,[[["bound",4]]]],[11,"eq","","",75,[[["rangeto",3]]]],[11,"ne","","",75,[[["rangeto",3]]]],[11,"eq","","",130,[[["rangefull",3]]]],[11,"eq","","",81,[[["generatorstate",4]]]],[11,"ne","","",81,[[["generatorstate",4]]]],[11,"eq","","",74,[[["rangefrom",3]]]],[11,"ne","","",74,[[["rangefrom",3]]]],[11,"eq","","",129,[[["parseinterror",3]]]],[11,"ne","","",129,[[["parseinterror",3]]]],[11,"cmp","","",81,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","hacspec_lib::prelude::fmt","",132,[[["error",3]],["ordering",4]]],[11,"cmp","hacspec_lib::prelude","",42,[[["ordering",4]],["ordering",4]]],[11,"fmt","hacspec_lib::prelude::fmt","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",130,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",131,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",94,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",131,[[],["bound",4]]],[11,"end_bound","","",131,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",130,[[],["bound",4]]],[11,"end_bound","","",130,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",131,[[],["bound",4]]],[11,"end_bound","","",131,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"partial_cmp","","",81,[[["generatorstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",81,[[["generatorstate",4]]]],[11,"le","","",81,[[["generatorstate",4]]]],[11,"gt","","",81,[[["generatorstate",4]]]],[11,"ge","","",81,[[["generatorstate",4]]]],[11,"partial_cmp","","",42,[[["ordering",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","hacspec_lib::prelude::fmt","",132,[[["error",3]],[["option",4],["ordering",4]]]],[11,"get","hacspec_lib::prelude","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",130,[[],["option",4]]],[11,"get_mut","","",130,[[],["option",4]]],[11,"get_unchecked","","",130,[[]]],[11,"get_unchecked_mut","","",130,[[]]],[11,"index","","",130,[[]]],[11,"index_mut","","",130,[[]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",131,[[],["option",4]]],[11,"get_mut","","",131,[[],["option",4]]],[11,"get_unchecked","","",131,[[]]],[11,"get_unchecked_mut","","",131,[[]]],[11,"index","","",131,[[]]],[11,"index_mut","","",131,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",131,[[],["option",4]]],[11,"get_mut","","",131,[[],["option",4]]],[11,"get_unchecked","","",131,[[]]],[11,"get_unchecked_mut","","",131,[[]]],[11,"index","","",131,[[]]],[11,"index_mut","","",131,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",130,[[],["option",4]]],[11,"get_mut","","",130,[[],["option",4]]],[11,"get_unchecked","","",130,[[]]],[11,"get_unchecked_mut","","",130,[[]]],[11,"index","","",130,[[]]],[11,"index_mut","","",130,[[]]],[11,"write_str","hacspec_lib::prelude::fmt","",139,[[],[["result",4],["error",3]]]],[11,"write_char","","",139,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",139,[[["arguments",3]],[["result",4],["error",3]]]],[11,"bitxor","hacspec_lib::prelude","",127,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",128,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",127,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",128,[[["bigint",3]],["bigint",3]]],[11,"hash","","",0,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"neg","","",128,[[],["bigint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"bitand_assign","","",127,[[["biguint",3]]]],[11,"bitand_assign","","",127,[[["biguint",3]]]],[11,"bitand_assign","","",128,[[["bigint",3]]]],[11,"bitand_assign","","",128,[[["bigint",3]]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[["biguint",3]],["biguint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[["biguint",3]],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[["bigint",3]],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[],["bigint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",127,[[],["biguint",3]]],[11,"add","","",128,[[["bigint",3]],["bigint",3]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",128,[[],["bigint",3]]],[11,"shl","","",127,[[],["biguint",3]]],[11,"default","","",127,[[],["biguint",3]]],[11,"default","","",128,[[],["bigint",3]]],[11,"bitand","","",128,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",127,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",128,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",127,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"from_i64","","",128,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",128,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",128,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",128,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",128,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",127,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",127,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",127,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",127,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",127,[[],[["biguint",3],["option",4]]]],[11,"clone","","",128,[[],["bigint",3]]],[11,"clone_from","","",128,[[["bigint",3]]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",127,[[],["biguint",3]]],[11,"clone_from","","",127,[[["biguint",3]]]],[11,"to_biguint","","",127,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",128,[[],[["biguint",3],["option",4]]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[["bigint",3]]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[["biguint",3]]]],[11,"rem_assign","","",128,[[["bigint",3]]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[["biguint",3]]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"from","","",128,[[["biguint",3]],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",128,[[],["bigint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"from","","",127,[[],["biguint",3]]],[11,"eq","","",128,[[["bigint",3]]]],[11,"eq","","",127,[[["biguint",3]]]],[11,"eq","","",0,[[["sign",4]]]],[11,"nth_root","","",128,[[],["bigint",3]]],[11,"sqrt","","",128,[[],["bigint",3]]],[11,"cbrt","","",128,[[],["bigint",3]]],[11,"nth_root","","",127,[[],["biguint",3]]],[11,"sqrt","","",127,[[],["biguint",3]]],[11,"cbrt","","",127,[[],["biguint",3]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[["bigint",3]]]],[11,"mul_assign","","",127,[[["biguint",3]]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[["bigint",3]]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[["biguint",3]]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",127,[[],["biguint",3]]],[11,"shr","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",127,[[["biguint",3]],["biguint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[["bigint",3]],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",127,[[["biguint",3]],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",128,[[["bigint",3]],["bigint",3]]],[11,"mul","","",128,[[],["bigint",3]]],[11,"mul","","",127,[[],["biguint",3]]],[11,"cmp","","",128,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",127,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"abs","","",128,[[],["bigint",3]]],[11,"abs_sub","","",128,[[["bigint",3]],["bigint",3]]],[11,"signum","","",128,[[],["bigint",3]]],[11,"is_positive","","",128,[[]]],[11,"is_negative","","",128,[[]]],[11,"sum","","",127,[[],["biguint",3]]],[11,"sum","","",128,[[],["bigint",3]]],[11,"product","","",128,[[],["bigint",3]]],[11,"product","","",127,[[],["biguint",3]]],[11,"div_rem","","",127,[[["biguint",3]]]],[11,"div_floor","","",127,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",127,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",127,[[["biguint",3]]]],[11,"div_ceil","","",127,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",127,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",127,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",127,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",127,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",127,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",127,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",127,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",127,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",127,[[["biguint",3]],["biguint",3]]],[11,"div_rem","","",128,[[["bigint",3]]]],[11,"div_floor","","",128,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",128,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",128,[[["bigint",3]]]],[11,"div_ceil","","",128,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",128,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",128,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",128,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",128,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",128,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",128,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",128,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",128,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",128,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",128,[[["bigint",3]],["bigint",3]]],[11,"checked_div","","",127,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"not","","",128,[[],["bigint",3]]],[11,"checked_mul","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",127,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"bitxor_assign","","",128,[[["bigint",3]]]],[11,"bitxor_assign","","",128,[[["bigint",3]]]],[11,"bitxor_assign","","",127,[[["biguint",3]]]],[11,"bitxor_assign","","",127,[[["biguint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",127,[[],[["biguint",3],["parsebiginterror",3],["result",4]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",128,[[],[["bigint",3],["parsebiginterror",3],["result",4]]]],[11,"div","","",127,[[["biguint",3]],["biguint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[["biguint",3]],["biguint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[["bigint",3]],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[["bigint",3]],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",127,[[],["biguint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"div","","",128,[[],["bigint",3]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[["bigint",3]],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[["bigint",3]],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",127,[[["biguint",3]],["biguint",3]]],[11,"rem","","",127,[[["biguint",3]],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",128,[[],["bigint",3]]],[11,"rem","","",127,[[],["biguint",3]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",127,[[["bigint",3]],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",127,[[["bigint",3]],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"from_str","","",128,[[],[["bigint",3],["parsebiginterror",3],["result",4]]]],[11,"from_str","","",127,[[],[["biguint",3],["parsebiginterror",3],["result",4]]]],[11,"to_i64","","",128,[[],["option",4]]],[11,"to_i128","","",128,[[],["option",4]]],[11,"to_u64","","",128,[[],["option",4]]],[11,"to_u128","","",128,[[],["option",4]]],[11,"to_f32","","",128,[[],["option",4]]],[11,"to_f64","","",128,[[],["option",4]]],[11,"to_i64","","",127,[[],["option",4]]],[11,"to_i128","","",127,[[],["option",4]]],[11,"to_u64","","",127,[[],["option",4]]],[11,"to_u128","","",127,[[],["option",4]]],[11,"to_f32","","",127,[[],["option",4]]],[11,"to_f64","","",127,[[],["option",4]]],[11,"div_assign","","",127,[[["biguint",3]]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[["bigint",3]]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[["bigint",3]]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[["biguint",3]]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"one","","",128,[[],["bigint",3]]],[11,"set_one","","",128,[[]]],[11,"is_one","","",128,[[]]],[11,"one","","",127,[[],["biguint",3]]],[11,"set_one","","",127,[[]]],[11,"is_one","","",127,[[]]],[11,"zero","","",127,[[],["biguint",3]]],[11,"set_zero","","",127,[[]]],[11,"is_zero","","",127,[[]]],[11,"zero","","",128,[[],["bigint",3]]],[11,"set_zero","","",128,[[]]],[11,"is_zero","","",128,[[]]],[11,"checked_add","","",127,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_add","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[["biguint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[["bigint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[["bigint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[["biguint",3]]]],[11,"add_assign","","",127,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[["bigint",3]]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[["bigint",3]]]],[11,"sub_assign","","",127,[[["biguint",3]]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[["biguint",3]]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"bitor_assign","","",127,[[["biguint",3]]]],[11,"bitor_assign","","",127,[[["biguint",3]]]],[11,"bitor_assign","","",128,[[["bigint",3]]]],[11,"bitor_assign","","",128,[[["bigint",3]]]],[11,"bitor","","",127,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",127,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",128,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",128,[[["bigint",3]],["bigint",3]]],[11,"checked_sub","","",127,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",128,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",127,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",128,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",127,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",127,[[["biguint",3]],["biguint",3]]],[11,"sub","","",127,[[["biguint",3]],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[["bigint",3]],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[],["bigint",3]]],[11,"sub","","",127,[[],["biguint",3]]],[11,"sub","","",128,[[["bigint",3]],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[["biguint",3]],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",128,[[["biguint",3]],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[["biguint",3]],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[["biguint",3]],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"pow","","",128,[[],["bigint",3]]],[11,"pow","","",127,[[],["biguint",3]]],[11,"fmt","hacspec_lib::prelude::traits","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shr","hacspec_lib::prelude","",86,[[],["u128",3]]],[11,"shr","","",91,[[],["i128",3]]],[11,"shr","","",89,[[],["i32",3]]],[11,"shr","","",83,[[],["u16",3]]],[11,"shr","","",82,[[],["u8",3]]],[11,"shr","","",87,[[],["i8",3]]],[11,"shr","","",88,[[],["i16",3]]],[11,"shr","","",84,[[],["u32",3]]],[11,"shr","","",85,[[],["u64",3]]],[11,"shr","","",90,[[],["i64",3]]],[11,"bitxor","","",87,[[["i8",3]],["i8",3]]],[11,"bitxor","","",85,[[["u64",3]],["u64",3]]],[11,"bitxor","","",86,[[["u128",3]],["u128",3]]],[11,"bitxor","","",90,[[["i64",3]],["i64",3]]],[11,"bitxor","","",83,[[["u16",3]],["u16",3]]],[11,"bitxor","","",88,[[["i16",3]],["i16",3]]],[11,"bitxor","","",84,[[["u32",3]],["u32",3]]],[11,"bitxor","","",82,[[["u8",3]],["u8",3]]],[11,"bitxor","","",91,[[["i128",3]],["i128",3]]],[11,"bitxor","","",89,[[["i32",3]],["i32",3]]],[11,"mul_assign","","",85,[[["u64",3]]]],[11,"mul_assign","","",84,[[["u32",3]]]],[11,"mul_assign","","",90,[[["i64",3]]]],[11,"mul_assign","","",87,[[["i8",3]]]],[11,"mul_assign","","",83,[[["u16",3]]]],[11,"mul_assign","","",86,[[["u128",3]]]],[11,"mul_assign","","",82,[[["u8",3]]]],[11,"mul_assign","","",91,[[["i128",3]]]],[11,"mul_assign","","",89,[[["i32",3]]]],[11,"mul_assign","","",88,[[["i16",3]]]],[11,"shl","","",82,[[],["u8",3]]],[11,"shl","","",86,[[],["u128",3]]],[11,"shl","","",83,[[],["u16",3]]],[11,"shl","","",84,[[],["u32",3]]],[11,"shl","","",90,[[],["i64",3]]],[11,"shl","","",87,[[],["i8",3]]],[11,"shl","","",85,[[],["u64",3]]],[11,"shl","","",91,[[],["i128",3]]],[11,"shl","","",89,[[],["i32",3]]],[11,"shl","","",88,[[],["i16",3]]],[11,"bitand_assign","","",83,[[["u16",3]]]],[11,"bitand_assign","","",88,[[["i16",3]]]],[11,"bitand_assign","","",91,[[["i128",3]]]],[11,"bitand_assign","","",87,[[["i8",3]]]],[11,"bitand_assign","","",85,[[["u64",3]]]],[11,"bitand_assign","","",82,[[["u8",3]]]],[11,"bitand_assign","","",84,[[["u32",3]]]],[11,"bitand_assign","","",86,[[["u128",3]]]],[11,"bitand_assign","","",89,[[["i32",3]]]],[11,"bitand_assign","","",90,[[["i64",3]]]],[11,"default","","",87,[[],["i8",3]]],[11,"default","","",82,[[],["u8",3]]],[11,"default","","",88,[[],["i16",3]]],[11,"default","","",84,[[],["u32",3]]],[11,"default","","",89,[[],["i32",3]]],[11,"default","","",91,[[],["i128",3]]],[11,"default","","",83,[[],["u16",3]]],[11,"default","","",85,[[],["u64",3]]],[11,"default","","",90,[[],["i64",3]]],[11,"default","","",86,[[],["u128",3]]],[11,"bitand","","",91,[[["i128",3]],["i128",3]]],[11,"bitand","","",87,[[["i8",3]],["i8",3]]],[11,"bitand","","",88,[[["i16",3]],["i16",3]]],[11,"bitand","","",82,[[["u8",3]],["u8",3]]],[11,"bitand","","",86,[[["u128",3]],["u128",3]]],[11,"bitand","","",85,[[["u64",3]],["u64",3]]],[11,"bitand","","",90,[[["i64",3]],["i64",3]]],[11,"bitand","","",84,[[["u32",3]],["u32",3]]],[11,"bitand","","",89,[[["i32",3]],["i32",3]]],[11,"bitand","","",83,[[["u16",3]],["u16",3]]],[11,"mul","","",87,[[["i8",3]],["i8",3]]],[11,"mul","","",88,[[["i16",3]],["i16",3]]],[11,"mul","","",86,[[["u128",3]],["u128",3]]],[11,"mul","","",83,[[["u16",3]],["u16",3]]],[11,"mul","","",82,[[["u8",3]],["u8",3]]],[11,"mul","","",89,[[["i32",3]],["i32",3]]],[11,"mul","","",84,[[["u32",3]],["u32",3]]],[11,"mul","","",85,[[["u64",3]],["u64",3]]],[11,"mul","","",91,[[["i128",3]],["i128",3]]],[11,"mul","","",90,[[["i64",3]],["i64",3]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",84,[[]]],[11,"shr_assign","","",89,[[]]],[11,"shr_assign","","",85,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",90,[[]]],[11,"shr_assign","","",87,[[]]],[11,"shr_assign","","",86,[[]]],[11,"shr_assign","","",91,[[]]],[11,"shr_assign","","",88,[[]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","",82,[[["u8",3]]]],[11,"bitxor_assign","","",90,[[["i64",3]]]],[11,"bitxor_assign","","",84,[[["u32",3]]]],[11,"bitxor_assign","","",86,[[["u128",3]]]],[11,"bitxor_assign","","",87,[[["i8",3]]]],[11,"bitxor_assign","","",88,[[["i16",3]]]],[11,"bitxor_assign","","",89,[[["i32",3]]]],[11,"bitxor_assign","","",83,[[["u16",3]]]],[11,"bitxor_assign","","",91,[[["i128",3]]]],[11,"bitxor_assign","","",85,[[["u64",3]]]],[11,"neg","","",89,[[],["i32",3]]],[11,"neg","","",84,[[],["u32",3]]],[11,"neg","","",82,[[],["u8",3]]],[11,"neg","","",83,[[],["u16",3]]],[11,"neg","","",91,[[],["i128",3]]],[11,"neg","","",86,[[],["u128",3]]],[11,"neg","","",88,[[],["i16",3]]],[11,"neg","","",87,[[],["i8",3]]],[11,"neg","","",85,[[],["u64",3]]],[11,"neg","","",90,[[],["i64",3]]],[11,"bitor","","",83,[[["u16",3]],["u16",3]]],[11,"bitor","","",86,[[["u128",3]],["u128",3]]],[11,"bitor","","",89,[[["i32",3]],["i32",3]]],[11,"bitor","","",82,[[["u8",3]],["u8",3]]],[11,"bitor","","",85,[[["u64",3]],["u64",3]]],[11,"bitor","","",88,[[["i16",3]],["i16",3]]],[11,"bitor","","",84,[[["u32",3]],["u32",3]]],[11,"bitor","","",87,[[["i8",3]],["i8",3]]],[11,"bitor","","",90,[[["i64",3]],["i64",3]]],[11,"bitor","","",91,[[["i128",3]],["i128",3]]],[11,"from","","",89,[[["i8",3]],["i32",3]]],[11,"from","","",88,[[["i32",3]],["i16",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",85,[[["i64",3]],["u64",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",84,[[["u128",3]],["u32",3]]],[11,"from","","",84,[[["i32",3]],["u32",3]]],[11,"from","","",86,[[["u32",3]],["u128",3]]],[11,"from","","",85,[[["u128",3]],["u64",3]]],[11,"from","","",88,[[["u16",3]],["i16",3]]],[11,"from","","",88,[[],["i16",3]]],[11,"from","","",87,[[["i128",3]],["i8",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",88,[[["i128",3]],["i16",3]]],[11,"from","","",83,[[["u128",3]],["u16",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",87,[[["i64",3]],["i8",3]]],[11,"from","","",88,[[["i8",3]],["i16",3]]],[11,"from","","",85,[[["u8",3]],["u64",3]]],[11,"from","","",87,[[],["i8",3]]],[11,"from","","",82,[[],["u8",3]]],[11,"from","","",84,[[["u16",3]],["u32",3]]],[11,"from","","",85,[[["u16",3]],["u64",3]]],[11,"from","","",88,[[["i64",3]],["i16",3]]],[11,"from","","",83,[[["u32",3]],["u16",3]]],[11,"from","","",91,[[["i8",3]],["i128",3]]],[11,"from","","",82,[[["u32",3]],["u8",3]]],[11,"from","","",83,[[["u8",3]],["u16",3]]],[11,"from","","",89,[[["i64",3]],["i32",3]]],[11,"from","","",82,[[["u64",3]],["u8",3]]],[11,"from","","",86,[[["i128",3]],["u128",3]]],[11,"from","","",91,[[["i16",3]],["i128",3]]],[11,"from","","",89,[[["i128",3]],["i32",3]]],[11,"from","","",82,[[],["u8",3]]],[11,"from","","",82,[[["u128",3]],["u8",3]]],[11,"from","","",86,[[["u8",3]],["u128",3]]],[11,"from","","",84,[[["u8",3]],["u32",3]]],[11,"from","","",83,[[["u64",3]],["u16",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",87,[[["u8",3]],["i8",3]]],[11,"from","","",83,[[["i16",3]],["u16",3]]],[11,"from","","",89,[[["u32",3]],["i32",3]]],[11,"from","","",90,[[["i8",3]],["i64",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",89,[[["i16",3]],["i32",3]]],[11,"from","","",89,[[],["i32",3]]],[11,"from","","",91,[[["i64",3]],["i128",3]]],[11,"from","","",86,[[["u64",3]],["u128",3]]],[11,"from","","",91,[[],["i128",3]]],[11,"from","","",87,[[["i16",3]],["i8",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",90,[[["i16",3]],["i64",3]]],[11,"from","","",91,[[["i32",3]],["i128",3]]],[11,"from","","",85,[[["u32",3]],["u64",3]]],[11,"from","","",84,[[["u64",3]],["u32",3]]],[11,"from","","",83,[[],["u16",3]]],[11,"from","","",91,[[["u128",3]],["i128",3]]],[11,"from","","",87,[[["i32",3]],["i8",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",83,[[],["u16",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",82,[[["u16",3]],["u8",3]]],[11,"from","","",86,[[["u16",3]],["u128",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",82,[[["i8",3]],["u8",3]]],[11,"from","","",90,[[["i128",3]],["i64",3]]],[11,"from","","",90,[[],["i64",3]]],[11,"from","","",90,[[["i32",3]],["i64",3]]],[11,"from","","",90,[[["u64",3]],["i64",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"add","","",91,[[["i128",3]],["i128",3]]],[11,"add","","",88,[[["i16",3]],["i16",3]]],[11,"add","","",90,[[["i64",3]],["i64",3]]],[11,"add","","",85,[[["u64",3]],["u64",3]]],[11,"add","","",84,[[["u32",3]],["u32",3]]],[11,"add","","",87,[[["i8",3]],["i8",3]]],[11,"add","","",89,[[["i32",3]],["i32",3]]],[11,"add","","",82,[[["u8",3]],["u8",3]]],[11,"add","","",83,[[["u16",3]],["u16",3]]],[11,"add","","",86,[[["u128",3]],["u128",3]]],[11,"bitor_assign","","",91,[[["i128",3]]]],[11,"bitor_assign","","",89,[[["i32",3]]]],[11,"bitor_assign","","",86,[[["u128",3]]]],[11,"bitor_assign","","",84,[[["u32",3]]]],[11,"bitor_assign","","",88,[[["i16",3]]]],[11,"bitor_assign","","",90,[[["i64",3]]]],[11,"bitor_assign","","",83,[[["u16",3]]]],[11,"bitor_assign","","",87,[[["i8",3]]]],[11,"bitor_assign","","",85,[[["u64",3]]]],[11,"bitor_assign","","",82,[[["u8",3]]]],[11,"clone","","",86,[[],["u128",3]]],[11,"clone","","",90,[[],["i64",3]]],[11,"clone","","",84,[[],["u32",3]]],[11,"clone","","",82,[[],["u8",3]]],[11,"clone","","",85,[[],["u64",3]]],[11,"clone","","",89,[[],["i32",3]]],[11,"clone","","",88,[[],["i16",3]]],[11,"clone","","",87,[[],["i8",3]]],[11,"clone","","",91,[[],["i128",3]]],[11,"clone","","",83,[[],["u16",3]]],[11,"sub_assign","","",84,[[["u32",3]]]],[11,"sub_assign","","",82,[[["u8",3]]]],[11,"sub_assign","","",89,[[["i32",3]]]],[11,"sub_assign","","",87,[[["i8",3]]]],[11,"sub_assign","","",83,[[["u16",3]]]],[11,"sub_assign","","",86,[[["u128",3]]]],[11,"sub_assign","","",88,[[["i16",3]]]],[11,"sub_assign","","",91,[[["i128",3]]]],[11,"sub_assign","","",85,[[["u64",3]]]],[11,"sub_assign","","",90,[[["i64",3]]]],[11,"sub","","",85,[[["u64",3]],["u64",3]]],[11,"sub","","",88,[[["i16",3]],["i16",3]]],[11,"sub","","",82,[[["u8",3]],["u8",3]]],[11,"sub","","",90,[[["i64",3]],["i64",3]]],[11,"sub","","",89,[[["i32",3]],["i32",3]]],[11,"sub","","",87,[[["i8",3]],["i8",3]]],[11,"sub","","",86,[[["u128",3]],["u128",3]]],[11,"sub","","",84,[[["u32",3]],["u32",3]]],[11,"sub","","",83,[[["u16",3]],["u16",3]]],[11,"sub","","",91,[[["i128",3]],["i128",3]]],[11,"shl_assign","","",87,[[]]],[11,"shl_assign","","",89,[[]]],[11,"shl_assign","","",84,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",85,[[]]],[11,"shl_assign","","",88,[[]]],[11,"shl_assign","","",91,[[]]],[11,"shl_assign","","",90,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",86,[[]]],[11,"not","","",85,[[],["u64",3]]],[11,"not","","",83,[[],["u16",3]]],[11,"not","","",91,[[],["i128",3]]],[11,"not","","",86,[[],["u128",3]]],[11,"not","","",90,[[],["i64",3]]],[11,"not","","",87,[[],["i8",3]]],[11,"not","","",82,[[],["u8",3]]],[11,"not","","",88,[[],["i16",3]]],[11,"not","","",89,[[],["i32",3]]],[11,"not","","",84,[[],["u32",3]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add_assign","","",85,[[["u64",3]]]],[11,"add_assign","","",86,[[["u128",3]]]],[11,"add_assign","","",82,[[["u8",3]]]],[11,"add_assign","","",88,[[["i16",3]]]],[11,"add_assign","","",87,[[["i8",3]]]],[11,"add_assign","","",91,[[["i128",3]]]],[11,"add_assign","","",84,[[["u32",3]]]],[11,"add_assign","","",90,[[["i64",3]]]],[11,"add_assign","","",89,[[["i32",3]]]],[11,"add_assign","","",83,[[["u16",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"create","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"len","","This function can be called from hacspec programs but its…",106,[[]]],[11,"iter","","Function that is not part of the language but is offered…",106,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"len","","This function can be called from hacspec programs but its…",107,[[]]],[11,"iter","","Function that is not part of the language but is offered…",107,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"len","","This function can be called from hacspec programs but its…",108,[[]]],[11,"iter","","Function that is not part of the language but is offered…",108,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"len","","This function can be called from hacspec programs but its…",109,[[]]],[11,"iter","","Function that is not part of the language but is offered…",109,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"len","","This function can be called from hacspec programs but its…",110,[[]]],[11,"iter","","Function that is not part of the language but is offered…",110,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"len","","This function can be called from hacspec programs but its…",111,[[]]],[11,"iter","","Function that is not part of the language but is offered…",111,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"len","","This function can be called from hacspec programs but its…",112,[[]]],[11,"iter","","Function that is not part of the language but is offered…",112,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"len","","This function can be called from hacspec programs but its…",113,[[]]],[11,"iter","","Function that is not part of the language but is offered…",113,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"create","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"len","","This function can be called from hacspec programs but its…",124,[[]]],[11,"iter","","Function that is not part of the language but is offered…",124,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"len","","This function can be called from hacspec programs but its…",125,[[]]],[11,"iter","","Function that is not part of the language but is offered…",125,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"len","","This function can be called from hacspec programs but its…",126,[[]]],[11,"iter","","Function that is not part of the language but is offered…",126,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"ZERO","hacspec_lib::prelude","Function that is not part of the language but is offered…",128,[[]]],[11,"ONE","","Function that is not part of the language but is offered…",128,[[]]],[11,"TWO","","Function that is not part of the language but is offered…",128,[[]]],[11,"from_literal","","Function that is not part of the language but is offered…",128,[[]]],[11,"from_hex_string","","Function that is not part of the language but is offered…",128,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",128,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",128,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",128,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",128,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",128,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",82,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",83,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",84,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",85,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",86,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",87,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",88,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",89,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",90,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",91,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"classify","","Function that is not part of the language but is offered…",128,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"classify","","",87,[[]]],[11,"classify","","",88,[[]]],[11,"classify","","",89,[[]]],[11,"classify","","",90,[[]]],[11,"classify","","",91,[[]]],[11,"classify","","",82,[[]]],[11,"classify","","",83,[[]]],[11,"classify","","",84,[[]]],[11,"classify","","",85,[[]]],[11,"classify","","",86,[[]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",82,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",82,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",82,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",82,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",83,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",83,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",83,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",83,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",84,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",84,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",84,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",84,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",85,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",85,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",85,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",85,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",86,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",86,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",86,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",86,[[["seq",3]]]],[11,"sub_mod","","Function that is not part of the language but is offered…",128,[[]]],[11,"add_mod","","Function that is not part of the language but is offered…",128,[[]]],[11,"mul_mod","","Function that is not part of the language but is offered…",128,[[]]],[11,"pow_mod","","Function that is not part of the language but is offered…",128,[[]]],[11,"modulo","","Function that is not part of the language but is offered…",128,[[]]],[11,"signed_modulo","","Function that is not part of the language but is offered…",128,[[]]],[11,"absolute","","Function that is not part of the language but is offered…",128,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"signed_modulo","","",106,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"signed_modulo","","",107,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"signed_modulo","","",108,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"signed_modulo","","",109,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",110,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",111,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",112,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",113,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"sub_mod","hacspec_lib::seq","(self - rhs) % n.",125,[[]]],[11,"add_mod","","`(self + rhs) % n`",125,[[]]],[11,"mul_mod","","`(self * rhs) % n`",125,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",125,[[]]],[11,"modulo","","`self % n`",125,[[]]],[11,"signed_modulo","","",125,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"sub_mod","","(self - rhs) % n.",126,[[]]],[11,"add_mod","","`(self + rhs) % n`",126,[[]]],[11,"mul_mod","","`(self * rhs) % n`",126,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",126,[[]]],[11,"modulo","","`self % n`",126,[[]]],[11,"signed_modulo","","",126,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"max_val","hacspec_lib::prelude","Function that is not part of the language but is offered…",128,[[]]],[11,"wrap_add","","Function that is not part of the language but is offered…",128,[[]]],[11,"wrap_sub","","Function that is not part of the language but is offered…",128,[[]]],[11,"wrap_mul","","Function that is not part of the language but is offered…",128,[[]]],[11,"wrap_div","","Function that is not part of the language but is offered…",128,[[]]],[11,"exp","","Function that is not part of the language but is offered…",128,[[]]],[11,"pow_self","","Function that is not part of the language but is offered…",128,[[]]],[11,"divide","","Function that is not part of the language but is offered…",128,[[]]],[11,"inv","","Function that is not part of the language but is offered…",128,[[]]],[11,"equal","","Function that is not part of the language but is offered…",128,[[]]],[11,"greater_than","","Function that is not part of the language but is offered…",128,[[]]],[11,"greater_than_or_qual","","Function that is not part of the language but is offered…",128,[[]]],[11,"less_than","","Function that is not part of the language but is offered…",128,[[]]],[11,"less_than_or_equal","","Function that is not part of the language but is offered…",128,[[]]],[11,"not_equal_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"equal_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"greater_than_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"greater_than_or_equal_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"less_than_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"less_than_or_equal_bm","","Function that is not part of the language but is offered…",128,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"max_val","hacspec_lib::seq","Return largest value that can be represented.",125,[[]]],[11,"wrap_add","","",125,[[]]],[11,"wrap_sub","","",125,[[]]],[11,"wrap_mul","","",125,[[]]],[11,"wrap_div","","",125,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",125,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",125,[[]]],[11,"divide","","Division.",125,[[]]],[11,"inv","","Invert self modulo n.",125,[[]]],[11,"equal","","",125,[[]]],[11,"greater_than","","",125,[[]]],[11,"greater_than_or_qual","","",125,[[]]],[11,"less_than","","",125,[[]]],[11,"less_than_or_equal","","",125,[[]]],[11,"not_equal_bm","","",125,[[]]],[11,"equal_bm","","",125,[[]]],[11,"greater_than_bm","","",125,[[]]],[11,"greater_than_or_equal_bm","","",125,[[]]],[11,"less_than_bm","","",125,[[]]],[11,"less_than_or_equal_bm","","",125,[[]]],[11,"max_val","","Return largest value that can be represented.",126,[[]]],[11,"wrap_add","","",126,[[]]],[11,"wrap_sub","","",126,[[]]],[11,"wrap_mul","","",126,[[]]],[11,"wrap_div","","",126,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",126,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",126,[[]]],[11,"divide","","Division.",126,[[]]],[11,"inv","","Invert self modulo n.",126,[[]]],[11,"equal","","",126,[[]]],[11,"greater_than","","",126,[[]]],[11,"greater_than_or_qual","","",126,[[]]],[11,"less_than","","",126,[[]]],[11,"less_than_or_equal","","",126,[[]]],[11,"not_equal_bm","","",126,[[]]],[11,"equal_bm","","",126,[[]]],[11,"greater_than_bm","","",126,[[]]],[11,"greater_than_or_equal_bm","","",126,[[]]],[11,"less_than_bm","","",126,[[]]],[11,"less_than_or_equal_bm","","",126,[[]]],[11,"clone","hacspec_lib::prelude","",106,[[],["u16word",3]]],[11,"clone","","",107,[[],["u32word",3]]],[11,"clone","","",108,[[],["u64word",3]]],[11,"clone","","",109,[[],["u128word",3]]],[11,"clone","","",110,[[],["u16word",3]]],[11,"clone","","",111,[[],["u32word",3]]],[11,"clone","","",112,[[],["u64word",3]]],[11,"clone","","",113,[[],["u128word",3]]],[11,"clone","hacspec_lib::seq","",124,[[],["secretseq",3]]],[11,"clone","","",125,[[],["publicseq",3]]],[11,"clone","","",126,[[],["seq",3]]],[11,"default","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"default","hacspec_lib::seq","",124,[[],["secretseq",3]]],[11,"default","","",125,[[],["publicseq",3]]],[11,"default","","",126,[[],["seq",3]]],[11,"cmp","hacspec_lib::prelude","This function can be called from hacspec programs but its…",110,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",111,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",112,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",113,[[],["ordering",4]]],[11,"eq","","This function can be called from hacspec programs but its…",110,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",111,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",112,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",113,[[]]],[11,"eq","hacspec_lib::seq","Function that is not part of the language but is offered…",126,[[]]],[11,"partial_cmp","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",110,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",111,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",112,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",113,[[],[["option",4],["ordering",4]]]],[11,"fmt","","Function that is not part of the language but is offered…",106,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",107,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",108,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",109,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",110,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",111,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",112,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",113,[[["formatter",3]],["result",6]]],[11,"fmt","hacspec_lib::seq","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"div","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"sub","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"add","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"add","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"add","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"mul","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"mul","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"not","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"not","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitand","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitand","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitor","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitor","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitxor","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitxor","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"shl","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"shl","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"shr","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"shr","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"index","hacspec_lib::prelude","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[["rangefull",3]]]],[11,"index","hacspec_lib::seq","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[["range",3]]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[["range",3]]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[["range",3]]]],[11,"index_mut","hacspec_lib::prelude","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","hacspec_lib::seq","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"new","hacspec_lib::prelude","Creates and initializes a `BigUint`.",127,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",127,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",127,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",127,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",127,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",127,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",127,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",127,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",127,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",127,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",127,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",127,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",127,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",127,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",127,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",127,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",127,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",127,[[]]],[11,"pow","","Returns `self ^ exponent`.",127,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",127,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",127,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",127,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",127,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",127,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",127,[[]]],[11,"count_ones","","Returns the number of one bits.",127,[[]]],[11,"bit","","Returns whether the bit in the given position is set",127,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",127,[[]]],[11,"new","","Creates and initializes a BigInt.",128,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",128,[[["sign",4],["biguint",3]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",128,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",128,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",128,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",128,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",128,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",128,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",128,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",128,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",128,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",128,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",128,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",128,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",128,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",128,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",128,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",128,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",128,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",128,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",128,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",128,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",128,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",128,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",128,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",128,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",128,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",128,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",128,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",128,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",128,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",128,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",128,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",128,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",128,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",128,[[]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",129,[[],["interrorkind",4]]],[11,"reverse","","Reverses the `Ordering`.",42,[[],["ordering",4]]],[11,"then","","Chains two orderings.",42,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",42,[[],["ordering",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",73,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",73,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",74,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",75,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",76,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",131,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",131,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",131,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",131,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",131,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",131,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",78,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",82,[[["u8",3]],["u8",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"classify","","",82,[[],["u8",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",82,[[]]],[11,"zero","","",82,[[],["u8",3]]],[11,"one","","",82,[[],["u8",3]]],[11,"ones","","",82,[[],["u8",3]]],[11,"from_le_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"to_le_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"to_be_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",82,[[],["u8",3]]],[11,"rotate_left","","",82,[[],["u8",3]]],[11,"rotate_right","","",82,[[],["u8",3]]],[11,"checked_add","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"checked_sub","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"checked_mul","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",83,[[["u16",3]],["u16",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"classify","","",83,[[],["u16",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",83,[[]]],[11,"zero","","",83,[[],["u16",3]]],[11,"one","","",83,[[],["u16",3]]],[11,"ones","","",83,[[],["u16",3]]],[11,"from_le_bytes","","",83,[[],[["vec",3],["u16",3]]]],[11,"to_le_bytes","","",83,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",83,[[],[["vec",3],["u16",3]]]],[11,"to_be_bytes","","",83,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",83,[[],["u16",3]]],[11,"rotate_left","","",83,[[],["u16",3]]],[11,"rotate_right","","",83,[[],["u16",3]]],[11,"checked_add","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"checked_sub","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"checked_mul","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",84,[[["u32",3]],["u32",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"classify","","",84,[[],["u32",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",84,[[]]],[11,"zero","","",84,[[],["u32",3]]],[11,"one","","",84,[[],["u32",3]]],[11,"ones","","",84,[[],["u32",3]]],[11,"from_le_bytes","","",84,[[],[["u32",3],["vec",3]]]],[11,"to_le_bytes","","",84,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",84,[[],[["u32",3],["vec",3]]]],[11,"to_be_bytes","","",84,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",84,[[],["u32",3]]],[11,"rotate_left","","",84,[[],["u32",3]]],[11,"rotate_right","","",84,[[],["u32",3]]],[11,"checked_add","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"checked_sub","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"checked_mul","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",85,[[["u64",3]],["u64",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"classify","","",85,[[],["u64",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",85,[[]]],[11,"zero","","",85,[[],["u64",3]]],[11,"one","","",85,[[],["u64",3]]],[11,"ones","","",85,[[],["u64",3]]],[11,"from_le_bytes","","",85,[[],[["vec",3],["u64",3]]]],[11,"to_le_bytes","","",85,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",85,[[],[["vec",3],["u64",3]]]],[11,"to_be_bytes","","",85,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",85,[[],["u64",3]]],[11,"rotate_left","","",85,[[],["u64",3]]],[11,"rotate_right","","",85,[[],["u64",3]]],[11,"checked_add","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"checked_sub","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"checked_mul","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",86,[[["u128",3]],["u128",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"classify","","",86,[[],["u128",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",86,[[]]],[11,"zero","","",86,[[],["u128",3]]],[11,"one","","",86,[[],["u128",3]]],[11,"ones","","",86,[[],["u128",3]]],[11,"from_le_bytes","","",86,[[],[["vec",3],["u128",3]]]],[11,"to_le_bytes","","",86,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",86,[[],[["vec",3],["u128",3]]]],[11,"to_be_bytes","","",86,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",86,[[],["u128",3]]],[11,"rotate_left","","",86,[[],["u128",3]]],[11,"rotate_right","","",86,[[],["u128",3]]],[11,"checked_add","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"checked_sub","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"checked_mul","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"comp_eq","","",87,[[["i8",3]],["i8",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"classify","","",87,[[],["i8",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",87,[[]]],[11,"zero","","",87,[[],["i8",3]]],[11,"one","","",87,[[],["i8",3]]],[11,"ones","","",87,[[],["i8",3]]],[11,"from_le_bytes","","",87,[[],[["i8",3],["vec",3]]]],[11,"to_le_bytes","","",87,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",87,[[],[["i8",3],["vec",3]]]],[11,"to_be_bytes","","",87,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",87,[[],["i8",3]]],[11,"rotate_left","","",87,[[],["i8",3]]],[11,"rotate_right","","",87,[[],["i8",3]]],[11,"checked_add","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"checked_sub","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"checked_mul","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"comp_eq","","",88,[[["i16",3]],["i16",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"classify","","",88,[[],["i16",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",88,[[]]],[11,"zero","","",88,[[],["i16",3]]],[11,"one","","",88,[[],["i16",3]]],[11,"ones","","",88,[[],["i16",3]]],[11,"from_le_bytes","","",88,[[],[["vec",3],["i16",3]]]],[11,"to_le_bytes","","",88,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",88,[[],[["vec",3],["i16",3]]]],[11,"to_be_bytes","","",88,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",88,[[],["i16",3]]],[11,"rotate_left","","",88,[[],["i16",3]]],[11,"rotate_right","","",88,[[],["i16",3]]],[11,"checked_add","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"checked_sub","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"checked_mul","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"comp_eq","","",89,[[["i32",3]],["i32",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"classify","","",89,[[],["i32",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",89,[[]]],[11,"zero","","",89,[[],["i32",3]]],[11,"one","","",89,[[],["i32",3]]],[11,"ones","","",89,[[],["i32",3]]],[11,"from_le_bytes","","",89,[[],[["vec",3],["i32",3]]]],[11,"to_le_bytes","","",89,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",89,[[],[["vec",3],["i32",3]]]],[11,"to_be_bytes","","",89,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",89,[[],["i32",3]]],[11,"rotate_left","","",89,[[],["i32",3]]],[11,"rotate_right","","",89,[[],["i32",3]]],[11,"checked_add","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"checked_sub","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"checked_mul","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"comp_eq","","",90,[[["i64",3]],["i64",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"classify","","",90,[[],["i64",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",90,[[]]],[11,"zero","","",90,[[],["i64",3]]],[11,"one","","",90,[[],["i64",3]]],[11,"ones","","",90,[[],["i64",3]]],[11,"from_le_bytes","","",90,[[],[["vec",3],["i64",3]]]],[11,"to_le_bytes","","",90,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",90,[[],[["vec",3],["i64",3]]]],[11,"to_be_bytes","","",90,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",90,[[],["i64",3]]],[11,"rotate_left","","",90,[[],["i64",3]]],[11,"rotate_right","","",90,[[],["i64",3]]],[11,"checked_add","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"checked_sub","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"checked_mul","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"comp_eq","","",91,[[["i128",3]],["i128",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"classify","","",91,[[],["i128",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",91,[[]]],[11,"zero","","",91,[[],["i128",3]]],[11,"one","","",91,[[],["i128",3]]],[11,"ones","","",91,[[],["i128",3]]],[11,"from_le_bytes","","",91,[[],[["i128",3],["vec",3]]]],[11,"to_le_bytes","","",91,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",91,[[],[["i128",3],["vec",3]]]],[11,"to_be_bytes","","",91,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",91,[[],["i128",3]]],[11,"rotate_left","","",91,[[],["i128",3]]],[11,"rotate_right","","",91,[[],["i128",3]]],[11,"checked_add","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"checked_sub","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"checked_mul","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"entry","hacspec_lib::prelude::fmt","Adds a new entry to the list output.",134,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",134,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",134,[[],[["result",4],["error",3]]]],[11,"entry","","Adds a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",135,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",135,[[],[["result",4],["error",3]]]],[11,"entry","","Adds a new entry to the set output.",136,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",136,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",136,[[],[["result",4],["error",3]]]],[11,"field","","Adds a new field to the generated struct output.",137,[[["debug",8]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the…",137,[[],[["result",4],["error",3]]]],[11,"finish","","Finishes output and returns any error encountered.",137,[[],[["result",4],["error",3]]]],[11,"field","","Adds a new field to the generated tuple struct output.",138,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",138,[[],[["result",4],["error",3]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",139,[[],[["result",4],["error",3]]]],[11,"pad","","This function takes a string slice and emits it to the…",139,[[],[["result",4],["error",3]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",139,[[],[["result",4],["error",3]]]],[11,"write_fmt","","Writes some formatted information into this instance.",139,[[["arguments",3]],[["result",4],["error",3]]]],[11,"flags","","Flags for formatting",139,[[]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",139,[[]]],[11,"align","","Flag indicating what form of alignment was requested.",139,[[],[["option",4],["alignment",4]]]],[11,"width","","Optionally specified integer width that the output should…",139,[[],["option",4]]],[11,"precision","","Optionally specified precision for numeric types.",139,[[],["option",4]]],[11,"sign_plus","","Determines if the `+` flag was specified.",139,[[]]],[11,"sign_minus","","Determines if the `-` flag was specified.",139,[[]]],[11,"alternate","","Determines if the `#` flag was specified.",139,[[]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",139,[[]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",139,[[],["debugstruct",3]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",139,[[],["debugtuple",3]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",139,[[],["debuglist",3]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",139,[[],["debugset",3]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",139,[[],["debugmap",3]]]],"p":[[4,"Sign"],[8,"CheckedSub"],[8,"Zero"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Ordering"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"],[8,"FromStr"],[8,"PartialEq"],[4,"Alignment"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"TryFrom"],[3,"U16Word"],[3,"U32Word"],[3,"U64Word"],[3,"U128Word"],[3,"u16Word"],[3,"u32Word"],[3,"u64Word"],[3,"u128Word"],[8,"SeqTrait"],[8,"Integer"],[8,"SecretInteger"],[8,"SecretIntegerCopy"],[8,"PublicInteger"],[8,"PublicIntegerCopy"],[8,"UnsignedSecretInteger"],[8,"UnsignedPublicInteger"],[8,"ModNumeric"],[8,"Numeric"],[3,"SecretSeq"],[3,"PublicSeq"],[3,"Seq"],[3,"BigUint"],[3,"BigInt"],[3,"ParseIntError"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"Error"],[3,"Arguments"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"]]},\
"hacspec_ntru_prime":{"doc":"","i":[[5,"round_to_3","hacspec_ntru_prime","First transform each coefficients to a value between…",null,[[["seq",3]],["seq",3]]],[5,"ntru_prime_653_encrypt","","NTRU Prime 653 basic encryption",null,[[["seq",3]],["seq",3]]],[5,"ntru_prime_653_decrypt","","NTRU Prime 653 basic decryption",null,[[["seq",3]]]]],"p":[]},\
"hacspec_p256":{"doc":"","i":[[3,"FieldCanvas","hacspec_p256","",null,null],[3,"FieldElement","","",null,null],[3,"Scalar","","",null,null],[3,"Element","","Fixed length byte array.",null,null],[12,"0","","",0,null],[5,"point_mul_base","","",null,[[["scalar",3]]]],[5,"point_mul","","",null,[[["scalar",3]]]],[5,"generic_point_mul","","",null,[[["scalar",3]]]],[11,"max_value","","",1,[[]]],[11,"from_literal","","",1,[[]]],[11,"from_signed_literal","","",1,[[]]],[11,"pow2","","Returns 2 to the power of the argument",1,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",1,[[]]],[11,"from_hex","","",1,[[]]],[11,"from_be_bytes","","",1,[[]]],[11,"from_le_bytes","","",1,[[]]],[11,"to_be_bytes","","",1,[[]]],[11,"to_le_bytes","","",1,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",1,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"inv","","",1,[[]]],[11,"pow_felem","","",1,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",1,[[]]],[11,"from_canvas","","",2,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",2,[[],["fieldcanvas",3]]],[11,"max","","",2,[[],["fieldcanvas",3]]],[11,"declassify","","",2,[[],["bigint",3]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[],["vec",3]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"comp_eq","","",2,[[]]],[11,"comp_ne","","",2,[[]]],[11,"comp_gte","","",2,[[]]],[11,"comp_gt","","",2,[[]]],[11,"comp_lte","","",2,[[]]],[11,"comp_lt","","",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",2,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",2,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",2,[[],["seq",3]]],[11,"from_byte_seq_le","","",2,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",2,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",2,[[],["seq",3]]],[11,"from_secret_literal","","",2,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["scalar",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["element",3]]],[11,"from_seq","","",0,[[],["element",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["element",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["element",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["element",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",1,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",2,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",3,[[["biguint",3]],["scalar",3]]],[11,"from","","",3,[[["bigint",3]],["scalar",3]]],[11,"into","","",1,[[],["bigint",3]]],[11,"into","","",1,[[],["biguint",3]]],[11,"into","","",2,[[],["fieldcanvas",3]]],[11,"into","","",3,[[],["bigint",3]]],[11,"into","","",3,[[],["biguint",3]]],[11,"clone","","",1,[[],["fieldcanvas",3]]],[11,"clone","","",2,[[],["fieldelement",3]]],[11,"clone","","",3,[[],["scalar",3]]],[11,"clone","","",0,[[],["element",3]]],[11,"default","","",1,[[],["fieldcanvas",3]]],[11,"default","","",2,[[],["fieldelement",3]]],[11,"default","","",3,[[],["scalar",3]]],[11,"default","","",0,[[]]],[11,"cmp","","",1,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",2,[[],["ordering",4]]],[11,"cmp","","",3,[[["scalar",3]],["ordering",4]]],[11,"eq","","",1,[[["fieldcanvas",3]]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[["scalar",3]]]],[11,"partial_cmp","","",1,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["scalar",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"div","","",1,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",2,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",3,[[["scalar",3]],["scalar",3]]],[11,"rem","","",1,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",2,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",3,[[["scalar",3]],["scalar",3]]],[11,"rem","","",0,[[["element",3]],["element",3]]],[11,"sub","","",1,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",2,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",3,[[["scalar",3]],["scalar",3]]],[11,"sub","","",0,[[["element",3]],["element",3]]],[11,"add","","",1,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",2,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",3,[[["scalar",3]],["scalar",3]]],[11,"add","","",0,[[["element",3]],["element",3]]],[11,"mul","","",1,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",2,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",3,[[["scalar",3]],["scalar",3]]],[11,"mul","","",0,[[["element",3]],["element",3]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",0,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"ZERO","","",1,[[]]],[11,"ONE","","",1,[[]]],[11,"TWO","","",1,[[]]],[11,"from_literal","","",1,[[]]],[11,"from_hex_string","","",1,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",1,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",1,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",1,[[]]],[11,"rotate_left","","",1,[[]]],[11,"rotate_right","","",1,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",1,[[]]],[11,"absolute","","`|self|`",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]]],"p":[[3,"Element"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"Scalar"]]},\
"hacspec_poly1305":{"doc":"","i":[[3,"KeyPoly","hacspec_poly1305","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Tag","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"FieldCanvas","","",null,null],[3,"FieldElement","","",null,null],[5,"le_bytes_to_num","","Take a variable length byte array and convert it into a…",null,[[["byteseq",6]],["u128",3]]],[5,"clamp","","Clamp a block `r` and return the resulting `FieldElement`.",null,[[["u128",3]],["fieldelement",3]]],[5,"encode","","Convert a block (part of the byte sequence) to a…",null,[[["u128",3]],["fieldelement",3]]],[5,"poly_finish","","Convert the addition modulo 2^128 of two `FieldElement` to…",null,[[["fieldelement",3]],["tag",3]]],[5,"poly","","",null,[[["keypoly",3],["byteseq",6]],["tag",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["keypoly",3]]],[11,"from_seq","","",0,[[],["keypoly",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["keypoly",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["keypoly",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["keypoly",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",1,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["block",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["block",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],["seq",3]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],["seq",3]]],[11,"slice_range","","",2,[[["range",3]],["seq",3]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3]],["tag",3]]],[11,"from_seq","","",2,[[],["tag",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["tag",3]]],[11,"to_be_u32s","","",2,[[],["seq",3]]],[11,"to_le_u32s","","",2,[[],["seq",3]]],[11,"to_be_u64s","","",2,[[],["seq",3]]],[11,"to_le_u64s","","",2,[[],["seq",3]]],[11,"to_u128s_be","","",2,[[],["seq",3]]],[11,"to_u128s_le","","",2,[[],["seq",3]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"max_value","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"from_canvas","","",4,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",4,[[],["fieldcanvas",3]]],[11,"max","","",4,[[],["fieldcanvas",3]]],[11,"declassify","","",4,[[],["bigint",3]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[],["vec",3]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"comp_eq","","",4,[[]]],[11,"comp_ne","","",4,[[]]],[11,"comp_gte","","",4,[[]]],[11,"comp_gt","","",4,[[]]],[11,"comp_lte","","",4,[[]]],[11,"comp_lt","","",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",4,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",4,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",4,[[],["seq",3]]],[11,"from_byte_seq_le","","",4,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",4,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",4,[[],["seq",3]]],[11,"from_secret_literal","","",4,[[["u128",3]],["fieldelement",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",3,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",4,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into","","",3,[[],["bigint",3]]],[11,"into","","",3,[[],["biguint",3]]],[11,"into","","",4,[[],["fieldcanvas",3]]],[11,"clone","","",0,[[],["keypoly",3]]],[11,"clone","","",1,[[],["block",3]]],[11,"clone","","",2,[[],["tag",3]]],[11,"clone","","",3,[[],["fieldcanvas",3]]],[11,"clone","","",4,[[],["fieldelement",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[],["fieldcanvas",3]]],[11,"default","","",4,[[],["fieldelement",3]]],[11,"cmp","","",2,[[],["ordering",4]]],[11,"cmp","","",3,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[["fieldcanvas",3]]]],[11,"eq","","",4,[[]]],[11,"partial_cmp","","",2,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["tag",3]],["tag",3]]],[11,"div","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",0,[[["keypoly",3]],["keypoly",3]]],[11,"rem","","",1,[[["block",3]],["block",3]]],[11,"rem","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",0,[[["keypoly",3]],["keypoly",3]]],[11,"sub","","",1,[[["block",3]],["block",3]]],[11,"sub","","",2,[[["tag",3]],["tag",3]]],[11,"sub","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",0,[[["keypoly",3]],["keypoly",3]]],[11,"add","","",1,[[["block",3]],["block",3]]],[11,"add","","",2,[[["tag",3]],["tag",3]]],[11,"add","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",0,[[["keypoly",3]],["keypoly",3]]],[11,"mul","","",1,[[["block",3]],["block",3]]],[11,"mul","","",2,[[["tag",3]],["tag",3]]],[11,"mul","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[]]],[11,"index","","",2,[[]]],[11,"index","","",2,[[]]],[11,"index","","",2,[[]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],["iter",3]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","`(self - rhs) % n` (coefficient-wise)",2,[[]]],[11,"add_mod","","`(self + rhs) % n` (coefficient-wise)",2,[[]]],[11,"mul_mod","","`(self * rhs) % n` (coefficient-wise) Note that the…",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n` (coefficient-wise) Note that the…",2,[[]]],[11,"modulo","","`self % n` (coefficient-wise)",2,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented. Not…",2,[[]]],[11,"wrap_add","","`self + rhs` (coefficient-wise and wrapping)",2,[[]]],[11,"wrap_sub","","`self - rhs` (coefficient-wise and wrapping)",2,[[]]],[11,"wrap_mul","","`self * rhs` (coefficient-wise and wrapping)",2,[[]]],[11,"wrap_div","","`self + rhs` (coefficient-wise and wrapping)",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32` (coefficient-wise and…",2,[[]]],[11,"pow_self","","Not implemented.",2,[[]]],[11,"divide","","`self / rhs` (coefficient-wise and wrapping).",2,[[]]],[11,"inv","","Not implemented",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]]],"p":[[3,"KeyPoly"],[3,"Block"],[3,"Tag"],[3,"FieldCanvas"],[3,"FieldElement"]]},\
"hacspec_provider":{"doc":"Hacspec Provider","i":[[8,"Aead","hacspec_provider","Authenticated Encryption with Associated Data (AEAD)…",null,null],[16,"NonceSize","","The length of a nonce.",0,null],[16,"TagSize","","The maximum length of the nonce.",0,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",0,null],[10,"encrypt","","Encrypt the given plaintext payload, and return the…",0,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",0,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[8,"AeadInPlace","","In-place stateless AEAD trait.",null,null],[16,"NonceSize","","The length of a nonce.",1,null],[16,"TagSize","","The maximum length of the nonce.",1,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",1,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",1,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",1,[[["genericarray",3]],[["genericarray",3],["error",3],["result",4]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",1,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[10,"decrypt_in_place_detached","","Decrypt the message in-place, returning an error in the…",1,[[["genericarray",3],["genericarray",3]],[["error",3],["result",4]]]],[3,"Error","","Error type.",null,null],[8,"NewAead","","Instantiate either a stateless [`Aead`] or stateful…",null,null],[16,"KeySize","","The size of the key array required by this algorithm.",2,null],[10,"new","","Create a new AEAD instance with the given key.",2,[[["genericarray",3]]]],[11,"new_varkey","","Create new AEAD instance from key with variable size.",2,[[],[["result",4],["error",3]]]],[3,"Payload","","AEAD payloads are a combination of a message (plaintext or…",null,null],[12,"msg","","Message to be encrypted/decrypted",3,null],[12,"aad","","Optional \\\"additional associated data\\\" to authenticate…",3,null],[3,"Chacha20Poly1305","","",null,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",1,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",1,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[11,"new_varkey","","Create new AEAD instance from key with variable size.",2,[[],[["result",4],["error",3]]]],[6,"Key","","",null,null],[6,"Nonce","","",null,null],[6,"Tag","","",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"encrypt","","",5,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[11,"decrypt","","",5,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[11,"encrypt","","",5,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[11,"decrypt","","",5,[[["genericarray",3]],[["result",4],["vec",3],["error",3]]]],[11,"encrypt_in_place","","",5,[[["genericarray",3]],[["error",3],["result",4]]]],[11,"encrypt_in_place_detached","","",5,[[["genericarray",3]],[["error",3],["genericarray",3],["result",4]]]],[11,"decrypt_in_place","","",5,[[["genericarray",3]],[["error",3],["result",4]]]],[11,"decrypt_in_place_detached","","",5,[[["genericarray",3],["genericarray",3]],[["error",3],["result",4]]]],[11,"clone","","",4,[[],["error",3]]],[11,"from","","",3,[[],["payload",3]]],[11,"eq","","",4,[[["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",4,[[["error",3]],["ordering",4]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",4,[[["error",3]],[["option",4],["ordering",4]]]],[11,"hash","","",4,[[]]],[11,"new","","",5,[[["key",6]]]],[11,"encrypt_in_place_detached","","",5,[[["nonce",6]],[["tag",6],["result",4],["error",3]]]],[11,"decrypt_in_place_detached","","",5,[[["tag",6],["nonce",6]],[["result",4],["error",3]]]]],"p":[[8,"Aead"],[8,"AeadInPlace"],[8,"NewAead"],[3,"Payload"],[3,"Error"],[3,"Chacha20Poly1305"]]},\
"hacspec_riot_bootloader":{"doc":"","i":[[5,"new_fletcher","hacspec_riot_bootloader","",null,[[]]],[5,"max_chunk_size","","",null,[[]]],[5,"update_fletcher","","",null,[[["seq",3]]]],[5,"value","","Returns the current checksum value of the `Fletcher` object",null,[[]]],[5,"is_valid_header","","",null,[[]]],[5,"choose_image","","",null,[[["seq",3]]]]],"p":[]},\
"hacspec_sha256":{"doc":"","i":[[3,"Block","hacspec_sha256","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"OpTableType","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Digest","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"RoundConstantsTable","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Hash","","Fixed length byte array.",null,null],[12,"0","","",4,null],[5,"hash","","",null,[[["byteseq",6]],["digest",3]]],[17,"K_SIZE","","",null,null],[17,"HASH_SIZE","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",0,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],["seq",3]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],["seq",3]]],[11,"slice_range","","",1,[[["range",3]],["seq",3]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3]],["optabletype",3]]],[11,"from_seq","","",1,[[],["optabletype",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["optabletype",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["digest",3]]],[11,"from_seq","","",2,[[],["digest",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["digest",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["digest",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u32",3]],["roundconstantstable",3]]],[11,"from_seq","","",3,[[],["roundconstantstable",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["roundconstantstable",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["roundconstantstable",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["roundconstantstable",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u32",3]],["hash",3]]],[11,"from_seq","","",4,[[],["hash",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["hash",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["hash",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["hash",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","","",0,[[],["block",3]]],[11,"clone","","",1,[[],["optabletype",3]]],[11,"clone","","",2,[[],["digest",3]]],[11,"clone","","",3,[[],["roundconstantstable",3]]],[11,"clone","","",4,[[],["hash",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"eq","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["block",3]],["block",3]]],[11,"rem","","",2,[[["digest",3]],["digest",3]]],[11,"rem","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"rem","","",4,[[["hash",3]],["hash",3]]],[11,"sub","","",0,[[["block",3]],["block",3]]],[11,"sub","","",2,[[["digest",3]],["digest",3]]],[11,"sub","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"sub","","",4,[[["hash",3]],["hash",3]]],[11,"add","","",0,[[["block",3]],["block",3]]],[11,"add","","",2,[[["digest",3]],["digest",3]]],[11,"add","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"add","","",4,[[["hash",3]],["hash",3]]],[11,"mul","","",0,[[["block",3]],["block",3]]],[11,"mul","","",2,[[["digest",3]],["digest",3]]],[11,"mul","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"mul","","",4,[[["hash",3]],["hash",3]]],[11,"not","","",0,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],["iter",3]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]]],"p":[[3,"Block"],[3,"OpTableType"],[3,"Digest"],[3,"RoundConstantsTable"],[3,"Hash"]]},\
"hacspec_sha3":{"doc":"","i":[[3,"State","hacspec_sha3","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Row","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Digest224","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Digest256","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Digest384","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"Digest512","","Fixed length byte array.",null,null],[12,"0","","",5,null],[3,"RoundConstants","","Fixed length byte array.",null,null],[12,"0","","",6,null],[3,"RotationConstants","","Fixed length byte array.",null,null],[12,"0","","",7,null],[5,"keccakf1600","","",null,[[["state",3]],["state",3]]],[5,"sha3224","","",null,[[["byteseq",6]],["digest224",3]]],[5,"sha3256","","",null,[[["byteseq",6]],["digest256",3]]],[5,"sha3384","","",null,[[["byteseq",6]],["digest384",3]]],[5,"sha3512","","",null,[[["byteseq",6]],["digest512",3]]],[5,"shake128","","",null,[[["byteseq",6]],["byteseq",6]]],[5,"shake256","","",null,[[["byteseq",6]],["byteseq",6]]],[17,"SHA3224_RATE","","",null,null],[17,"SHA3256_RATE","","",null,null],[17,"SHA3384_RATE","","",null,null],[17,"SHA3512_RATE","","",null,null],[17,"SHAKE128_RATE","","",null,null],[17,"SHAKE256_RATE","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u64",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u64",3]],["row",3]]],[11,"from_seq","","",1,[[],["row",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["row",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["row",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["row",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["digest224",3]]],[11,"from_seq","","",2,[[],["digest224",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["digest224",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["digest224",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["digest224",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["digest256",3]]],[11,"from_seq","","",3,[[],["digest256",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["digest256",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["digest256",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["digest256",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["digest384",3]]],[11,"from_seq","","",4,[[],["digest384",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["digest384",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["digest384",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["digest384",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["digest512",3]]],[11,"from_seq","","",5,[[],["digest512",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["digest512",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["digest512",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["digest512",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"new","","",6,[[]]],[11,"length","","",6,[[]]],[11,"from_array","","",6,[[]]],[11,"from_native_slice","","",6,[[]]],[11,"capacity","","",6,[[]]],[11,"from_slice","","",6,[[]]],[11,"concat","","",6,[[],["seq",3]]],[11,"from_slice_range","","",6,[[["range",3]]]],[11,"slice","","",6,[[],["seq",3]]],[11,"slice_range","","",6,[[["range",3]],["seq",3]]],[11,"num_chunks","","",6,[[]]],[11,"get_chunk_len","","",6,[[]]],[11,"get_chunk","","",6,[[]]],[11,"set_chunk","","",6,[[]]],[11,"from_vec","","",6,[[["vec",3]],["roundconstants",3]]],[11,"from_seq","","",6,[[],["roundconstants",3]]],[11,"from_hex","","Read hex string to Bytes.",6,[[],["roundconstants",3]]],[11,"new","","",7,[[]]],[11,"length","","",7,[[]]],[11,"from_array","","",7,[[]]],[11,"from_native_slice","","",7,[[]]],[11,"capacity","","",7,[[]]],[11,"from_slice","","",7,[[]]],[11,"concat","","",7,[[],["seq",3]]],[11,"from_slice_range","","",7,[[["range",3]]]],[11,"slice","","",7,[[],["seq",3]]],[11,"slice_range","","",7,[[["range",3]],["seq",3]]],[11,"num_chunks","","",7,[[]]],[11,"get_chunk_len","","",7,[[]]],[11,"get_chunk","","",7,[[]]],[11,"set_chunk","","",7,[[]]],[11,"from_vec","","",7,[[["vec",3]],["rotationconstants",3]]],[11,"from_seq","","",7,[[],["rotationconstants",3]]],[11,"from_hex","","Read hex string to Bytes.",7,[[],["rotationconstants",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["row",3]]],[11,"clone","","",2,[[],["digest224",3]]],[11,"clone","","",3,[[],["digest256",3]]],[11,"clone","","",4,[[],["digest384",3]]],[11,"clone","","",5,[[],["digest512",3]]],[11,"clone","","",6,[[],["roundconstants",3]]],[11,"clone","","",7,[[],["rotationconstants",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"cmp","","",6,[[],["ordering",4]]],[11,"eq","","",6,[[]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",6,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"div","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["row",3]],["row",3]]],[11,"rem","","",2,[[["digest224",3]],["digest224",3]]],[11,"rem","","",3,[[["digest256",3]],["digest256",3]]],[11,"rem","","",4,[[["digest384",3]],["digest384",3]]],[11,"rem","","",5,[[["digest512",3]],["digest512",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["row",3]],["row",3]]],[11,"sub","","",2,[[["digest224",3]],["digest224",3]]],[11,"sub","","",3,[[["digest256",3]],["digest256",3]]],[11,"sub","","",4,[[["digest384",3]],["digest384",3]]],[11,"sub","","",5,[[["digest512",3]],["digest512",3]]],[11,"sub","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["row",3]],["row",3]]],[11,"add","","",2,[[["digest224",3]],["digest224",3]]],[11,"add","","",3,[[["digest256",3]],["digest256",3]]],[11,"add","","",4,[[["digest384",3]],["digest384",3]]],[11,"add","","",5,[[["digest512",3]],["digest512",3]]],[11,"add","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["row",3]],["row",3]]],[11,"mul","","",2,[[["digest224",3]],["digest224",3]]],[11,"mul","","",3,[[["digest256",3]],["digest256",3]]],[11,"mul","","",4,[[["digest384",3]],["digest384",3]]],[11,"mul","","",5,[[["digest512",3]],["digest512",3]]],[11,"mul","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[["rangefull",3]]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"create","","",6,[[]]],[11,"len","","",6,[[]]],[11,"iter","","",6,[[],["iter",3]]],[11,"update_slice","","",6,[[]]],[11,"update","","",6,[[]]],[11,"update_start","","",6,[[]]],[11,"create","","",7,[[]]],[11,"len","","",7,[[]]],[11,"iter","","",7,[[],["iter",3]]],[11,"update_slice","","",7,[[]]],[11,"update","","",7,[[]]],[11,"update_start","","",7,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"sub_mod","","`(self - rhs) % n` (coefficient-wise)",6,[[]]],[11,"add_mod","","`(self + rhs) % n` (coefficient-wise)",6,[[]]],[11,"mul_mod","","`(self * rhs) % n` (coefficient-wise) Note that the…",6,[[]]],[11,"pow_mod","","`(self ^ exp) % n` (coefficient-wise) Note that the…",6,[[]]],[11,"modulo","","`self % n` (coefficient-wise)",6,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",6,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",6,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented. Not…",6,[[]]],[11,"wrap_add","","`self + rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_sub","","`self - rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_mul","","`self * rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_div","","`self + rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32` (coefficient-wise and…",6,[[]]],[11,"pow_self","","Not implemented.",6,[[]]],[11,"divide","","`self / rhs` (coefficient-wise and wrapping).",6,[[]]],[11,"inv","","Not implemented",6,[[]]],[11,"equal","","",6,[[]]],[11,"greater_than","","",6,[[]]],[11,"greater_than_or_qual","","",6,[[]]],[11,"less_than","","",6,[[]]],[11,"less_than_or_equal","","",6,[[]]],[11,"not_equal_bm","","",6,[[]]],[11,"equal_bm","","",6,[[]]],[11,"greater_than_bm","","",6,[[]]],[11,"greater_than_or_equal_bm","","",6,[[]]],[11,"less_than_bm","","",6,[[]]],[11,"less_than_or_equal_bm","","",6,[[]]]],"p":[[3,"State"],[3,"Row"],[3,"Digest224"],[3,"Digest256"],[3,"Digest384"],[3,"Digest512"],[3,"RoundConstants"],[3,"RotationConstants"]]},\
"hacspec_util":{"doc":"","i":[[3,"Signature","hacspec_util","",null,null],[12,"name","","",0,null],[5,"syn_sig_to_reduced","","",null,[[["signature",3]],["signature",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["signature",3]]]],[11,"ne","","",0,[[["signature",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Signature"]]},\
"itoa":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"write","","Write integer to an `io::Write`.",null,[[["integer",8],["write",8]],["result",6]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer",8]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"uinput_ff_upload","","",null,null],[12,"request_id","","",65,null],[12,"retval","","",65,null],[12,"effect","","",65,null],[12,"old","","",65,null],[3,"uinput_ff_erase","","",null,null],[12,"request_id","","",66,null],[12,"retval","","",66,null],[12,"effect_id","","",66,null],[3,"uinput_abs_setup","","",null,null],[12,"code","","",67,null],[12,"absinfo","","",67,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",68,null],[12,"dlpi_name","","",68,null],[12,"dlpi_phdr","","",68,null],[12,"dlpi_phnum","","",68,null],[12,"dlpi_adds","","",68,null],[12,"dlpi_subs","","",68,null],[12,"dlpi_tls_modid","","",68,null],[12,"dlpi_tls_data","","",68,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",69,null],[12,"e_type","","",69,null],[12,"e_machine","","",69,null],[12,"e_version","","",69,null],[12,"e_entry","","",69,null],[12,"e_phoff","","",69,null],[12,"e_shoff","","",69,null],[12,"e_flags","","",69,null],[12,"e_ehsize","","",69,null],[12,"e_phentsize","","",69,null],[12,"e_phnum","","",69,null],[12,"e_shentsize","","",69,null],[12,"e_shnum","","",69,null],[12,"e_shstrndx","","",69,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",70,null],[12,"e_type","","",70,null],[12,"e_machine","","",70,null],[12,"e_version","","",70,null],[12,"e_entry","","",70,null],[12,"e_phoff","","",70,null],[12,"e_shoff","","",70,null],[12,"e_flags","","",70,null],[12,"e_ehsize","","",70,null],[12,"e_phentsize","","",70,null],[12,"e_phnum","","",70,null],[12,"e_shentsize","","",70,null],[12,"e_shnum","","",70,null],[12,"e_shstrndx","","",70,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",71,null],[12,"st_value","","",71,null],[12,"st_size","","",71,null],[12,"st_info","","",71,null],[12,"st_other","","",71,null],[12,"st_shndx","","",71,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",72,null],[12,"st_info","","",72,null],[12,"st_other","","",72,null],[12,"st_shndx","","",72,null],[12,"st_value","","",72,null],[12,"st_size","","",72,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",73,null],[12,"p_offset","","",73,null],[12,"p_vaddr","","",73,null],[12,"p_paddr","","",73,null],[12,"p_filesz","","",73,null],[12,"p_memsz","","",73,null],[12,"p_flags","","",73,null],[12,"p_align","","",73,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",74,null],[12,"p_flags","","",74,null],[12,"p_offset","","",74,null],[12,"p_vaddr","","",74,null],[12,"p_paddr","","",74,null],[12,"p_filesz","","",74,null],[12,"p_memsz","","",74,null],[12,"p_align","","",74,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",75,null],[12,"sh_type","","",75,null],[12,"sh_flags","","",75,null],[12,"sh_addr","","",75,null],[12,"sh_offset","","",75,null],[12,"sh_size","","",75,null],[12,"sh_link","","",75,null],[12,"sh_info","","",75,null],[12,"sh_addralign","","",75,null],[12,"sh_entsize","","",75,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",76,null],[12,"sh_type","","",76,null],[12,"sh_flags","","",76,null],[12,"sh_addr","","",76,null],[12,"sh_offset","","",76,null],[12,"sh_size","","",76,null],[12,"sh_link","","",76,null],[12,"sh_info","","",76,null],[12,"sh_addralign","","",76,null],[12,"sh_entsize","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"fanotify_response","","",null,null],[12,"fd","","",83,null],[12,"response","","",83,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",84,null],[12,"svm_reserved1","","",84,null],[12,"svm_port","","",84,null],[12,"svm_cid","","",84,null],[12,"svm_zero","","",84,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",85,null],[12,"rm_eo","","",85,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",86,null],[12,"ee_origin","","",86,null],[12,"ee_type","","",86,null],[12,"ee_code","","",86,null],[12,"ee_pad","","",86,null],[12,"ee_info","","",86,null],[12,"ee_data","","",86,null],[3,"__c_anonymous_sockaddr_can_tp","","",null,null],[12,"rx_id","","",87,null],[12,"tx_id","","",87,null],[3,"__c_anonymous_sockaddr_can_j1939","","",null,null],[12,"name","","",88,null],[12,"pgn","","",88,null],[12,"addr","","",88,null],[3,"can_filter","","",null,null],[12,"can_id","","",89,null],[12,"can_mask","","",89,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",90,null],[12,"nl_pid","","",90,null],[12,"nl_groups","","",90,null],[3,"dirent","","",null,null],[12,"d_ino","","",91,null],[12,"d_off","","",91,null],[12,"d_reclen","","",91,null],[12,"d_type","","",91,null],[12,"d_name","","",91,null],[3,"dirent64","","",null,null],[12,"d_ino","","",92,null],[12,"d_off","","",92,null],[12,"d_reclen","","",92,null],[12,"d_type","","",92,null],[12,"d_name","","",92,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",93,null],[12,"salg_type","","",93,null],[12,"salg_feat","","",93,null],[12,"salg_mask","","",93,null],[12,"salg_name","","",93,null],[3,"uinput_setup","","",null,null],[12,"id","","",94,null],[12,"name","","",94,null],[12,"ff_effects_max","","",94,null],[3,"uinput_user_dev","","",null,null],[12,"name","","",95,null],[12,"id","","",95,null],[12,"ff_effects_max","","",95,null],[12,"absmax","","",95,null],[12,"absmin","","",95,null],[12,"absfuzz","","",95,null],[12,"absflat","","",95,null],[3,"af_alg_iv","","WARNING: The `PartialEq`, `Eq` and `Hash` implementations…",null,null],[12,"ivlen","","",96,null],[12,"iv","","",96,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",97,null],[12,"mq_maxmsg","","",97,null],[12,"mq_msgsize","","",97,null],[12,"mq_curmsgs","","",97,null],[3,"sockaddr_can","","",null,null],[12,"can_family","","",98,null],[12,"can_ifindex","","",98,null],[12,"can_addr","","",98,null],[3,"statx","","",null,null],[12,"stx_mask","","",99,null],[12,"stx_blksize","","",99,null],[12,"stx_attributes","","",99,null],[12,"stx_nlink","","",99,null],[12,"stx_uid","","",99,null],[12,"stx_gid","","",99,null],[12,"stx_mode","","",99,null],[12,"stx_ino","","",99,null],[12,"stx_size","","",99,null],[12,"stx_blocks","","",99,null],[12,"stx_attributes_mask","","",99,null],[12,"stx_atime","","",99,null],[12,"stx_btime","","",99,null],[12,"stx_ctime","","",99,null],[12,"stx_mtime","","",99,null],[12,"stx_rdev_major","","",99,null],[12,"stx_rdev_minor","","",99,null],[12,"stx_dev_major","","",99,null],[12,"stx_dev_minor","","",99,null],[12,"stx_mnt_id","","",99,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",100,null],[12,"tv_nsec","","",100,null],[12,"__statx_timestamp_pad1","","",100,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",101,null],[12,"aio_lio_opcode","","",101,null],[12,"aio_reqprio","","",101,null],[12,"aio_buf","","",101,null],[12,"aio_nbytes","","",101,null],[12,"aio_sigevent","","",101,null],[12,"aio_offset","","",101,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",102,null],[12,"e_exit","","",102,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",103,null],[12,"tv_usec","","",103,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",104,null],[12,"gl_pathv","","",104,null],[12,"gl_offs","","",104,null],[12,"gl_flags","","",104,null],[3,"msghdr","","",null,null],[12,"msg_name","","",105,null],[12,"msg_namelen","","",105,null],[12,"msg_iov","","",105,null],[12,"msg_iovlen","","",105,null],[12,"msg_control","","",105,null],[12,"msg_controllen","","",105,null],[12,"msg_flags","","",105,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",106,null],[12,"cmsg_level","","",106,null],[12,"cmsg_type","","",106,null],[3,"termios","","",null,null],[12,"c_iflag","","",107,null],[12,"c_oflag","","",107,null],[12,"c_cflag","","",107,null],[12,"c_lflag","","",107,null],[12,"c_line","","",107,null],[12,"c_cc","","",107,null],[12,"c_ispeed","","",107,null],[12,"c_ospeed","","",107,null],[3,"mallinfo","","",null,null],[12,"arena","","",108,null],[12,"ordblks","","",108,null],[12,"smblks","","",108,null],[12,"hblks","","",108,null],[12,"hblkhd","","",108,null],[12,"usmblks","","",108,null],[12,"fsmblks","","",108,null],[12,"uordblks","","",108,null],[12,"fordblks","","",108,null],[12,"keepcost","","",108,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",109,null],[12,"nlmsg_type","","",109,null],[12,"nlmsg_flags","","",109,null],[12,"nlmsg_seq","","",109,null],[12,"nlmsg_pid","","",109,null],[3,"nlmsgerr","","",null,null],[12,"error","","",110,null],[12,"msg","","",110,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",111,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",112,null],[12,"nm_block_nr","","",112,null],[12,"nm_frame_size","","",112,null],[12,"nm_frame_nr","","",112,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",113,null],[12,"nm_len","","",113,null],[12,"nm_group","","",113,null],[12,"nm_pid","","",113,null],[12,"nm_uid","","",113,null],[12,"nm_gid","","",113,null],[3,"nlattr","","",null,null],[12,"nla_len","","",114,null],[12,"nla_type","","",114,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",115,null],[12,"rt_dst","","",115,null],[12,"rt_gateway","","",115,null],[12,"rt_genmask","","",115,null],[12,"rt_flags","","",115,null],[12,"rt_pad2","","",115,null],[12,"rt_pad3","","",115,null],[12,"rt_tos","","",115,null],[12,"rt_class","","",115,null],[12,"rt_pad4","","",115,null],[12,"rt_metric","","",115,null],[12,"rt_dev","","",115,null],[12,"rt_mtu","","",115,null],[12,"rt_window","","",115,null],[12,"rt_irtt","","",115,null],[3,"timex","","",null,null],[12,"modes","","",116,null],[12,"offset","","",116,null],[12,"freq","","",116,null],[12,"maxerror","","",116,null],[12,"esterror","","",116,null],[12,"status","","",116,null],[12,"constant","","",116,null],[12,"precision","","",116,null],[12,"tolerance","","",116,null],[12,"time","","",116,null],[12,"tick","","",116,null],[12,"ppsfreq","","",116,null],[12,"jitter","","",116,null],[12,"shift","","",116,null],[12,"stabil","","",116,null],[12,"jitcnt","","",116,null],[12,"calcnt","","",116,null],[12,"errcnt","","",116,null],[12,"stbcnt","","",116,null],[12,"tai","","",116,null],[12,"__unused1","","",116,null],[12,"__unused2","","",116,null],[12,"__unused3","","",116,null],[12,"__unused4","","",116,null],[12,"__unused5","","",116,null],[12,"__unused6","","",116,null],[12,"__unused7","","",116,null],[12,"__unused8","","",116,null],[12,"__unused9","","",116,null],[12,"__unused10","","",116,null],[12,"__unused11","","",116,null],[3,"ntptimeval","","",null,null],[12,"time","","",117,null],[12,"maxerror","","",117,null],[12,"esterror","","",117,null],[12,"tai","","",117,null],[12,"__glibc_reserved1","","",117,null],[12,"__glibc_reserved2","","",117,null],[12,"__glibc_reserved3","","",117,null],[12,"__glibc_reserved4","","",117,null],[3,"regex_t","","",null,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",118,null],[12,"ch_reserved","","",118,null],[12,"ch_size","","",118,null],[12,"ch_addralign","","",118,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",119,null],[12,"ch_size","","",119,null],[12,"ch_addralign","","",119,null],[3,"utmpx","","",null,null],[12,"ut_type","","",120,null],[12,"ut_pid","","",120,null],[12,"ut_line","","",120,null],[12,"ut_id","","",120,null],[12,"ut_user","","",120,null],[12,"ut_host","","",120,null],[12,"ut_exit","","",120,null],[12,"ut_session","","",120,null],[12,"ut_tv","","",120,null],[12,"ut_addr_v6","","",120,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",121,null],[12,"loads","","",121,null],[12,"totalram","","",121,null],[12,"freeram","","",121,null],[12,"sharedram","","",121,null],[12,"bufferram","","",121,null],[12,"totalswap","","",121,null],[12,"freeswap","","",121,null],[12,"procs","","",121,null],[12,"pad","","",121,null],[12,"totalhigh","","",121,null],[12,"freehigh","","",121,null],[12,"mem_unit","","",121,null],[12,"_f","","",121,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",122,null],[12,"msg_stime","","",122,null],[12,"msg_rtime","","",122,null],[12,"msg_ctime","","",122,null],[12,"msg_qnum","","",122,null],[12,"msg_qbytes","","",122,null],[12,"msg_lspid","","",122,null],[12,"msg_lrpid","","",122,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",123,null],[12,"sa_mask","","",123,null],[12,"sa_flags","","",123,null],[12,"sa_restorer","","",123,null],[3,"statfs","","",null,null],[12,"f_type","","",124,null],[12,"f_bsize","","",124,null],[12,"f_blocks","","",124,null],[12,"f_bfree","","",124,null],[12,"f_bavail","","",124,null],[12,"f_files","","",124,null],[12,"f_ffree","","",124,null],[12,"f_fsid","","",124,null],[12,"f_namelen","","",124,null],[12,"f_frsize","","",124,null],[3,"flock","","",null,null],[12,"l_type","","",125,null],[12,"l_whence","","",125,null],[12,"l_start","","",125,null],[12,"l_len","","",125,null],[12,"l_pid","","",125,null],[3,"flock64","","",null,null],[12,"l_type","","",126,null],[12,"l_whence","","",126,null],[12,"l_start","","",126,null],[12,"l_len","","",126,null],[12,"l_pid","","",126,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",127,null],[12,"si_errno","","",127,null],[12,"si_code","","",127,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",128,null],[12,"ss_flags","","",128,null],[12,"ss_size","","",128,null],[3,"stat","","",null,null],[12,"st_dev","","",129,null],[12,"st_ino","","",129,null],[12,"st_nlink","","",129,null],[12,"st_mode","","",129,null],[12,"st_uid","","",129,null],[12,"st_gid","","",129,null],[12,"st_rdev","","",129,null],[12,"st_size","","",129,null],[12,"st_blksize","","",129,null],[12,"st_blocks","","",129,null],[12,"st_atime","","",129,null],[12,"st_atime_nsec","","",129,null],[12,"st_mtime","","",129,null],[12,"st_mtime_nsec","","",129,null],[12,"st_ctime","","",129,null],[12,"st_ctime_nsec","","",129,null],[3,"stat64","","",null,null],[12,"st_dev","","",130,null],[12,"st_ino","","",130,null],[12,"st_nlink","","",130,null],[12,"st_mode","","",130,null],[12,"st_uid","","",130,null],[12,"st_gid","","",130,null],[12,"st_rdev","","",130,null],[12,"st_size","","",130,null],[12,"st_blksize","","",130,null],[12,"st_blocks","","",130,null],[12,"st_atime","","",130,null],[12,"st_atime_nsec","","",130,null],[12,"st_mtime","","",130,null],[12,"st_mtime_nsec","","",130,null],[12,"st_ctime","","",130,null],[12,"st_ctime_nsec","","",130,null],[3,"statfs64","","",null,null],[12,"f_type","","",131,null],[12,"f_bsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_fsid","","",131,null],[12,"f_namelen","","",131,null],[12,"f_frsize","","",131,null],[12,"f_flags","","",131,null],[12,"f_spare","","",131,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",132,null],[12,"f_frsize","","",132,null],[12,"f_blocks","","",132,null],[12,"f_bfree","","",132,null],[12,"f_bavail","","",132,null],[12,"f_files","","",132,null],[12,"f_ffree","","",132,null],[12,"f_favail","","",132,null],[12,"f_fsid","","",132,null],[12,"f_flag","","",132,null],[12,"f_namemax","","",132,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",133,null],[12,"exponent","","",133,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",134,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",135,null],[12,"swd","","",135,null],[12,"ftw","","",135,null],[12,"fop","","",135,null],[12,"rip","","",135,null],[12,"rdp","","",135,null],[12,"mxcsr","","",135,null],[12,"mxcr_mask","","",135,null],[12,"_st","","",135,null],[12,"_xmm","","",135,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",136,null],[12,"r14","","",136,null],[12,"r13","","",136,null],[12,"r12","","",136,null],[12,"rbp","","",136,null],[12,"rbx","","",136,null],[12,"r11","","",136,null],[12,"r10","","",136,null],[12,"r9","","",136,null],[12,"r8","","",136,null],[12,"rax","","",136,null],[12,"rcx","","",136,null],[12,"rdx","","",136,null],[12,"rsi","","",136,null],[12,"rdi","","",136,null],[12,"orig_rax","","",136,null],[12,"rip","","",136,null],[12,"cs","","",136,null],[12,"eflags","","",136,null],[12,"rsp","","",136,null],[12,"ss","","",136,null],[12,"fs_base","","",136,null],[12,"gs_base","","",136,null],[12,"ds","","",136,null],[12,"es","","",136,null],[12,"fs","","",136,null],[12,"gs","","",136,null],[3,"user","","",null,null],[12,"regs","","",137,null],[12,"u_fpvalid","","",137,null],[12,"i387","","",137,null],[12,"u_tsize","","",137,null],[12,"u_dsize","","",137,null],[12,"u_ssize","","",137,null],[12,"start_code","","",137,null],[12,"start_stack","","",137,null],[12,"signal","","",137,null],[12,"u_ar0","","",137,null],[12,"u_fpstate","","",137,null],[12,"magic","","",137,null],[12,"u_comm","","",137,null],[12,"u_debugreg","","",137,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",138,null],[12,"fpregs","","",138,null],[3,"ipc_perm","","",null,null],[12,"__key","","",139,null],[12,"uid","","",139,null],[12,"gid","","",139,null],[12,"cuid","","",139,null],[12,"cgid","","",139,null],[12,"mode","","",139,null],[12,"__seq","","",139,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",140,null],[12,"shm_segsz","","",140,null],[12,"shm_atime","","",140,null],[12,"shm_dtime","","",140,null],[12,"shm_ctime","","",140,null],[12,"shm_cpid","","",140,null],[12,"shm_lpid","","",140,null],[12,"shm_nattch","","",140,null],[3,"termios2","","",null,null],[12,"c_iflag","","",141,null],[12,"c_oflag","","",141,null],[12,"c_cflag","","",141,null],[12,"c_lflag","","",141,null],[12,"c_line","","",141,null],[12,"c_cc","","",141,null],[12,"c_ispeed","","",141,null],[12,"c_ospeed","","",141,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",142,null],[12,"imr_address","","",142,null],[12,"imr_ifindex","","",142,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",143,null],[12,"swd","","",143,null],[12,"ftw","","",143,null],[12,"fop","","",143,null],[12,"rip","","",143,null],[12,"rdp","","",143,null],[12,"mxcsr","","",143,null],[12,"mxcr_mask","","",143,null],[12,"st_space","","",143,null],[12,"xmm_space","","",143,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",144,null],[12,"uc_link","","",144,null],[12,"uc_stack","","",144,null],[12,"uc_mcontext","","",144,null],[12,"uc_sigmask","","",144,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",145,null],[12,"f_frsize","","",145,null],[12,"f_blocks","","",145,null],[12,"f_bfree","","",145,null],[12,"f_bavail","","",145,null],[12,"f_files","","",145,null],[12,"f_ffree","","",145,null],[12,"f_favail","","",145,null],[12,"f_fsid","","",145,null],[12,"f_flag","","",145,null],[12,"f_namemax","","",145,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",146,null],[12,"vers","","",146,null],[12,"reserved","","",146,null],[12,"metadata_len","","",146,null],[12,"mask","","",146,null],[12,"fd","","",146,null],[12,"pid","","",146,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"can_frame","","",null,null],[12,"can_id","","",147,null],[12,"can_dlc","","",147,null],[12,"data","","",147,null],[3,"canfd_frame","","",null,null],[12,"can_id","","",148,null],[12,"len","","",148,null],[12,"flags","","",148,null],[12,"data","","",148,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",149,null],[19,"__c_anonymous_sockaddr_can_can_addr","","",null,null],[12,"tp","","",150,null],[12,"j1939","","",150,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"preadv64","","",null,null],[5,"pwritev64","","",null,null],[5,"forkpty","","",null,null],[5,"openpty","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"getnameinfo","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"futimes","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"accept4","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syncfs","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"gettid","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"preadv2","","",null,null],[5,"pwritev2","","",null,null],[5,"renameat2","","",null,null],[5,"explicit_bzero","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",127,[[]]],[11,"si_value","","",127,[[],["sigval",3]]],[11,"si_pid","","",127,[[],["pid_t",6]]],[11,"si_uid","","",127,[[],["uid_t",6]]],[11,"si_status","","",127,[[],["c_int",6]]],[11,"si_utime","","",127,[[],["c_long",6]]],[11,"si_stime","","",127,[[],["c_long",6]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"canid_t","","",null,null],[6,"can_err_mask_t","","",null,null],[6,"iconv_t","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_LAZYTIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_NOTSENT_LOWAT","","",null,null],[17,"TCP_CC_INFO","","",null,null],[17,"TCP_SAVE_SYN","","",null,null],[17,"TCP_SAVED_SYN","","",null,null],[17,"TCP_REPAIR_WINDOW","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"TCP_ULP","","",null,null],[17,"TCP_MD5SIG_EXT","","",null,null],[17,"TCP_FASTOPEN_KEY","","",null,null],[17,"TCP_FASTOPEN_NO_COOKIE","","",null,null],[17,"TCP_ZEROCOPY_RECEIVE","","",null,null],[17,"TCP_INQ","","",null,null],[17,"TCP_CM_INQ","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_GSO_MAX_SEGS","","",null,null],[17,"IFLA_GSO_MAX_SIZE","","",null,null],[17,"IFLA_PAD","","",null,null],[17,"IFLA_XDP","","",null,null],[17,"IFLA_EVENT","","",null,null],[17,"IFLA_NEW_NETNSID","","",null,null],[17,"IFLA_IF_NETNSID","","",null,null],[17,"IFLA_TARGET_NETNSID","","",null,null],[17,"IFLA_CARRIER_UP_COUNT","","",null,null],[17,"IFLA_CARRIER_DOWN_COUNT","","",null,null],[17,"IFLA_NEW_IFINDEX","","",null,null],[17,"IFLA_MIN_MTU","","",null,null],[17,"IFLA_MAX_MTU","","",null,null],[17,"IFLA_PROP_LIST","","",null,null],[17,"IFLA_ALT_IFNAME","","",null,null],[17,"IFLA_PERM_ADDRESS","","",null,null],[17,"IFLA_PROTO_DOWN_REASON","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"FF_MAX","","",null,null],[17,"FF_CNT","","",null,null],[17,"INPUT_PROP_MAX","","",null,null],[17,"INPUT_PROP_CNT","","",null,null],[17,"EV_MAX","","",null,null],[17,"EV_CNT","","",null,null],[17,"SYN_MAX","","",null,null],[17,"SYN_CNT","","",null,null],[17,"KEY_MAX","","",null,null],[17,"KEY_CNT","","",null,null],[17,"REL_MAX","","",null,null],[17,"REL_CNT","","",null,null],[17,"ABS_MAX","","",null,null],[17,"ABS_CNT","","",null,null],[17,"SW_MAX","","",null,null],[17,"SW_CNT","","",null,null],[17,"MSC_MAX","","",null,null],[17,"MSC_CNT","","",null,null],[17,"LED_MAX","","",null,null],[17,"LED_CNT","","",null,null],[17,"REP_MAX","","",null,null],[17,"REP_CNT","","",null,null],[17,"SND_MAX","","",null,null],[17,"SND_CNT","","",null,null],[17,"UINPUT_VERSION","","",null,null],[17,"UINPUT_MAX_NAME_SIZE","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CAN_EFF_FLAG","","",null,null],[17,"CAN_RTR_FLAG","","",null,null],[17,"CAN_ERR_FLAG","","",null,null],[17,"CAN_SFF_MASK","","",null,null],[17,"CAN_EFF_MASK","","",null,null],[17,"CAN_ERR_MASK","","",null,null],[17,"CAN_SFF_ID_BITS","","",null,null],[17,"CAN_EFF_ID_BITS","","",null,null],[17,"CAN_MAX_DLC","","",null,null],[17,"CAN_MAX_DLEN","","",null,null],[17,"CANFD_MAX_DLC","","",null,null],[17,"CANFD_MAX_DLEN","","",null,null],[17,"CANFD_BRS","","",null,null],[17,"CANFD_ESI","","",null,null],[17,"CAN_MTU","","",null,null],[17,"CANFD_MTU","","",null,null],[17,"CAN_RAW","","",null,null],[17,"CAN_BCM","","",null,null],[17,"CAN_TP16","","",null,null],[17,"CAN_TP20","","",null,null],[17,"CAN_MCNET","","",null,null],[17,"CAN_ISOTP","","",null,null],[17,"CAN_J1939","","",null,null],[17,"CAN_NPROTO","","",null,null],[17,"SOL_CAN_BASE","","",null,null],[17,"CAN_INV_FILTER","","",null,null],[17,"CAN_RAW_FILTER_MAX","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SECURITYFS_MAGIC","","",null,null],[17,"SELINUX_MAGIC","","",null,null],[17,"SMACK_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"RWF_HIPRI","","",null,null],[17,"RWF_DSYNC","","",null,null],[17,"RWF_SYNC","","",null,null],[17,"RWF_NOWAIT","","",null,null],[17,"RWF_APPEND","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_MNT_ID","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_send_signal","","",null,null],[17,"SYS_io_uring_setup","","",null,null],[17,"SYS_io_uring_enter","","",null,null],[17,"SYS_io_uring_register","","",null,null],[17,"SYS_open_tree","","",null,null],[17,"SYS_move_mount","","",null,null],[17,"SYS_fsopen","","",null,null],[17,"SYS_fsconfig","","",null,null],[17,"SYS_fsmount","","",null,null],[17,"SYS_fspick","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[17,"SYS_close_range","","",null,null],[17,"SYS_openat2","","",null,null],[17,"SYS_pidfd_getfd","","",null,null],[17,"SYS_faccessat2","","",null,null],[17,"SYS_process_madvise","","",null,null],[17,"SYS_epoll_pwait2","","",null,null],[17,"SYS_mount_setattr","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[11,"from","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"fmt","","",151,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",169,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",170,[[],["file",4]]],[11,"clone","","",171,[[],["fpos_t",4]]],[11,"clone","","",172,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",152,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",153,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",173,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",154,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",155,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["uinput_ff_upload",3]]],[11,"clone","","",66,[[],["uinput_ff_erase",3]]],[11,"clone","","",67,[[],["uinput_abs_setup",3]]],[11,"clone","","",68,[[],["dl_phdr_info",3]]],[11,"clone","","",69,[[],["elf32_ehdr",3]]],[11,"clone","","",70,[[],["elf64_ehdr",3]]],[11,"clone","","",71,[[],["elf32_sym",3]]],[11,"clone","","",72,[[],["elf64_sym",3]]],[11,"clone","","",73,[[],["elf32_phdr",3]]],[11,"clone","","",74,[[],["elf64_phdr",3]]],[11,"clone","","",75,[[],["elf32_shdr",3]]],[11,"clone","","",76,[[],["elf64_shdr",3]]],[11,"clone","","",77,[[],["ucred",3]]],[11,"clone","","",78,[[],["mntent",3]]],[11,"clone","","",156,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",157,[[],["posix_spawnattr_t",3]]],[11,"clone","","",79,[[],["genlmsghdr",3]]],[11,"clone","","",80,[[],["in6_pktinfo",3]]],[11,"clone","","",81,[[],["arpd_request",3]]],[11,"clone","","",82,[[],["inotify_event",3]]],[11,"clone","","",83,[[],["fanotify_response",3]]],[11,"clone","","",84,[[],["sockaddr_vm",3]]],[11,"clone","","",85,[[],["regmatch_t",3]]],[11,"clone","","",86,[[],["sock_extended_err",3]]],[11,"clone","","",87,[[],["__c_anonymous_sockaddr_can_tp",3]]],[11,"clone","","",88,[[],["__c_anonymous_sockaddr_can_j1939",3]]],[11,"clone","","",89,[[],["can_filter",3]]],[11,"clone","","",90,[[],["sockaddr_nl",3]]],[11,"clone","","",91,[[],["dirent",3]]],[11,"clone","","",92,[[],["dirent64",3]]],[11,"clone","","",93,[[],["sockaddr_alg",3]]],[11,"clone","","",94,[[],["uinput_setup",3]]],[11,"clone","","",95,[[],["uinput_user_dev",3]]],[11,"clone","","",96,[[],["af_alg_iv",3]]],[11,"clone","","",97,[[],["mq_attr",3]]],[11,"clone","","",150,[[],["__c_anonymous_sockaddr_can_can_addr",19]]],[11,"clone","","",98,[[],["sockaddr_can",3]]],[11,"clone","","",99,[[],["statx",3]]],[11,"clone","","",100,[[],["statx_timestamp",3]]],[11,"clone","","",101,[[],["aiocb",3]]],[11,"clone","","",102,[[],["__exit_status",3]]],[11,"clone","","",103,[[],["__timeval",3]]],[11,"clone","","",104,[[],["glob64_t",3]]],[11,"clone","","",105,[[],["msghdr",3]]],[11,"clone","","",106,[[],["cmsghdr",3]]],[11,"clone","","",107,[[],["termios",3]]],[11,"clone","","",108,[[],["mallinfo",3]]],[11,"clone","","",109,[[],["nlmsghdr",3]]],[11,"clone","","",110,[[],["nlmsgerr",3]]],[11,"clone","","",111,[[],["nl_pktinfo",3]]],[11,"clone","","",112,[[],["nl_mmap_req",3]]],[11,"clone","","",113,[[],["nl_mmap_hdr",3]]],[11,"clone","","",114,[[],["nlattr",3]]],[11,"clone","","",115,[[],["rtentry",3]]],[11,"clone","","",116,[[],["timex",3]]],[11,"clone","","",117,[[],["ntptimeval",3]]],[11,"clone","","",158,[[],["regex_t",3]]],[11,"clone","","",118,[[],["elf64_chdr",3]]],[11,"clone","","",119,[[],["elf32_chdr",3]]],[11,"clone","","",120,[[],["utmpx",3]]],[11,"clone","","",159,[[],["sigset_t",3]]],[11,"clone","","",121,[[],["sysinfo",3]]],[11,"clone","","",122,[[],["msqid_ds",3]]],[11,"clone","","",123,[[],["sigaction",3]]],[11,"clone","","",124,[[],["statfs",3]]],[11,"clone","","",125,[[],["flock",3]]],[11,"clone","","",126,[[],["flock64",3]]],[11,"clone","","",127,[[],["siginfo_t",3]]],[11,"clone","","",128,[[],["stack_t",3]]],[11,"clone","","",129,[[],["stat",3]]],[11,"clone","","",130,[[],["stat64",3]]],[11,"clone","","",131,[[],["statfs64",3]]],[11,"clone","","",132,[[],["statvfs64",3]]],[11,"clone","","",160,[[],["pthread_attr_t",3]]],[11,"clone","","",133,[[],["_libc_fpxreg",3]]],[11,"clone","","",134,[[],["_libc_xmmreg",3]]],[11,"clone","","",135,[[],["_libc_fpstate",3]]],[11,"clone","","",136,[[],["user_regs_struct",3]]],[11,"clone","","",137,[[],["user",3]]],[11,"clone","","",138,[[],["mcontext_t",3]]],[11,"clone","","",139,[[],["ipc_perm",3]]],[11,"clone","","",140,[[],["shmid_ds",3]]],[11,"clone","","",141,[[],["termios2",3]]],[11,"clone","","",142,[[],["ip_mreqn",3]]],[11,"clone","","",143,[[],["user_fpregs_struct",3]]],[11,"clone","","",144,[[],["ucontext_t",3]]],[11,"clone","","",145,[[],["statvfs",3]]],[11,"clone","","",161,[[],["max_align_t",3]]],[11,"clone","","",162,[[],["sem_t",3]]],[11,"clone","","",163,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",164,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",165,[[],["pthread_condattr_t",3]]],[11,"clone","","",146,[[],["fanotify_event_metadata",3]]],[11,"clone","","",166,[[],["pthread_cond_t",3]]],[11,"clone","","",167,[[],["pthread_mutex_t",3]]],[11,"clone","","",168,[[],["pthread_rwlock_t",3]]],[11,"clone","","",147,[[],["can_frame",3]]],[11,"clone","","",148,[[],["canfd_frame",3]]],[11,"clone","","",149,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[],["option",4]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",13,[[],["result",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[0,"bigint","","",null,null],[3,"ParseBigIntError","num::bigint","",null,null],[3,"TryFromBigIntError","","The error type returned when a checked conversion…",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",19,[[],[["option",4],["biguint",3]]]],[3,"U32Digits","","An iterator of `u32` digits representation of a `BigUint`…",null,null],[3,"U64Digits","","An iterator of `u64` digits representation of a `BigUint`…",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",20,null],[13,"NoSign","","",20,null],[13,"Plus","","",20,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",21,[[],[["option",4],["bigint",3]]]],[0,"complex","num","",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[3,"ParseComplexError","","",null,null],[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",22,null],[12,"x","","",22,null],[12,"y","","",22,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[]]],[5,"div_floor","","Floored integer division",null,[[]]],[5,"mod_floor","","Floored integer modulus",null,[[]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[]]],[5,"div_ceil","","Ceiled integer division",null,[[]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",23,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",23,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",23,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",24,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",24,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[3,"RangeFrom","","An iterator over the infinite range starting at `start`",null,null],[5,"range_from","","Return an iterator over the infinite range starting at…",null,[[],["rangefrom",3]]],[3,"RangeStepFrom","","An iterator over the infinite range starting at `start` by…",null,null],[5,"range_step_from","","Return an iterator over the infinite range starting at…",null,[[],["rangestepfrom",3]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",25,[[]]],[10,"neg_infinity","","Returns negative infinity.",25,[[]]],[10,"nan","","Returns NaN.",25,[[]]],[10,"neg_zero","","Returns `-0.0`.",25,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",25,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",25,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",25,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",25,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",25,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",25,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",25,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",25,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",25,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",25,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",25,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",25,[[]]],[11,"trunc","","Return the integer part of a number.",25,[[]]],[11,"fract","","Returns the fractional part of a number.",25,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",25,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",25,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",25,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",25,[[]]],[11,"min","","Returns the minimum of the two numbers.",25,[[]]],[11,"max","","Returns the maximum of the two numbers.",25,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",25,[[]]],[11,"powi","","Raise a number to an integer power.",25,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",25,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",25,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",25,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",26,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",26,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",26,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",26,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",26,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",26,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",26,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",26,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",26,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",26,[[]]],[10,"LN_10","","Return `ln(10.0)`.",26,[[]]],[10,"LN_2","","Return `ln(2.0)`.",26,[[]]],[10,"LOG10_E","","Return `log10(e)`.",26,[[]]],[10,"LOG2_E","","Return `log2(e)`.",26,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",26,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",26,[[]]],[11,"TAU","","Return the full circle constant `τ`.",26,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",26,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",26,[[]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",27,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",28,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",29,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",30,[[],["option",4]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"inv","","Returns the multiplicative inverse of `self`.",31,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",32,null],[10,"mul_add","","Performs the fused multiply-add operation.",32,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",33,[[]]],[0,"overflowing","num::traits::ops","",null,null],[8,"OverflowingAdd","num::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",34,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",35,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",36,[[]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",37,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",38,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",39,[[]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",40,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",41,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",42,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",43,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",44,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",45,[[]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","num::traits","",null,null],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",46,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",46,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",46,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",46,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",46,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",46,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",46,[[]]],[10,"trunc","","Return the integer part of a number.",46,[[]]],[10,"fract","","Returns the fractional part of a number.",46,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",46,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",46,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",46,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",46,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",46,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",46,[[]]],[10,"powi","","Raise a number to an integer power.",46,[[]]],[10,"powf","","Raise a number to a real number power.",46,[[]]],[10,"sqrt","","Take the square root of a number.",46,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",46,[[]]],[10,"exp2","","Returns `2^(self)`.",46,[[]]],[10,"ln","","Returns the natural logarithm of the number.",46,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",46,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",46,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",46,[[]]],[10,"to_degrees","","Converts radians to degrees.",46,[[]]],[10,"to_radians","","Converts degrees to radians.",46,[[]]],[10,"max","","Returns the maximum of the two numbers.",46,[[]]],[10,"min","","Returns the minimum of the two numbers.",46,[[]]],[10,"abs_sub","","The positive difference of two numbers.",46,[[]]],[10,"cbrt","","Take the cubic root of a number.",46,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",46,[[]]],[10,"sin","","Computes the sine of a number (in radians).",46,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",46,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",46,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",46,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",46,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",46,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",46,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",46,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",46,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",46,[[]]],[10,"sinh","","Hyperbolic sine function.",46,[[]]],[10,"cosh","","Hyperbolic cosine function.",46,[[]]],[10,"tanh","","Hyperbolic tangent function.",46,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",46,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",46,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",46,[[]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",13,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",47,null],[13,"Invalid","","",47,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",48,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",26,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",26,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",26,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",26,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",26,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",26,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",26,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",26,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",26,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",26,[[]]],[10,"LN_10","","Return `ln(10.0)`.",26,[[]]],[10,"LN_2","","Return `ln(2.0)`.",26,[[]]],[10,"LOG10_E","","Return `log10(e)`.",26,[[]]],[10,"LOG2_E","","Return `log2(e)`.",26,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",26,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",26,[[]]],[11,"TAU","","Return the full circle constant `τ`.",26,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",26,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",26,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",28,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",27,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",29,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",30,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"inv","","Returns the multiplicative inverse of `self`.",31,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",32,null],[10,"mul_add","","Performs the fused multiply-add operation.",32,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",33,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",37,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",39,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",38,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",40,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",42,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",43,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",44,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",45,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",41,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"rational","num","",null,null],[3,"Ratio","num::rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[3,"ParseRatioError","","",null,null],[11,"from","num::bigint","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",49,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",49,[[]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",50,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",50,[[]]],[11,"from","num::complex","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","num::bigint","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"from","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","num::complex","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_string","","",55,[[],["string",3]]],[11,"from","num::integer","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","num::iter","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into_iter","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into_iter","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"from","num::traits","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_string","","",48,[[],["string",3]]],[11,"from","num::rational","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"bitxor","num::bigint","",50,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",49,[[["bigint",3]],["bigint",3]]],[11,"hash","","",20,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",49,[[]]],[11,"neg","","",49,[[],["bigint",3]]],[11,"neg","","Negate Sign value.",20,[[],["sign",4]]],[11,"bitand_assign","","",50,[[["biguint",3]]]],[11,"bitand_assign","","",50,[[["biguint",3]]]],[11,"bitand_assign","","",49,[[["bigint",3]]]],[11,"bitand_assign","","",49,[[["bigint",3]]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[["biguint",3]],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[["biguint",3]],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[["bigint",3]],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[["bigint",3]],["bigint",3]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"default","","",50,[[],["biguint",3]]],[11,"default","","",49,[[],["bigint",3]]],[11,"bitand","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",50,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"description","","",51,[[]]],[11,"description","","",52,[[]]],[11,"from_i64","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_i128","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_u64","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_u128","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_f64","","",50,[[],[["option",4],["biguint",3]]]],[11,"clone","","",49,[[],["bigint",3]]],[11,"clone_from","","",49,[[["bigint",3]]]],[11,"clone","","",52,[[],["tryfrombiginterror",3]]],[11,"clone","","",20,[[],["sign",4]]],[11,"clone","","",51,[[],["parsebiginterror",3]]],[11,"clone","","",50,[[],["biguint",3]]],[11,"clone_from","","",50,[[["biguint",3]]]],[11,"to_biguint","","",50,[[],[["option",4],["biguint",3]]]],[11,"to_biguint","","",49,[[],[["option",4],["biguint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[["bigint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[["biguint",3]]]],[11,"rem_assign","","",49,[[["bigint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[["biguint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",49,[[["biguint",3]],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"eq","","",49,[[["bigint",3]]]],[11,"eq","","",50,[[["biguint",3]]]],[11,"eq","","",20,[[["sign",4]]]],[11,"eq","","",51,[[["parsebiginterror",3]]]],[11,"ne","","",51,[[["parsebiginterror",3]]]],[11,"eq","","",52,[[["tryfrombiginterror",3]]]],[11,"ne","","",52,[[["tryfrombiginterror",3]]]],[11,"nth_root","","",49,[[],["bigint",3]]],[11,"sqrt","","",49,[[],["bigint",3]]],[11,"cbrt","","",49,[[],["bigint",3]]],[11,"nth_root","","",50,[[],["biguint",3]]],[11,"sqrt","","",50,[[],["biguint",3]]],[11,"cbrt","","",50,[[],["biguint",3]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[["bigint",3]]]],[11,"mul_assign","","",50,[[["biguint",3]]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",49,[[["bigint",3]]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[["biguint",3]]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",20,[[["sign",4]],["sign",4]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[["biguint",3]],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[["bigint",3]],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[["biguint",3]],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[["bigint",3]],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"cmp","","",49,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",50,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",20,[[["sign",4]],["ordering",4]]],[11,"len","","",53,[[]]],[11,"len","","",54,[[]]],[11,"abs","","",49,[[],["bigint",3]]],[11,"abs_sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"signum","","",49,[[],["bigint",3]]],[11,"is_positive","","",49,[[]]],[11,"is_negative","","",49,[[]]],[11,"next","","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"nth","","",54,[[],["option",4]]],[11,"last","","",54,[[],["option",4]]],[11,"count","","",54,[[]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"last","","",53,[[],["option",4]]],[11,"count","","",53,[[]]],[11,"sum","","",50,[[],["biguint",3]]],[11,"sum","","",49,[[],["bigint",3]]],[11,"product","","",49,[[],["bigint",3]]],[11,"product","","",50,[[],["biguint",3]]],[11,"div_rem","","",50,[[["biguint",3]]]],[11,"div_floor","","",50,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",50,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",50,[[["biguint",3]]]],[11,"div_ceil","","",50,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",50,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",50,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",50,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",50,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",50,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",50,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",50,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",50,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",50,[[["biguint",3]],["biguint",3]]],[11,"div_rem","","",49,[[["bigint",3]]]],[11,"div_floor","","",49,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",49,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",49,[[["bigint",3]]]],[11,"div_ceil","","",49,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",49,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",49,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",49,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",49,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",49,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",49,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",49,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",49,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",49,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",49,[[["bigint",3]],["bigint",3]]],[11,"checked_div","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_div","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"not","","",49,[[],["bigint",3]]],[11,"checked_mul","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"bitxor_assign","","",49,[[["bigint",3]]]],[11,"bitxor_assign","","",49,[[["bigint",3]]]],[11,"bitxor_assign","","",50,[[["biguint",3]]]],[11,"bitxor_assign","","",50,[[["biguint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",50,[[],[["parsebiginterror",3],["biguint",3],["result",4]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",49,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"div","","",50,[[["biguint",3]],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[["biguint",3]],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[["bigint",3]],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[["bigint",3]],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[["bigint",3]],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[["bigint",3]],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[["biguint",3]],["biguint",3]]],[11,"rem","","",50,[[["biguint",3]],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",50,[[["bigint",3]],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[["bigint",3]],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"from_str","","",49,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"from_str","","",50,[[],[["parsebiginterror",3],["biguint",3],["result",4]]]],[11,"to_i64","","",49,[[],["option",4]]],[11,"to_i128","","",49,[[],["option",4]]],[11,"to_u64","","",49,[[],["option",4]]],[11,"to_u128","","",49,[[],["option",4]]],[11,"to_f32","","",49,[[],["option",4]]],[11,"to_f64","","",49,[[],["option",4]]],[11,"to_i64","","",50,[[],["option",4]]],[11,"to_i128","","",50,[[],["option",4]]],[11,"to_u64","","",50,[[],["option",4]]],[11,"to_u128","","",50,[[],["option",4]]],[11,"to_f32","","",50,[[],["option",4]]],[11,"to_f64","","",50,[[],["option",4]]],[11,"div_assign","","",50,[[["biguint",3]]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[["bigint",3]]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[["bigint",3]]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[["biguint",3]]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"one","","",49,[[],["bigint",3]]],[11,"set_one","","",49,[[]]],[11,"is_one","","",49,[[]]],[11,"one","","",50,[[],["biguint",3]]],[11,"set_one","","",50,[[]]],[11,"is_one","","",50,[[]]],[11,"zero","","",50,[[],["biguint",3]]],[11,"set_zero","","",50,[[]]],[11,"is_zero","","",50,[[]]],[11,"zero","","",49,[[],["bigint",3]]],[11,"set_zero","","",49,[[]]],[11,"is_zero","","",49,[[]]],[11,"checked_add","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_add","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[["biguint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[["bigint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[["bigint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[["biguint",3]]]],[11,"add_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[["bigint",3]]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[["bigint",3]]]],[11,"sub_assign","","",50,[[["biguint",3]]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[["biguint",3]]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"bitor_assign","","",50,[[["biguint",3]]]],[11,"bitor_assign","","",50,[[["biguint",3]]]],[11,"bitor_assign","","",49,[[["bigint",3]]]],[11,"bitor_assign","","",49,[[["bigint",3]]]],[11,"bitor","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",49,[[["bigint",3]],["bigint",3]]],[11,"checked_sub","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_sub","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",49,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",50,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",20,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",49,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",50,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",50,[[["biguint",3]],["biguint",3]]],[11,"sub","","",50,[[["biguint",3]],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[["biguint",3]],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[["biguint",3]],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[["biguint",3]],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[["biguint",3]],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"eq","num::integer","",22,[[["extendedgcd",3]]]],[11,"ne","","",22,[[["extendedgcd",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",22,[[],["extendedgcd",3]]],[11,"next","","",56,[[],["option",4]]],[11,"fmt","num::traits","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"product","num::complex","",0,[[],["complex",3]]],[11,"product","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"inv","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_usize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_isize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f64","","",0,[[],[["option",4],["complex",3]]]],[11,"neg","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["result",4],["complex",3]]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["result",4],["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[]]],[11,"default","","",0,[[],["complex",3]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"description","","",55,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[]]],[11,"from","","",0,[[],[["option",4],["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["complex",3]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"from","","",0,[[],["complex",3]]],[11,"from","","",0,[[],["complex",3]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",55,[[["parsecomplexerror",3]]]],[11,"ne","","",55,[[["parsecomplexerror",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"zero","","",0,[[],["complex",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"one","","",0,[[],["complex",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"as_","","",0,[[]]],[11,"zero","num::rational","",63,[[],["ratio",3]]],[11,"is_zero","","",63,[[]]],[11,"set_zero","","",63,[[]]],[11,"product","","",63,[[],["ratio",3]]],[11,"product","","",63,[[],["ratio",3]]],[11,"partial_cmp","","",63,[[["ratio",3]],[["option",4],["ordering",4]]]],[11,"checked_div","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"hash","","",63,[[]]],[11,"neg","","",63,[[],["ratio",3]]],[11,"div","","",63,[[["ratio",3]],["ratio",3]]],[11,"div","","",63,[[["ratio",3]],["ratio",3]]],[11,"div","","",63,[[],["ratio",3]]],[11,"div","","",63,[[],["ratio",3]]],[11,"checked_sub","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"rem","","",63,[[["ratio",3]],["ratio",3]]],[11,"rem","","",63,[[],["ratio",3]]],[11,"rem","","",63,[[],["ratio",3]]],[11,"rem","","",63,[[["ratio",3]],["ratio",3]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add","","",63,[[],["ratio",3]]],[11,"add","","",63,[[["ratio",3]],["ratio",3]]],[11,"add","","",63,[[],["ratio",3]]],[11,"add","","",63,[[["ratio",3]],["ratio",3]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",63,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",63,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"div_assign","","",63,[[["ratio",3]]]],[11,"div_assign","","",63,[[]]],[11,"div_assign","","",63,[[["ratio",3]]]],[11,"div_assign","","",63,[[]]],[11,"inv","","",63,[[],["ratio",3]]],[11,"add_assign","","",63,[[["ratio",3]]]],[11,"add_assign","","",63,[[]]],[11,"add_assign","","",63,[[["ratio",3]]]],[11,"add_assign","","",63,[[]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["biguint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["biguint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["bigint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["bigint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"description","","",64,[[]]],[11,"abs","","",63,[[],["ratio",3]]],[11,"abs_sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"signum","","",63,[[],["ratio",3]]],[11,"is_positive","","",63,[[]]],[11,"is_negative","","",63,[[]]],[11,"sub_assign","","",63,[[]]],[11,"sub_assign","","",63,[[["ratio",3]]]],[11,"sub_assign","","",63,[[]]],[11,"sub_assign","","",63,[[["ratio",3]]]],[11,"one","","",63,[[],["ratio",3]]],[11,"is_one","","",63,[[]]],[11,"set_one","","",63,[[]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_i64","","",63,[[],["option",4]]],[11,"to_i128","","",63,[[],["option",4]]],[11,"to_u64","","",63,[[],["option",4]]],[11,"to_u128","","",63,[[],["option",4]]],[11,"to_f64","","",63,[[],["option",4]]],[11,"clone","","",64,[[],["parseratioerror",3]]],[11,"clone","","",63,[[],["ratio",3]]],[11,"into","","",63,[[]]],[11,"rem_assign","","",63,[[["ratio",3]]]],[11,"rem_assign","","",63,[[]]],[11,"rem_assign","","",63,[[["ratio",3]]]],[11,"rem_assign","","",63,[[]]],[11,"from","","",63,[[],["ratio",3]]],[11,"from","","",63,[[],["ratio",3]]],[11,"eq","","",64,[[["parseratioerror",3]]]],[11,"ne","","",64,[[["parseratioerror",3]]]],[11,"eq","","",63,[[["ratio",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul_assign","","",63,[[["ratio",3]]]],[11,"mul_assign","","",63,[[["ratio",3]]]],[11,"mul_assign","","",63,[[]]],[11,"mul_assign","","",63,[[]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul","","",63,[[],["ratio",3]]],[11,"mul","","",63,[[],["ratio",3]]],[11,"mul","","",63,[[["ratio",3]],["ratio",3]]],[11,"mul","","",63,[[["ratio",3]],["ratio",3]]],[11,"cmp","","",63,[[["ratio",3]],["ordering",4]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"checked_mul","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"sum","","",63,[[],["ratio",3]]],[11,"sum","","",63,[[],["ratio",3]]],[11,"sub","","",63,[[],["ratio",3]]],[11,"sub","","",63,[[],["ratio",3]]],[11,"sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"checked_add","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"next_back","num::iter","",58,[[],["option",4]]],[11,"next_back","","",57,[[],["option",4]]],[11,"clone","","",57,[[],["range",3]]],[11,"clone","","",62,[[],["rangestepfrom",3]]],[11,"clone","","",58,[[],["rangeinclusive",3]]],[11,"clone","","",60,[[],["rangestepinclusive",3]]],[11,"clone","","",59,[[],["rangestep",3]]],[11,"clone","","",61,[[],["rangefrom",3]]],[11,"next","","",59,[[],["option",4]]],[11,"next","","",61,[[],["option",4]]],[11,"size_hint","","",61,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"next","","",62,[[],["option",4]]],[11,"size_hint","","",62,[[]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"new","num::bigint","Creates and initializes a BigInt.",49,[[["vec",3],["sign",4]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",49,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",49,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",49,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",49,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",49,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",49,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",49,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",49,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",49,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",49,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",49,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",49,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",49,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",49,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",49,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",49,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",49,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",49,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",49,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",49,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",49,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",49,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",49,[[],[["option",4],["biguint",3]]]],[11,"checked_add","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",49,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",49,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",49,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",49,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",49,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",49,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",49,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",49,[[]]],[11,"new","","Creates and initializes a `BigUint`.",50,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",50,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",50,[[],[["option",4],["biguint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",50,[[],[["option",4],["biguint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",50,[[],[["option",4],["biguint",3]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",50,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",50,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",50,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",50,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",50,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",50,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",50,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",50,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",50,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",50,[[]]],[11,"pow","","Returns `self ^ exponent`.",50,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",50,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",50,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",50,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",50,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",50,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",50,[[]]],[11,"count_ones","","Returns the number of one bits.",50,[[]]],[11,"bit","","Returns whether the bit in the given position is set",50,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",50,[[]]],[11,"new","num::complex","Create a new Complex",0,[[],["complex",3]]],[11,"i","","Returns imaginary unit",0,[[],["complex",3]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[],["complex",3]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[],["complex",3]]],[11,"inv","","Returns `1/self`",0,[[],["complex",3]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[],["complex",3]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[],["complex",3]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[],["complex",3]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[],["complex",3]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[],["complex",3]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[],["complex",3]]],[11,"powf","","Raises `self` to a floating point power.",0,[[],["complex",3]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[],["complex",3]]],[11,"powc","","Raises `self` to a complex power.",0,[[["complex",3]],["complex",3]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[],["complex",3]]],[11,"sin","","Computes the sine of `self`.",0,[[],["complex",3]]],[11,"cos","","Computes the cosine of `self`.",0,[[],["complex",3]]],[11,"tan","","Computes the tangent of `self`.",0,[[],["complex",3]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[],["complex",3]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[],["complex",3]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[],["complex",3]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[],["complex",3]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[],["complex",3]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[],["complex",3]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[],["complex",3]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[],["complex",3]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[],["complex",3]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"into_original","num::bigint","Extract the original value, if available. The value will…",52,[[]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",56,[[],["iterbinomial",3]]],[11,"new_raw","num::rational","Creates a `Ratio` without checking for `denom == 0` or…",63,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",63,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",63,[[]]],[11,"new","","Creates a new `Ratio`.",63,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",63,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",63,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",63,[[]]],[11,"reduced","","Returns a reduced copy of self.",63,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",63,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",63,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",63,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",63,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",63,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",63,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",63,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",63,[[],[["ratio",3],["option",4]]]],[11,"approximate_float","","",63,[[],[["option",4],["ratio",3]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Bounded"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"Num"],[8,"One"],[8,"PrimInt"],[8,"Saturating"],[8,"Signed"],[8,"Zero"],[8,"ToBigUint"],[4,"Sign"],[8,"ToBigInt"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseBigIntError"],[3,"TryFromBigIntError"],[3,"U32Digits"],[3,"U64Digits"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_bigint":{"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"ParseBigIntError","num_bigint","",null,null],[3,"TryFromBigIntError","","The error type returned when a checked conversion…",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"U32Digits","","An iterator of `u32` digits representation of a `BigUint`…",null,null],[3,"U64Digits","","An iterator of `u64` digits representation of a `BigUint`…",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[11,"new","","Creates and initializes a BigInt.",1,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["sign",4],["biguint",3]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,[[],[["bigint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["bigint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["bigint",3],["option",4]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",1,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",1,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",1,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",1,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",1,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",1,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",1,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_div","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"pow","","Returns `self ^ exponent`.",1,[[]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",1,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",1,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",1,[[]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",2,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",2,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[]]],[11,"pow","","Returns `self ^ exponent`.",2,[[]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",2,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",2,[[]]],[11,"count_ones","","Returns the number of one bits.",2,[[]]],[11,"bit","","Returns whether the bit in the given position is set",2,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",2,[[]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[],[["biguint",3],["option",4]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[],[["bigint",3],["option",4]]]],[11,"into_original","","Extract the original value, if available. The value will…",5,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",2,[[]]],[11,"from","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",1,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",1,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_bigint","","",1,[[],[["bigint",3],["option",4]]]],[11,"to_bigint","","",2,[[],[["bigint",3],["option",4]]]],[11,"to_biguint","","",1,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",2,[[],[["biguint",3],["option",4]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["biguint",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",1,[[["bigint",3]]]],[11,"eq","","",2,[[["biguint",3]]]],[11,"eq","","",6,[[["parsebiginterror",3]]]],[11,"ne","","",6,[[["parsebiginterror",3]]]],[11,"eq","","",5,[[["tryfrombiginterror",3]]]],[11,"ne","","",5,[[["tryfrombiginterror",3]]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"cmp","","",1,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",2,[[["biguint",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",1,[[],["bigint",3]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"not","","",1,[[],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"last","","",7,[[],["option",4]]],[11,"count","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"count","","",8,[[]]],[11,"len","","",7,[[]]],[11,"len","","",8,[[]]],[11,"product","","",1,[[]]],[11,"product","","",2,[[]]],[11,"sum","","",1,[[]]],[11,"sum","","",2,[[]]],[11,"try_from","","",2,[[["bigint",3]],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[["bigint",3]],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"from_str","","",1,[[],[["bigint",3],["result",4],["parsebiginterror",3]]]],[11,"from_str","","",2,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",6,[[],["parsebiginterror",3]]],[11,"clone","","",5,[[],["tryfrombiginterror",3]]],[11,"default","","",1,[[],["bigint",3]]],[11,"default","","",2,[[],["biguint",3]]],[11,"description","","",6,[[]]],[11,"description","","",5,[[]]],[11,"nth_root","","",1,[[]]],[11,"sqrt","","",1,[[]]],[11,"cbrt","","",1,[[]]],[11,"nth_root","","",2,[[]]],[11,"sqrt","","",2,[[]]],[11,"cbrt","","",2,[[]]],[11,"div_rem","","",1,[[["bigint",3]]]],[11,"div_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",1,[[["bigint",3]]]],[11,"div_ceil","","",1,[[]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",1,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[11,"div_rem","","",2,[[["biguint",3]]]],[11,"div_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",2,[[["biguint",3]]]],[11,"div_ceil","","",2,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",2,[[]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[11,"to_i64","","",1,[[],["option",4]]],[11,"to_i128","","",1,[[],["option",4]]],[11,"to_u64","","",1,[[],["option",4]]],[11,"to_u128","","",1,[[],["option",4]]],[11,"to_f32","","",1,[[],["option",4]]],[11,"to_f64","","",1,[[],["option",4]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_i128","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_u128","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",1,[[],[["bigint",3],["option",4]]]],[11,"from_i128","","",1,[[],[["bigint",3],["option",4]]]],[11,"from_u64","","",1,[[],[["bigint",3],["option",4]]]],[11,"from_u128","","",1,[[],[["bigint",3],["option",4]]]],[11,"from_f64","","",1,[[],[["bigint",3],["option",4]]]],[11,"from_i64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[],[["bigint",3],["result",4],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"zero","","",1,[[],["bigint",3]]],[11,"set_zero","","",1,[[]]],[11,"is_zero","","",1,[[]]],[11,"zero","","",2,[[],["biguint",3]]],[11,"set_zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",1,[[],["bigint",3]]],[11,"set_one","","",1,[[]]],[11,"is_one","","",1,[[]]],[11,"one","","",2,[[],["biguint",3]]],[11,"set_one","","",2,[[]]],[11,"is_one","","",2,[[]]],[11,"checked_add","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_add","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_sub","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_mul","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",1,[[["bigint",3]],[["bigint",3],["option",4]]]],[11,"checked_div","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[["biguint",3]],["bigint",3]]],[11,"pow","","",1,[[["biguint",3]],["bigint",3]]],[11,"pow","","",2,[[["biguint",3]],["biguint",3]]],[11,"pow","","",2,[[["biguint",3]],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"abs","","",1,[[],["bigint",3]]],[11,"abs_sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"signum","","",1,[[],["bigint",3]]],[11,"is_positive","","",1,[[]]],[11,"is_negative","","",1,[[]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"TryFromBigIntError"],[3,"ParseBigIntError"],[3,"U32Digits"],[3,"U64Digits"]]},\
"num_complex":{"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[]]],[11,"i","","Returns imaginary unit",0,[[]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[]]],[11,"inv","","Returns `1/self`",0,[[]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[]]],[11,"powf","","Raises `self` to a floating point power.",0,[[]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[]]],[11,"powc","","Raises `self` to a complex power.",0,[[]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[]]],[11,"sin","","Computes the sine of `self`.",0,[[]]],[11,"cos","","Computes the cosine of `self`.",0,[[]]],[11,"tan","","Computes the tangent of `self`.",0,[[]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",1,[[["parsecomplexerror",3]]]],[11,"ne","","",1,[[["parsecomplexerror",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["complex",3]]],[11,"default","","",0,[[],["complex",3]]],[11,"description","","",1,[[]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"from_usize","","",0,[[],["option",4]]],[11,"from_isize","","",0,[[],["option",4]]],[11,"from_u8","","",0,[[],["option",4]]],[11,"from_u16","","",0,[[],["option",4]]],[11,"from_u32","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_i8","","",0,[[],["option",4]]],[11,"from_i16","","",0,[[],["option",4]]],[11,"from_i32","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from","","",0,[[["toprimitive",8]],["option",4]]],[11,"as_","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[["complex",3]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",2,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",3,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",3,[[]]],[11,"div_ceil","","Ceiled integer division.",3,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",3,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",3,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",3,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",3,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",3,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",3,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",3,[[]]],[10,"is_even","","Returns `true` if the number is even.",3,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",3,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",3,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",3,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",3,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",3,[[]]],[11,"new","","For a given n, iterate over all binomial coefficients…",4,[[],["iterbinomial",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["extendedgcd",3]]]],[11,"ne","","",0,[[["extendedgcd",3]]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[3,"RangeFrom","","An iterator over the infinite range starting at `start`",null,null],[3,"RangeStepFrom","","An iterator over the infinite range starting at `start` by…",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[5,"range_from","","Return an iterator over the infinite range starting at…",null,[[],["rangefrom",3]]],[5,"range_step_from","","Return an iterator over the infinite range starting at…",null,[[],["rangestepfrom",3]]],[11,"from","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]],[11,"clone","","",4,[[],["rangefrom",3]]],[11,"clone","","",5,[[],["rangestepfrom",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new `Ratio`.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",0,[[["floatcore",8]],[["bigrational",6],["option",4]]]],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["ratio",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[["parseratioerror",3]]]],[11,"ne","","",1,[[["parseratioerror",3]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"into","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"description","","",1,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"checked_div","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"checked_mul","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"checked_sub","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[["biguint",3]],["ratio",3]]],[11,"pow","","",0,[[["biguint",3]],["ratio",3]]],[11,"pow","","",0,[[["bigint",3]],["ratio",3]]],[11,"pow","","",0,[[["bigint",3]],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[]]],[11,"is_negative","","",0,[[]]],[11,"inv","","",0,[[],["ratio",3]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",9,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",24,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",25,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",26,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",27,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",27,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",28,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",29,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",30,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",31,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",32,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",33,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",34,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",35,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",36,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["mul",8],["clone",8],["one",8]],[["one",8],["clone",8],["mul",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one",8],["clone",8],["checkedmul",8]],[["checkedmul",8],["one",8],["option",4],["clone",8]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",37,null],[10,"pow","","Returns `self` to the power `rhs`.",37,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[]]],[10,"trunc","","Return the integer part of a number.",38,[[]]],[10,"fract","","Returns the fractional part of a number.",38,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[]]],[10,"powi","","Raise a number to an integer power.",38,[[]]],[10,"powf","","Raise a number to a real number power.",38,[[]]],[10,"sqrt","","Take the square root of a number.",38,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[]]],[10,"exp2","","Returns `2^(self)`.",38,[[]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[]]],[10,"to_degrees","","Converts radians to degrees.",38,[[]]],[10,"to_radians","","Converts degrees to radians.",38,[[]]],[10,"max","","Returns the maximum of the two numbers.",38,[[]]],[10,"min","","Returns the minimum of the two numbers.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"cbrt","","Take the cubic root of a number.",38,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[]]],[10,"sinh","","Hyperbolic sine function.",38,[[]]],[10,"cosh","","Hyperbolic cosine function.",38,[[]]],[10,"tanh","","Hyperbolic tangent function.",38,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",39,[[]]],[10,"abs_sub","","The positive difference of two numbers.",39,[[]]],[10,"signum","","Returns the sign of the number.",39,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",39,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",39,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",40,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",40,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","Safety Caller must ensure the type of Self is appropriate…",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","Safety Caller must ensure the type of Self is appropriate…",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","Safety Caller must ensure the type of Self is appropriate…",16,[[]]],[10,"unsafe_read_be","","Safety Caller must ensure the type of Self is appropriate…",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"eq","","",29,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"LineColumn","","A line-column pair representing the start or end of a…",null,null],[12,"line","","The 1-indexed line in the source file on which the span…",0,null],[12,"column","","The 0-indexed column (in UTF-8 characters) in the source…",0,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","A `Punct` is a single punctuation character like `+`, `-`…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",1,null],[13,"Ident","","An identifier.",1,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",1,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",1,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",2,null],[13,"Brace","","`{ ... }`",2,null],[13,"Bracket","","`[ ... ]`",2,null],[13,"None","","`Ø ... Ø`",2,null],[4,"Spacing","","Whether a `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",3,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",3,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",4,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",4,[[]]],[11,"span","","",5,[[],["span",3]]],[11,"call_site","","The span of the invocation of the current procedural macro.",6,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",6,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",6,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",6,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",6,[[],["span",3]]],[11,"start","","Get the starting line/column in the source file for this…",6,[[],["linecolumn",3]]],[11,"end","","Get the ending line/column in the source file for this span.",6,[[],["linecolumn",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",6,[[["span",3]],[["option",4],["span",3]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",1,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",1,[[["span",3]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",7,[[["tokenstream",3],["delimiter",4]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",7,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",7,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",7,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",7,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",7,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",7,[[["span",3]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",8,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",8,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",9,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",9,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",9,[[["span",3]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",10,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",10,[[],["literal",3]]],[11,"string","","String literal.",10,[[],["literal",3]]],[11,"character","","Character literal.",10,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",10,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",10,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",10,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",10,[[["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","proc_macro2::token_stream","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","proc_macro2","",6,[[["span",3]],["span",3]]],[11,"from","","",4,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",4,[[["tokentree",4]]]],[11,"from","","",1,[[["group",3]],["tokentree",4]]],[11,"from","","",1,[[["ident",3]],["tokentree",4]]],[11,"from","","",1,[[["punct",3]],["tokentree",4]]],[11,"from","","",1,[[["literal",3]],["tokentree",4]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"into_iter","","",4,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",11,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",4,[[],["tokenstream",3]]],[11,"clone","","",0,[[],["linecolumn",3]]],[11,"clone","","",6,[[],["span",3]]],[11,"clone","","",1,[[],["tokentree",4]]],[11,"clone","","",7,[[],["group",3]]],[11,"clone","","",2,[[],["delimiter",4]]],[11,"clone","","",8,[[],["punct",3]]],[11,"clone","","",3,[[],["spacing",4]]],[11,"clone","","",9,[[],["ident",3]]],[11,"clone","","",10,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",11,[[],["intoiter",3]]],[11,"default","proc_macro2","",4,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",9,[[["ident",3]],["ordering",4]]],[11,"eq","","",0,[[["linecolumn",3]]]],[11,"ne","","",0,[[["linecolumn",3]]]],[11,"eq","","",2,[[["delimiter",4]]]],[11,"eq","","",3,[[["spacing",4]]]],[11,"eq","","",9,[[["ident",3]]]],[11,"eq","","",9,[[]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",11,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_str","","",4,[[],[["lexerror",3],["result",4],["tokenstream",3]]]],[11,"from_str","","",10,[[],[["lexerror",3],["result",4]]]]],"p":[[3,"LineColumn"],[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"LexError"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[]]],[10,"next_u64","","Return the next random `u64`.",0,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[],[["error",3],["result",4]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `u8`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"WeightedIndex","","A distribution using weighted sampling of discrete items",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",3,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",3,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",3,null],[13,"TooMany","","Too many weights are provided (length greater than…",3,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",4,[[],[["bernoulli",3],["bernoullierror",4],["result",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",4,[[],[["bernoulli",3],["bernoullierror",4],["result",4]]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformChar","","The back-end implementing [`UniformSampler`] for `char`.",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",6,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",6,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,[[]]],[10,"sample","","Sample a value.",6,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",6,[[]]],[11,"sample_single_inclusive","","Sample a single value uniformly from a range with…",6,[[]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",7,[[]]],[8,"SampleRange","","Range that supports generating a single sample efficiently.",null,null],[10,"sample_single","","Generate a sample from the given range.",8,[[]]],[10,"is_empty","","Check whether the range is empty.",8,[[]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[],["uniform",3]]],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling of discrete items",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",3,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",3,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",3,null],[13,"TooMany","","Too many weights are provided (length greater than…",3,null],[0,"alias_method","","",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","",null,null],[8,"Weight","","",null,null],[11,"new","","",10,[[["vec",3]],[["result",4],["weightederror",4]]]],[11,"new","rand::distributions","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[],[["weightederror",4],["result",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",11,[[],[["weightederror",4],["result",4]]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",12,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",12,[[],["distiter",3]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","A reference to the thread-local generator",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",13,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",14,[[]]],[11,"reseed","","Reseed the internal PRNG.",14,[[],[["result",4],["error",3]]]],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",15,[[]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[5,"sample_weighted","","Randomly sample exactly `amount` distinct indices from…",null,[[],[["result",4],["indexvec",4],["weightederror",4]]]],[11,"len","","Returns the number of indices",16,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",16,[[]]],[11,"index","","Return the value at the given `index`.",16,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",16,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",16,[[],["indexveciter",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",17,null],[10,"choose","","Returns a reference to one random element of the slice, or…",17,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",17,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",17,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",17,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",17,[[],[["result",4],["weightederror",4]]]],[10,"choose_multiple_weighted","","Similar to [`choose_multiple`], but where the likelihood…",17,[[],[["result",4],["slicechooseiter",3],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",17,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",17,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",18,[[],["option",4]]],[11,"choose_stable","","Choose one element at random from the iterator.",18,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",18,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",18,[[],["vec",3]]],[8,"Fill","rand","Types which may be filled with random data",null,null],[10,"try_fill","","Fill self with random data",19,[[],[["result",4],["error",3]]]],[8,"Rng","","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",20,[[]]],[11,"gen_range","","Generate a random value in the given range.",20,[[]]],[11,"sample","","Sample a new value, using the given distribution.",20,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",20,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [`Fill`] with random data",20,[[]]],[11,"try_fill","","Fill any type implementing [`Fill`] with random data",20,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",20,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",20,[[]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_string","","",21,[[],["string",3]]],[11,"vzip","","",21,[[]]],[11,"from","rand::distributions","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","rand::distributions::uniform","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","rand::distributions","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"vzip","","",3,[[]]],[11,"from","rand::distributions::uniform","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","rand::distributions::weighted::alias_method","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","rand::rngs","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","rand::rngs::adapter","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_string","","",35,[[],["string",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","rand::rngs::mock","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","rand::seq","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","rand::seq::index","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"fmt","rand::rngs","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","rand::rngs","",31,[[],["osrng",3]]],[11,"read","rand","",0,[[],[["result",4],["error",3]]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","rand::rngs","",31,[[],["osrng",3]]],[11,"next_u32","","",31,[[]]],[11,"next_u64","","",31,[[]]],[11,"fill_bytes","","",31,[[]]],[11,"try_fill_bytes","","",31,[[],[["error",3],["result",4]]]],[11,"source","rand","",21,[[],[["option",4],["error",8]]]],[11,"from","","",21,[[["error",3]],["error",3]]],[11,"from","","",21,[[["nonzerou32",3]],["error",3]]],[11,"new","rand::distributions::uniform","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",27,[[]]],[11,"new_inclusive","","",27,[[]]],[11,"sample","","",27,[[]]],[11,"sample_single","","",27,[[]]],[11,"sample_single_inclusive","","",27,[[]]],[11,"new","","",28,[[]]],[11,"new_inclusive","","",28,[[]]],[11,"sample","","",28,[[]]],[11,"new","","",29,[[]]],[11,"new_inclusive","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample_single","","",29,[[]]],[11,"new","","",29,[[]]],[11,"new_inclusive","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample_single","","",29,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[],["duration",3]]],[11,"sample","rand::distributions","",4,[[]]],[11,"sample","rand::distributions::uniform","",9,[[]]],[11,"sample","rand::distributions","",11,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",22,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",22,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[],["nonzerou8",3]]],[11,"sample","","",26,[[],["nonzerou16",3]]],[11,"sample","","",26,[[],["nonzerou32",3]]],[11,"sample","","",26,[[],["nonzerou64",3]]],[11,"sample","","",26,[[],["nonzerou128",3]]],[11,"sample","","",26,[[],["nonzerousize",3]]],[11,"sample","","",26,[[]]],[11,"sample","","",24,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",26,[[],["option",4]]],[11,"sample","","",26,[[],["wrapping",3]]],[11,"from","rand::distributions::uniform","",9,[[["range",3]],["uniform",3]]],[11,"from","","",9,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",16,[[["vec",3]]]],[11,"from","","",16,[[["vec",3]]]],[11,"fmt","rand::distributions","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",10,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",15,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",36,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",35,[[["formatter",3]],["result",6]]],[11,"eq","rand::distributions","",2,[[["bernoullierror",4]]]],[11,"eq","","",3,[[["weightederror",4]]]],[11,"eq","rand::rngs::mock","",15,[[["steprng",3]]]],[11,"ne","","",15,[[["steprng",3]]]],[11,"eq","rand::rngs","",32,[[["smallrng",3]]]],[11,"ne","","",32,[[["smallrng",3]]]],[11,"eq","","",33,[[["stdrng",3]]]],[11,"ne","","",33,[[["stdrng",3]]]],[11,"eq","rand::seq::index","",16,[[["indexvec",4]]]],[11,"next","rand::distributions","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"next","rand::seq::index","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","rand::seq","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"into_iter","rand::seq::index","Convert into an iterator over the indices as a sequence of…",16,[[],["indexvecintoiter",4]]],[11,"len","rand::seq","",36,[[]]],[11,"clone","rand::distributions","",4,[[],["bernoulli",3]]],[11,"clone","","",2,[[],["bernoullierror",4]]],[11,"clone","rand::distributions::uniform","",9,[[],["uniform",3]]],[11,"clone","","",27,[[],["uniformint",3]]],[11,"clone","","",28,[[],["uniformchar",3]]],[11,"clone","","",29,[[],["uniformfloat",3]]],[11,"clone","","",30,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",11,[[],["weightedindex",3]]],[11,"clone","","",3,[[],["weightederror",4]]],[11,"clone","","",23,[[],["openclosed01",3]]],[11,"clone","","",22,[[],["open01",3]]],[11,"clone","","",26,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",14,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",15,[[],["steprng",3]]],[11,"clone","rand::rngs","",32,[[],["smallrng",3]]],[11,"clone","","",33,[[],["stdrng",3]]],[11,"clone","","",34,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",16,[[],["indexvec",4]]],[11,"clone","","",38,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",34,[[],["threadrng",3]]],[11,"source","rand::rngs::adapter","",35,[[],[["error",8],["option",4]]]],[11,"next_u32","","",13,[[]]],[11,"next_u64","","",13,[[]]],[11,"fill_bytes","","",13,[[]]],[11,"try_fill_bytes","","",13,[[],[["result",4],["error",3]]]],[11,"next_u32","","",14,[[]]],[11,"next_u64","","",14,[[]]],[11,"fill_bytes","","",14,[[]]],[11,"try_fill_bytes","","",14,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs::mock","",15,[[]]],[11,"next_u64","","",15,[[]]],[11,"fill_bytes","","",15,[[]]],[11,"try_fill_bytes","","",15,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",32,[[]]],[11,"next_u64","","",32,[[]]],[11,"fill_bytes","","",32,[[]]],[11,"try_fill_bytes","","",32,[[],[["result",4],["error",3]]]],[11,"next_u32","","",33,[[]]],[11,"next_u64","","",33,[[]]],[11,"fill_bytes","","",33,[[]]],[11,"try_fill_bytes","","",33,[[],[["result",4],["error",3]]]],[11,"next_u32","","",34,[[]]],[11,"next_u64","","",34,[[]]],[11,"fill_bytes","","",34,[[]]],[11,"try_fill_bytes","","",34,[[],[["result",4],["error",3]]]],[11,"from_seed","","",32,[[]]],[11,"from_rng","","",32,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",33,[[]]],[11,"from_rng","","",33,[[["rngcore",8]],[["result",4],["error",3]]]],[18,"CUSTOM_START","rand","Codes at or above this point can be used by users to…",21,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",21,null],[11,"new","","Construct from any type supporting `std::error::Error`",21,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",21,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",21,[[],[["box",3],["error",8]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",21,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",21,[[],[["option",4],["nonzerou32",3]]]],[11,"gen","","Return a random value supporting the [`Standard`]…",20,[[]]],[11,"gen_range","","Generate a random value in the given range.",20,[[]]],[11,"sample","","Sample a new value, using the given distribution.",20,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",20,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [`Fill`] with random data",20,[[]]],[11,"try_fill","","Fill any type implementing [`Fill`] with random data",20,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",20,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",20,[[]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[4,"WeightedError"],[3,"Bernoulli"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"SampleRange"],[3,"Uniform"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Fill"],[8,"Rng"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_stream","","Set the stream number.",0,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_stream","","Set the stream number.",2,[[]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[["chacha20core",3]]]],[11,"from","","",1,[[["chacha12core",3]]]],[11,"from","","",2,[[["chacha8core",3]]]],[11,"clone","","",4,[[],["chacha20core",3]]],[11,"clone","","",0,[[],["chacha20rng",3]]],[11,"clone","","",3,[[],["chacha12core",3]]],[11,"clone","","",1,[[],["chacha12rng",3]]],[11,"clone","","",5,[[],["chacha8core",3]]],[11,"clone","","",2,[[],["chacha8rng",3]]],[11,"eq","","",4,[[["chacha20core",3]]]],[11,"ne","","",4,[[["chacha20core",3]]]],[11,"eq","","",0,[[["chacha20rng",3]]]],[11,"eq","","",3,[[["chacha12core",3]]]],[11,"ne","","",3,[[["chacha12core",3]]]],[11,"eq","","",1,[[["chacha12rng",3]]]],[11,"eq","","",5,[[["chacha8core",3]]]],[11,"ne","","",5,[[["chacha8core",3]]]],[11,"eq","","",2,[[["chacha8rng",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"generate","","",4,[[]]],[11,"generate","","",3,[[]]],[11,"generate","","",5,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",5,[[]]],[11,"from_seed","","",2,[[]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",0,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",2,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",2,null],[10,"generate","","Generate a new block of results.",2,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",0,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",0,[[]]],[11,"reset","","Reset the number of available results. This will force a…",0,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",0,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[18,"CUSTOM_START","rand_core","Codes at or above this point can be used by users to…",3,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",3,null],[11,"new","","Construct from any type supporting `std::error::Error`",3,[[]]],[11,"inner","","Reference the inner error (`std` only)",3,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",3,[[],[["box",3],["error",8]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",3,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",3,[[],[["nonzerou32",3],["option",4]]]],[0,"impls","","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["result",4],["error",3]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","rand_core::block","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["result",4],["error",3]]]],[11,"from_seed","rand_core::block","",0,[[]]],[11,"seed_from_u64","","",0,[[]]],[11,"from_rng","","",0,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",3,[[["nonzerou32",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"fmt","rand_core::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",0,[[],["blockrng",3]]],[11,"clone","","",1,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"read","","",4,[[],[["result",4],["error",3]]]]],"p":[[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[3,"Error"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]},\
"ryu":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]]],"p":[[3,"Buffer"]]},\
"secret_integers":{"doc":"This crate defines simple wrappers around Rust\'s integer…","i":[[3,"U8","secret_integers","",null,null],[12,"0","","",0,null],[3,"U16","","",null,null],[12,"0","","",1,null],[3,"U32","","",null,null],[12,"0","","",2,null],[3,"U64","","",null,null],[12,"0","","",3,null],[3,"U128","","",null,null],[12,"0","","",4,null],[3,"I8","","",null,null],[12,"0","","",5,null],[3,"I16","","",null,null],[12,"0","","",6,null],[3,"I32","","",null,null],[12,"0","","",7,null],[3,"I64","","",null,null],[12,"0","","",8,null],[3,"I128","","",null,null],[12,"0","","",9,null],[5,"U128_from_U8","","",null,[[["u8",3]],["u128",3]]],[5,"U8_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u8",3]]],[5,"U128_from_U16","","",null,[[["u16",3]],["u128",3]]],[5,"U16_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u16",3]]],[5,"U128_from_U32","","",null,[[["u32",3]],["u128",3]]],[5,"U32_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u32",3]]],[5,"U128_from_U64","","",null,[[["u64",3]],["u128",3]]],[5,"U64_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u64",3]]],[5,"U64_from_U8","","",null,[[["u8",3]],["u64",3]]],[5,"U8_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u8",3]]],[5,"U64_from_U16","","",null,[[["u16",3]],["u64",3]]],[5,"U16_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u16",3]]],[5,"U64_from_U32","","",null,[[["u32",3]],["u64",3]]],[5,"U32_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u32",3]]],[5,"U32_from_U8","","",null,[[["u8",3]],["u32",3]]],[5,"U8_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u8",3]]],[5,"U32_from_U16","","",null,[[["u16",3]],["u32",3]]],[5,"U16_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u16",3]]],[5,"U16_from_U8","","",null,[[["u8",3]],["u16",3]]],[5,"U8_from_U16","","Warning: wrapping semantics.",null,[[["u16",3]],["u8",3]]],[5,"declassify_u8_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u16_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u32_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u64_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u128_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_usize_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"U8_from_usize","","",null,[[],["u8",3]]],[5,"declassify_u16_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u64_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"u128_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u128_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U128","","Warning: conversion can be lossy!",null,[[["u128",3]]]],[5,"u8_from_U16","","",null,[[],["u16",3]]],[5,"u8_from_U32","","",null,[[],["u32",3]]],[5,"u16_from_U32","","",null,[[],["u32",3]]],[5,"u8_from_U64","","",null,[[],["u64",3]]],[5,"u16_from_U64","","",null,[[],["u64",3]]],[5,"u32_from_U64","","",null,[[],["u64",3]]],[5,"U64_from_usize","","",null,[[],["u64",3]]],[5,"u8_from_U128","","",null,[[],["u128",3]]],[5,"u16_from_U128","","",null,[[],["u128",3]]],[5,"u32_from_U128","","",null,[[],["u128",3]]],[5,"u64_from_U128","","",null,[[],["u128",3]]],[5,"U128_from_usize","","",null,[[],["u128",3]]],[5,"I128_from_I8","","",null,[[["i8",3]],["i128",3]]],[5,"I8_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i8",3]]],[5,"I128_from_I16","","",null,[[["i16",3]],["i128",3]]],[5,"I16_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i16",3]]],[5,"I128_from_I32","","",null,[[["i32",3]],["i128",3]]],[5,"I32_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i32",3]]],[5,"I128_from_I64","","",null,[[["i64",3]],["i128",3]]],[5,"I64_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i64",3]]],[5,"I64_from_I8","","",null,[[["i8",3]],["i64",3]]],[5,"I8_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i8",3]]],[5,"I64_from_I16","","",null,[[["i16",3]],["i64",3]]],[5,"I16_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i16",3]]],[5,"I64_from_I32","","",null,[[["i32",3]],["i64",3]]],[5,"I32_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i32",3]]],[5,"I32_from_I8","","",null,[[["i8",3]],["i32",3]]],[5,"I8_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i8",3]]],[5,"I32_from_I16","","",null,[[["i16",3]],["i32",3]]],[5,"I16_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i16",3]]],[5,"I16_from_I8","","",null,[[["i8",3]],["i16",3]]],[5,"I8_from_I16","","Warning: wrapping semantics.",null,[[["i16",3]],["i8",3]]],[11,"classify","","",0,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",0,[[]]],[11,"zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"ones","","",0,[[]]],[11,"from_le_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"to_be_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",0,[[],["u8",3]]],[11,"checked_add","","Warning: panics when overflow.",0,[[]]],[11,"checked_sub","","Warning: panics when overflow.",0,[[]]],[11,"checked_mul","","Warning: panics when overflow.",0,[[]]],[11,"rotate_left","","",0,[[]]],[11,"rotate_right","","",0,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",0,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"classify","","",1,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",1,[[]]],[11,"zero","","",1,[[]]],[11,"one","","",1,[[]]],[11,"ones","","",1,[[]]],[11,"from_le_bytes","","",1,[[],[["vec",3],["u16",3]]]],[11,"to_le_bytes","","",1,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",1,[[],[["vec",3],["u16",3]]]],[11,"to_be_bytes","","",1,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",1,[[],["u16",3]]],[11,"checked_add","","Warning: panics when overflow.",1,[[]]],[11,"checked_sub","","Warning: panics when overflow.",1,[[]]],[11,"checked_mul","","Warning: panics when overflow.",1,[[]]],[11,"rotate_left","","",1,[[]]],[11,"rotate_right","","",1,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",1,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"classify","","",2,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",2,[[]]],[11,"zero","","",2,[[]]],[11,"one","","",2,[[]]],[11,"ones","","",2,[[]]],[11,"from_le_bytes","","",2,[[],[["vec",3],["u32",3]]]],[11,"to_le_bytes","","",2,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",2,[[],[["vec",3],["u32",3]]]],[11,"to_be_bytes","","",2,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",2,[[],["u32",3]]],[11,"checked_add","","Warning: panics when overflow.",2,[[]]],[11,"checked_sub","","Warning: panics when overflow.",2,[[]]],[11,"checked_mul","","Warning: panics when overflow.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"classify","","",3,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",3,[[]]],[11,"zero","","",3,[[]]],[11,"one","","",3,[[]]],[11,"ones","","",3,[[]]],[11,"from_le_bytes","","",3,[[],[["u64",3],["vec",3]]]],[11,"to_le_bytes","","",3,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",3,[[],[["u64",3],["vec",3]]]],[11,"to_be_bytes","","",3,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",3,[[],["u64",3]]],[11,"checked_add","","Warning: panics when overflow.",3,[[]]],[11,"checked_sub","","Warning: panics when overflow.",3,[[]]],[11,"checked_mul","","Warning: panics when overflow.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"classify","","",4,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",4,[[]]],[11,"zero","","",4,[[]]],[11,"one","","",4,[[]]],[11,"ones","","",4,[[]]],[11,"from_le_bytes","","",4,[[],[["u128",3],["vec",3]]]],[11,"to_le_bytes","","",4,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",4,[[],[["u128",3],["vec",3]]]],[11,"to_be_bytes","","",4,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",4,[[],["u128",3]]],[11,"checked_add","","Warning: panics when overflow.",4,[[]]],[11,"checked_sub","","Warning: panics when overflow.",4,[[]]],[11,"checked_mul","","Warning: panics when overflow.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"classify","","",5,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",5,[[]]],[11,"zero","","",5,[[]]],[11,"one","","",5,[[]]],[11,"ones","","",5,[[]]],[11,"from_le_bytes","","",5,[[],[["i8",3],["vec",3]]]],[11,"to_le_bytes","","",5,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",5,[[],[["i8",3],["vec",3]]]],[11,"to_be_bytes","","",5,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",5,[[],["i8",3]]],[11,"checked_add","","Warning: panics when overflow.",5,[[]]],[11,"checked_sub","","Warning: panics when overflow.",5,[[]]],[11,"checked_mul","","Warning: panics when overflow.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"classify","","",6,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",6,[[]]],[11,"zero","","",6,[[]]],[11,"one","","",6,[[]]],[11,"ones","","",6,[[]]],[11,"from_le_bytes","","",6,[[],[["i16",3],["vec",3]]]],[11,"to_le_bytes","","",6,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",6,[[],[["i16",3],["vec",3]]]],[11,"to_be_bytes","","",6,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",6,[[],["i16",3]]],[11,"checked_add","","Warning: panics when overflow.",6,[[]]],[11,"checked_sub","","Warning: panics when overflow.",6,[[]]],[11,"checked_mul","","Warning: panics when overflow.",6,[[]]],[11,"rotate_left","","",6,[[]]],[11,"rotate_right","","",6,[[]]],[11,"comp_eq","","",6,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"classify","","",7,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",7,[[]]],[11,"zero","","",7,[[]]],[11,"one","","",7,[[]]],[11,"ones","","",7,[[]]],[11,"from_le_bytes","","",7,[[],[["i32",3],["vec",3]]]],[11,"to_le_bytes","","",7,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",7,[[],[["i32",3],["vec",3]]]],[11,"to_be_bytes","","",7,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",7,[[],["i32",3]]],[11,"checked_add","","Warning: panics when overflow.",7,[[]]],[11,"checked_sub","","Warning: panics when overflow.",7,[[]]],[11,"checked_mul","","Warning: panics when overflow.",7,[[]]],[11,"rotate_left","","",7,[[]]],[11,"rotate_right","","",7,[[]]],[11,"comp_eq","","",7,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"classify","","",8,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",8,[[]]],[11,"zero","","",8,[[]]],[11,"one","","",8,[[]]],[11,"ones","","",8,[[]]],[11,"from_le_bytes","","",8,[[],[["vec",3],["i64",3]]]],[11,"to_le_bytes","","",8,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",8,[[],[["vec",3],["i64",3]]]],[11,"to_be_bytes","","",8,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",8,[[],["i64",3]]],[11,"checked_add","","Warning: panics when overflow.",8,[[]]],[11,"checked_sub","","Warning: panics when overflow.",8,[[]]],[11,"checked_mul","","Warning: panics when overflow.",8,[[]]],[11,"rotate_left","","",8,[[]]],[11,"rotate_right","","",8,[[]]],[11,"comp_eq","","",8,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"classify","","",9,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",9,[[]]],[11,"zero","","",9,[[]]],[11,"one","","",9,[[]]],[11,"ones","","",9,[[]]],[11,"from_le_bytes","","",9,[[],[["vec",3],["i128",3]]]],[11,"to_le_bytes","","",9,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",9,[[],[["vec",3],["i128",3]]]],[11,"to_be_bytes","","",9,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",9,[[],["i128",3]]],[11,"checked_add","","Warning: panics when overflow.",9,[[]]],[11,"checked_sub","","Warning: panics when overflow.",9,[[]]],[11,"checked_mul","","Warning: panics when overflow.",9,[[]]],[11,"rotate_left","","",9,[[]]],[11,"rotate_right","","",9,[[]]],[11,"comp_eq","","",9,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",3,[[]]],[11,"from","","",4,[[]]],[11,"from","","",5,[[]]],[11,"from","","",6,[[]]],[11,"from","","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","","",4,[[["u8",3]],["u128",3]]],[11,"from","","",0,[[["u128",3]],["u8",3]]],[11,"from","","",4,[[["u16",3]],["u128",3]]],[11,"from","","",1,[[["u128",3]],["u16",3]]],[11,"from","","",4,[[["u32",3]],["u128",3]]],[11,"from","","",2,[[["u128",3]],["u32",3]]],[11,"from","","",4,[[["u64",3]],["u128",3]]],[11,"from","","",3,[[["u128",3]],["u64",3]]],[11,"from","","",3,[[["u8",3]],["u64",3]]],[11,"from","","",0,[[["u64",3]],["u8",3]]],[11,"from","","",3,[[["u16",3]],["u64",3]]],[11,"from","","",1,[[["u64",3]],["u16",3]]],[11,"from","","",3,[[["u32",3]],["u64",3]]],[11,"from","","",2,[[["u64",3]],["u32",3]]],[11,"from","","",2,[[["u8",3]],["u32",3]]],[11,"from","","",0,[[["u32",3]],["u8",3]]],[11,"from","","",2,[[["u16",3]],["u32",3]]],[11,"from","","",1,[[["u32",3]],["u16",3]]],[11,"from","","",1,[[["u8",3]],["u16",3]]],[11,"from","","",0,[[["u16",3]],["u8",3]]],[11,"from","","",0,[[],["u8",3]]],[11,"from","","",1,[[],["u16",3]]],[11,"from","","",2,[[],["u32",3]]],[11,"from","","",2,[[],["u32",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",9,[[["i8",3]],["i128",3]]],[11,"from","","",5,[[["i128",3]],["i8",3]]],[11,"from","","",9,[[["i16",3]],["i128",3]]],[11,"from","","",6,[[["i128",3]],["i16",3]]],[11,"from","","",9,[[["i32",3]],["i128",3]]],[11,"from","","",7,[[["i128",3]],["i32",3]]],[11,"from","","",9,[[["i64",3]],["i128",3]]],[11,"from","","",8,[[["i128",3]],["i64",3]]],[11,"from","","",8,[[["i8",3]],["i64",3]]],[11,"from","","",5,[[["i64",3]],["i8",3]]],[11,"from","","",8,[[["i16",3]],["i64",3]]],[11,"from","","",6,[[["i64",3]],["i16",3]]],[11,"from","","",8,[[["i32",3]],["i64",3]]],[11,"from","","",7,[[["i64",3]],["i32",3]]],[11,"from","","",7,[[["i8",3]],["i32",3]]],[11,"from","","",5,[[["i32",3]],["i8",3]]],[11,"from","","",7,[[["i16",3]],["i32",3]]],[11,"from","","",6,[[["i32",3]],["i16",3]]],[11,"from","","",6,[[["i8",3]],["i16",3]]],[11,"from","","",5,[[["i16",3]],["i8",3]]],[11,"from","","",9,[[["u128",3]],["i128",3]]],[11,"from","","",4,[[["i128",3]],["u128",3]]],[11,"from","","",8,[[["u64",3]],["i64",3]]],[11,"from","","",3,[[["i64",3]],["u64",3]]],[11,"from","","",7,[[["u32",3]],["i32",3]]],[11,"from","","",2,[[["i32",3]],["u32",3]]],[11,"from","","",6,[[["u16",3]],["i16",3]]],[11,"from","","",1,[[["i16",3]],["u16",3]]],[11,"from","","",5,[[["u8",3]],["i8",3]]],[11,"from","","",0,[[["i8",3]],["u8",3]]],[11,"clone","","",0,[[],["u8",3]]],[11,"clone","","",1,[[],["u16",3]]],[11,"clone","","",2,[[],["u32",3]]],[11,"clone","","",3,[[],["u64",3]]],[11,"clone","","",4,[[],["u128",3]]],[11,"clone","","",5,[[],["i8",3]]],[11,"clone","","",6,[[],["i16",3]]],[11,"clone","","",7,[[],["i32",3]]],[11,"clone","","",8,[[],["i64",3]]],[11,"clone","","",9,[[],["i128",3]]],[11,"default","","",0,[[],["u8",3]]],[11,"default","","",1,[[],["u16",3]]],[11,"default","","",2,[[],["u32",3]]],[11,"default","","",3,[[],["u64",3]]],[11,"default","","",4,[[],["u128",3]]],[11,"default","","",5,[[],["i8",3]]],[11,"default","","",6,[[],["i16",3]]],[11,"default","","",7,[[],["i32",3]]],[11,"default","","",8,[[],["i64",3]]],[11,"default","","",9,[[],["i128",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"sub","","",0,[[]]],[11,"sub","","",1,[[]]],[11,"sub","","",2,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",4,[[]]],[11,"sub","","",5,[[]]],[11,"sub","","",6,[[]]],[11,"sub","","",7,[[]]],[11,"sub","","",8,[[]]],[11,"sub","","",9,[[]]],[11,"add","","",0,[[]]],[11,"add","","",1,[[]]],[11,"add","","",2,[[]]],[11,"add","","",3,[[]]],[11,"add","","",4,[[]]],[11,"add","","",5,[[]]],[11,"add","","",6,[[]]],[11,"add","","",7,[[]]],[11,"add","","",8,[[]]],[11,"add","","",9,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",1,[[]]],[11,"mul","","",2,[[]]],[11,"mul","","",3,[[]]],[11,"mul","","",4,[[]]],[11,"mul","","",5,[[]]],[11,"mul","","",6,[[]]],[11,"mul","","",7,[[]]],[11,"mul","","",8,[[]]],[11,"mul","","",9,[[]]],[11,"neg","","",0,[[]]],[11,"neg","","",1,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","","",4,[[]]],[11,"neg","","",5,[[]]],[11,"neg","","",6,[[]]],[11,"neg","","",7,[[]]],[11,"neg","","",8,[[]]],[11,"neg","","",9,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",3,[[]]],[11,"add_assign","","",4,[[]]],[11,"add_assign","","",5,[[]]],[11,"add_assign","","",6,[[]]],[11,"add_assign","","",7,[[]]],[11,"add_assign","","",8,[[]]],[11,"add_assign","","",9,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",3,[[]]],[11,"sub_assign","","",4,[[]]],[11,"sub_assign","","",5,[[]]],[11,"sub_assign","","",6,[[]]],[11,"sub_assign","","",7,[[]]],[11,"sub_assign","","",8,[[]]],[11,"sub_assign","","",9,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",3,[[]]],[11,"mul_assign","","",4,[[]]],[11,"mul_assign","","",5,[[]]],[11,"mul_assign","","",6,[[]]],[11,"mul_assign","","",7,[[]]],[11,"mul_assign","","",8,[[]]],[11,"mul_assign","","",9,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"not","","",9,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[]]],[11,"bitand","","",9,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitor","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitor","","",9,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"bitxor","","",7,[[]]],[11,"bitxor","","",8,[[]]],[11,"bitxor","","",9,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shl","","",7,[[]]],[11,"shl","","",8,[[]]],[11,"shl","","",9,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"shr","","",7,[[]]],[11,"shr","","",8,[[]]],[11,"shr","","",9,[[]]],[11,"bitand_assign","","",0,[[]]],[11,"bitand_assign","","",1,[[]]],[11,"bitand_assign","","",2,[[]]],[11,"bitand_assign","","",3,[[]]],[11,"bitand_assign","","",4,[[]]],[11,"bitand_assign","","",5,[[]]],[11,"bitand_assign","","",6,[[]]],[11,"bitand_assign","","",7,[[]]],[11,"bitand_assign","","",8,[[]]],[11,"bitand_assign","","",9,[[]]],[11,"bitor_assign","","",0,[[]]],[11,"bitor_assign","","",1,[[]]],[11,"bitor_assign","","",2,[[]]],[11,"bitor_assign","","",3,[[]]],[11,"bitor_assign","","",4,[[]]],[11,"bitor_assign","","",5,[[]]],[11,"bitor_assign","","",6,[[]]],[11,"bitor_assign","","",7,[[]]],[11,"bitor_assign","","",8,[[]]],[11,"bitor_assign","","",9,[[]]],[11,"bitxor_assign","","",0,[[]]],[11,"bitxor_assign","","",1,[[]]],[11,"bitxor_assign","","",2,[[]]],[11,"bitxor_assign","","",3,[[]]],[11,"bitxor_assign","","",4,[[]]],[11,"bitxor_assign","","",5,[[]]],[11,"bitxor_assign","","",6,[[]]],[11,"bitxor_assign","","",7,[[]]],[11,"bitxor_assign","","",8,[[]]],[11,"bitxor_assign","","",9,[[]]],[11,"shl_assign","","",0,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",3,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",5,[[]]],[11,"shl_assign","","",6,[[]]],[11,"shl_assign","","",7,[[]]],[11,"shl_assign","","",8,[[]]],[11,"shl_assign","","",9,[[]]],[11,"shr_assign","","",0,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",3,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",5,[[]]],[11,"shr_assign","","",6,[[]]],[11,"shr_assign","","",7,[[]]],[11,"shr_assign","","",8,[[]]],[11,"shr_assign","","",9,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]]],"p":[[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"]]},\
"serde":{"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BytesDeserializer","","A deserializer holding a `&[u8]`. Always calls…",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[],["borrowedstrdeserializer",3]]],[11,"new","","Create a new deserializer from the given bytes.",2,[[]]],[11,"new","","Create a new borrowed deserializer from the given borrowed…",3,[[]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",4,[[]]],[11,"end","","Check for remaining elements after passing a…",4,[[],["result",4]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",5,[[]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",6,[[]]],[11,"end","","Check for remaining elements after passing a…",6,[[],["result",4]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",7,[[]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",8,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",8,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",8,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",8,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",8,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",8,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",8,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",8,[[]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",11,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",12,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",12,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",12,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",12,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",12,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",12,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",12,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",13,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",13,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",13,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",13,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",13,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",13,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",13,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",13,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",13,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",13,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",13,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",13,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",13,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",13,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",13,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",13,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",14,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",14,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",15,[[],[["option",4],["result",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",15,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",15,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",15,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",15,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",16,null],[10,"variant_seed","","`variant` is called to identify which variant to…",16,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",16,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",19,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",21,null],[16,"Error","","The error type when some error occurs during serialization.",21,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",21,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",21,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",21,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",21,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",21,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",21,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",21,null],[10,"serialize_bool","","Serialize a `bool` value.",21,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",21,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",21,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",21,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",21,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",21,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",21,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",21,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",21,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",21,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",21,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",21,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",21,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",21,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a [`None`] value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",21,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",21,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",21,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",21,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",21,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",21,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",21,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",21,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",21,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",21,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",21,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",21,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",28,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",12,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",12,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",12,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",12,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",12,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",12,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",12,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",21,null],[16,"Error","","The error type when some error occurs during serialization.",21,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",21,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",21,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",21,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",21,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",21,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",21,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",21,null],[10,"serialize_bool","","Serialize a `bool` value.",21,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",21,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",21,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",21,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",21,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",21,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",21,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",21,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",21,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",21,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",21,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",21,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",21,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",21,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a [`None`] value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",21,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",21,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",21,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",21,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",21,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",21,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",21,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",21,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",21,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",21,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",21,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",21,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde::de::value","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",29,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",50,[[],["result",4]]],[11,"deserialize_enum","","",50,[[],["result",4]]],[11,"deserialize_bool","","",50,[[],["result",4]]],[11,"deserialize_i8","","",50,[[],["result",4]]],[11,"deserialize_i16","","",50,[[],["result",4]]],[11,"deserialize_i32","","",50,[[],["result",4]]],[11,"deserialize_i64","","",50,[[],["result",4]]],[11,"deserialize_i128","","",50,[[],["result",4]]],[11,"deserialize_u8","","",50,[[],["result",4]]],[11,"deserialize_u16","","",50,[[],["result",4]]],[11,"deserialize_u32","","",50,[[],["result",4]]],[11,"deserialize_u64","","",50,[[],["result",4]]],[11,"deserialize_u128","","",50,[[],["result",4]]],[11,"deserialize_f32","","",50,[[],["result",4]]],[11,"deserialize_f64","","",50,[[],["result",4]]],[11,"deserialize_char","","",50,[[],["result",4]]],[11,"deserialize_str","","",50,[[],["result",4]]],[11,"deserialize_string","","",50,[[],["result",4]]],[11,"deserialize_bytes","","",50,[[],["result",4]]],[11,"deserialize_byte_buf","","",50,[[],["result",4]]],[11,"deserialize_option","","",50,[[],["result",4]]],[11,"deserialize_unit","","",50,[[],["result",4]]],[11,"deserialize_unit_struct","","",50,[[],["result",4]]],[11,"deserialize_newtype_struct","","",50,[[],["result",4]]],[11,"deserialize_seq","","",50,[[],["result",4]]],[11,"deserialize_tuple","","",50,[[],["result",4]]],[11,"deserialize_tuple_struct","","",50,[[],["result",4]]],[11,"deserialize_map","","",50,[[],["result",4]]],[11,"deserialize_struct","","",50,[[],["result",4]]],[11,"deserialize_identifier","","",50,[[],["result",4]]],[11,"deserialize_ignored_any","","",50,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"deserialize_any","","",7,[[],["result",4]]],[11,"deserialize_enum","","",7,[[],["result",4]]],[11,"deserialize_bool","","",7,[[],["result",4]]],[11,"deserialize_i8","","",7,[[],["result",4]]],[11,"deserialize_i16","","",7,[[],["result",4]]],[11,"deserialize_i32","","",7,[[],["result",4]]],[11,"deserialize_i64","","",7,[[],["result",4]]],[11,"deserialize_i128","","",7,[[],["result",4]]],[11,"deserialize_u8","","",7,[[],["result",4]]],[11,"deserialize_u16","","",7,[[],["result",4]]],[11,"deserialize_u32","","",7,[[],["result",4]]],[11,"deserialize_u64","","",7,[[],["result",4]]],[11,"deserialize_u128","","",7,[[],["result",4]]],[11,"deserialize_f32","","",7,[[],["result",4]]],[11,"deserialize_f64","","",7,[[],["result",4]]],[11,"deserialize_char","","",7,[[],["result",4]]],[11,"deserialize_str","","",7,[[],["result",4]]],[11,"deserialize_string","","",7,[[],["result",4]]],[11,"deserialize_bytes","","",7,[[],["result",4]]],[11,"deserialize_byte_buf","","",7,[[],["result",4]]],[11,"deserialize_option","","",7,[[],["result",4]]],[11,"deserialize_unit","","",7,[[],["result",4]]],[11,"deserialize_unit_struct","","",7,[[],["result",4]]],[11,"deserialize_newtype_struct","","",7,[[],["result",4]]],[11,"deserialize_seq","","",7,[[],["result",4]]],[11,"deserialize_tuple","","",7,[[],["result",4]]],[11,"deserialize_tuple_struct","","",7,[[],["result",4]]],[11,"deserialize_map","","",7,[[],["result",4]]],[11,"deserialize_struct","","",7,[[],["result",4]]],[11,"deserialize_identifier","","",7,[[],["result",4]]],[11,"deserialize_ignored_any","","",7,[[],["result",4]]],[11,"expecting","serde::de","",29,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",29,[[],["result",4]]],[11,"visit_i64","","",29,[[],["result",4]]],[11,"visit_i128","","",29,[[],["result",4]]],[11,"visit_u64","","",29,[[],["result",4]]],[11,"visit_u128","","",29,[[],["result",4]]],[11,"visit_f64","","",29,[[],["result",4]]],[11,"visit_str","","",29,[[],["result",4]]],[11,"visit_none","","",29,[[],["result",4]]],[11,"visit_some","","",29,[[],["result",4]]],[11,"visit_newtype_struct","","",29,[[],["result",4]]],[11,"visit_unit","","",29,[[],["result",4]]],[11,"visit_seq","","",29,[[],["result",4]]],[11,"visit_map","","",29,[[],["result",4]]],[11,"visit_bytes","","",29,[[],["result",4]]],[11,"visit_enum","","",29,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"next_element_seed","","",6,[[],[["result",4],["option",4]]]],[11,"size_hint","","",6,[[],["option",4]]],[11,"next_key_seed","","",6,[[],[["option",4],["result",4]]]],[11,"next_value_seed","","",6,[[],["result",4]]],[11,"next_entry_seed","","",6,[[],[["result",4],["option",4]]]],[11,"size_hint","","",6,[[],["option",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",1,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",50,[[],["result",4]]],[11,"variant_seed","","",7,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",30,[[]]],[11,"custom","","",30,[[]]],[11,"clone","","",30,[[],["error",3]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[],["seqdeserializer",3]]],[11,"clone","","",5,[[],["seqaccessdeserializer",3]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",29,[[],["ignoredany",3]]],[11,"clone","","",0,[[],["unexpected",4]]],[11,"default","","",29,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",30,[[["error",3]]]],[11,"ne","","",30,[[["error",3]]]],[11,"eq","serde::de","",0,[[["unexpected",4]]]],[11,"ne","","",0,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",30,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",30,[[]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["error",3],["result",4],["value",4]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer",3]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[]]],[11,"column","","One-based column number at which the error was detected.",4,[[]]],[11,"classify","","Categorizes the cause of this error.",4,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[]]],[11,"clear","","Clears the map, removing all values.",6,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[],[["value",4],["option",4]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[],[["option",4],["value",4]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["value",4],["string",3]],[["option",4],["value",4]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[],[["option",4],["value",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",6,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",6,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",6,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",6,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[],["valuesmut",3]]],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[],["value",4]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",5,[[]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",7,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",8,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",8,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`\'s…",8,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value",4]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\\\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[],["result",6]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[],["result",6]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping to…",10,[[],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[],["result",6]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[],["result",6]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[],["result",6]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping…",10,[[],["result",6]]],[11,"new","","Creates a new JSON serializer.",11,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["error",3],["result",4],["value",4]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["index",8]],[["value",4],["option",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["index",8]],[["option",4],["value",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[],[["map",3],["option",4]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[],[["option",4],["vec",3]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[],[["value",4],["option",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[],[["option",4],["value",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[],["value",4]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[],["option",4]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[],["option",4]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[],["option",4]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[],[["option",4],["number",3]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::ser","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::map","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde_json","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json::value","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json::map","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","serde_json::ser","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",12,[[],["result",6]]],[11,"end_array","","",12,[[],["result",6]]],[11,"begin_array_value","","",12,[[],["result",6]]],[11,"end_array_value","","",12,[[],["result",6]]],[11,"begin_object","","",12,[[],["result",6]]],[11,"end_object","","",12,[[],["result",6]]],[11,"begin_object_key","","",12,[[],["result",6]]],[11,"begin_object_value","","",12,[[],["result",6]]],[11,"end_object_value","","",12,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[]]],[11,"parse_str","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],["result",6]]],[11,"set_failed","","",14,[[]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[]]],[11,"parse_str","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],["result",6]]],[11,"set_failed","","",15,[[]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[]]],[11,"parse_str","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],["result",6]]],[11,"set_failed","","",16,[[]]],[11,"from","serde_json::value","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert boolean to `Value`",0,[[]]],[11,"from","","Convert `String` to `Value`",0,[[["string",3]]]],[11,"from","","Convert string slice to `Value`",0,[[]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",4]]]],[11,"from","","Convert `Number` to `Value`",0,[[["number",3]]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["value",4],["map",3],["string",3]]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec",3]]]],[11,"from","","Convert a slice to `Value`",0,[[]]],[11,"from","","Convert `()` to `Value`",0,[[]]],[11,"from","serde_json","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[]]],[11,"len","","",18,[[]]],[11,"len","","",19,[[]]],[11,"len","","",20,[[]]],[11,"len","","",21,[[]]],[11,"len","","",22,[[]]],[11,"extend","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json::map","",6,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",12,[[],["prettyformatter",3]]],[11,"clone","serde_json::value","",0,[[],["value",4]]],[11,"clone","serde_json","",13,[[],["number",3]]],[11,"default","serde_json::map","",6,[[]]],[11,"default","serde_json::ser","",12,[[]]],[11,"default","serde_json::value","",0,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]]]],[11,"eq","serde_json::map","",6,[[]]],[11,"eq","serde_json::value","",0,[[["value",4]]]],[11,"ne","","",0,[[["value",4]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["string",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","serde_json","",13,[[["number",3]]]],[11,"ne","","",13,[[["number",3]]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::map","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json::map","",6,[[],["value",4]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"index_mut","serde_json::map","",6,[[],["value",4]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"from_iter","serde_json::map","",6,[[]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"from_iter","","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"from_str","serde_json","",13,[[],["result",4]]],[11,"from_str","serde_json::value","",0,[[],[["error",3],["result",4],["value",4]]]],[11,"source","serde_json::error","",4,[[],[["error",8],["option",4]]]],[11,"deserialize_any","serde_json::value","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_option","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_enum","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_newtype_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_char","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_str","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_string","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_byte_buf","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_unit","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_unit_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_seq","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_map","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_identifier","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_ignored_any","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_any","serde_json","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[],["result",4]]],[11,"deserialize_enum","","",13,[[],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"serialize","serde_json::map","",6,[[],["result",4]]],[11,"serialize","serde_json::value","",0,[[],["result",4]]],[11,"serialize","serde_json","",13,[[],["result",4]]],[11,"serialize_bool","serde_json::value","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_char","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_str","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_bytes","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_none","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_some","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_seq","","",24,[[["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[],["result",6]]],[11,"serialize_tuple_struct","","",24,[[],["result",6]]],[11,"serialize_tuple_variant","","",24,[[],["result",6]]],[11,"serialize_map","","",24,[[["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[],["result",6]]],[11,"serialize_struct_variant","","",24,[[],["result",6]]],[11,"collect_str","","",24,[[],[["value",4],["result",6]]]],[11,"deserialize","serde_json::map","",6,[[],["result",4]]],[11,"deserialize","serde_json::value","",0,[[],[["result",4],["value",4]]]],[11,"deserialize","serde_json","",13,[[],[["result",4],["number",3]]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"invalid_type","","",4,[[["unexpected",4],["expected",8]]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"syn":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",61,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",168,null],[13,"Byte","","A byte literal: `b\'f\'`.",168,null],[13,"Char","","A character literal: `\'a\'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",169,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["result",6],["file",3]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream",3]]]],[11,"surround","","",280,[[["tokenstream",3]]]],[11,"surround","","",281,[[["tokenstream",3]]]],[11,"surround","","",282,[[["tokenstream",3]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",152,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",156,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",56,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",283,[[],["turbofish",3]]],[11,"new","","",57,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",89,[[],[["fnarg",4],["option",4]]]],[11,"lifetime","","",88,[[],[["lifetime",3],["option",4]]]],[11,"new","","Panics",100,[[["span",3]]]],[11,"span","","",100,[[],["span",3]]],[11,"set_span","","",100,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal",3]]]],[11,"suffix","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"set_span","","",168,[[["span",3]]]],[11,"new","","",284,[[["span",3]]]],[11,"value","","",284,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser",8]],["result",6]]],[11,"span","","",284,[[],["span",3]]],[11,"set_span","","",284,[[["span",3]]]],[11,"suffix","","",284,[[]]],[11,"new","","",285,[[["span",3]]]],[11,"value","","",285,[[],["vec",3]]],[11,"span","","",285,[[],["span",3]]],[11,"set_span","","",285,[[["span",3]]]],[11,"suffix","","",285,[[]]],[11,"new","","",286,[[["span",3]]]],[11,"value","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"set_span","","",286,[[["span",3]]]],[11,"suffix","","",286,[[]]],[11,"new","","",287,[[["span",3]]]],[11,"value","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"set_span","","",287,[[["span",3]]]],[11,"suffix","","",287,[[]]],[11,"new","","",288,[[["span",3]]]],[11,"base10_digits","","",288,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[],["result",6]]],[11,"suffix","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"set_span","","",288,[[["span",3]]]],[11,"new","","",289,[[["span",3]]]],[11,"base10_digits","","",289,[[]]],[11,"base10_parse","","",289,[[],["result",6]]],[11,"suffix","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"set_span","","",289,[[["span",3]]]],[11,"new","","",101,[[["span",3]]]],[11,"value","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"set_span","","",101,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",102,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",102,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",175,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",123,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",179,[[]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[],["cursor",3]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[]]],[11,"first","","Borrows the first element in this sequence.",294,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",294,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[],[["pair",4],["option",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"insert","","Inserts an element at position `index`.",294,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",294,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream",6]],["result",6]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[],["result",6]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[],["cursor",3]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",302,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["totokens",8],["display",8]]]],[11,"span","","The source location of the error.",302,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",302,[[["error",3]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"to_string","","",303,[[],["string",3]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"span","","",99,[[],["span",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"span","","",100,[[],["span",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"to_string","","",288,[[],["string",3]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",102,[[],["span",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"span","","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"span","","",108,[[],["span",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"span","","",109,[[],["span",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"span","","",110,[[],["span",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"span","","",111,[[],["span",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"span","","",112,[[],["span",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"span","","",113,[[],["span",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"span","","",114,[[],["span",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"span","","",115,[[],["span",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"span","","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"into_iter","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"to_string","","",302,[[],["string",3]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"span","","",241,[[],["span",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"span","","",242,[[],["span",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"span","","",243,[[],["span",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"span","","",244,[[],["span",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","syn::buffer","",290,[[]]],[11,"into","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","syn::punctuated","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"into_iter","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_string","","",301,[[],["string",3]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"cmp","syn","",303,[[["ident",3]],["ordering",4]]],[11,"hash","","",303,[[]]],[11,"eq","","",303,[[["ident",3]]]],[11,"eq","","",303,[[]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",303,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",303,[[],["ident",3]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"span","","",303,[[],[["option",4],["span",3]]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"peek","syn","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"parse_any","","",303,[[["parsestream",6]],["result",6]]],[11,"unraw","","",303,[[],["ident",3]]],[11,"advance_to","syn::parse","",301,[[]]],[11,"parse","syn::token","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",185,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",229,[[["parsestream",6]],["result",6]]],[11,"parse","","",230,[[["parsestream",6]],["result",6]]],[11,"parse","","",231,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",241,[[["parsestream",6]],["result",6]]],[11,"parse","","",242,[[["parsestream",6]],["result",6]]],[11,"parse","","",243,[[["parsestream",6]],["result",6]]],[11,"parse","","",244,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",270,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",273,[[["parsestream",6]],["result",6]]],[11,"parse","","",274,[[["parsestream",6]],["result",6]]],[11,"parse","","",275,[[["parsestream",6]],["result",6]]],[11,"parse","","",276,[[["parsestream",6]],["result",6]]],[11,"parse","","",277,[[["parsestream",6]],["result",6]]],[11,"parse","","",278,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],[["usetree",4],["result",6]]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",99,[[["parsestream",6]],["result",6]]],[11,"parse","","",100,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",284,[[["parsestream",6]],["result",6]]],[11,"parse","","",285,[[["parsestream",6]],["result",6]]],[11,"parse","","",286,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",101,[[["parsestream",6]],["result",6]]],[11,"parse","","",102,[[["parsestream",6]],["result",6]]],[11,"parse","","",106,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",107,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",111,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",112,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",115,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",116,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",114,[[["parsestream",6]],["result",6]]],[11,"parse","","",113,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",110,[[["parsestream",6]],["result",6]]],[11,"parse","","",109,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",301,[[]]],[11,"from","syn","",303,[[["selfvalue",3]],["ident",3]]],[11,"from","","",303,[[["selftype",3]],["ident",3]]],[11,"from","","",303,[[["super",3]],["ident",3]]],[11,"from","","",303,[[["crate",3]],["ident",3]]],[11,"from","","",303,[[["extern",3]],["ident",3]]],[11,"from","","",303,[[["underscore",3]],["ident",3]]],[11,"from","","",150,[[["path",3]],["meta",4]]],[11,"from","","",150,[[["metalist",3]],["meta",4]]],[11,"from","","",150,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",151,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",151,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",152,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",152,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",153,[[["vispublic",3]],["visibility",4]]],[11,"from","","",153,[[["viscrate",3]],["visibility",4]]],[11,"from","","",153,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",156,[[["exprarray",3]],["expr",4]]],[11,"from","","",156,[[["exprassign",3]],["expr",4]]],[11,"from","","",156,[[["exprassignop",3]],["expr",4]]],[11,"from","","",156,[[["exprasync",3]],["expr",4]]],[11,"from","","",156,[[["exprawait",3]],["expr",4]]],[11,"from","","",156,[[["exprbinary",3]],["expr",4]]],[11,"from","","",156,[[["exprblock",3]],["expr",4]]],[11,"from","","",156,[[["exprbox",3]],["expr",4]]],[11,"from","","",156,[[["exprbreak",3]],["expr",4]]],[11,"from","","",156,[[["exprcall",3]],["expr",4]]],[11,"from","","",156,[[["exprcast",3]],["expr",4]]],[11,"from","","",156,[[["exprclosure",3]],["expr",4]]],[11,"from","","",156,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",156,[[["exprfield",3]],["expr",4]]],[11,"from","","",156,[[["exprforloop",3]],["expr",4]]],[11,"from","","",156,[[["exprgroup",3]],["expr",4]]],[11,"from","","",156,[[["exprif",3]],["expr",4]]],[11,"from","","",156,[[["exprindex",3]],["expr",4]]],[11,"from","","",156,[[["exprlet",3]],["expr",4]]],[11,"from","","",156,[[["exprlit",3]],["expr",4]]],[11,"from","","",156,[[["exprloop",3]],["expr",4]]],[11,"from","","",156,[[["exprmacro",3]],["expr",4]]],[11,"from","","",156,[[["exprmatch",3]],["expr",4]]],[11,"from","","",156,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",156,[[["exprparen",3]],["expr",4]]],[11,"from","","",156,[[["exprpath",3]],["expr",4]]],[11,"from","","",156,[[["exprrange",3]],["expr",4]]],[11,"from","","",156,[[["exprreference",3]],["expr",4]]],[11,"from","","",156,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",156,[[["exprreturn",3]],["expr",4]]],[11,"from","","",156,[[["exprstruct",3]],["expr",4]]],[11,"from","","",156,[[["exprtry",3]],["expr",4]]],[11,"from","","",156,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",156,[[["exprtuple",3]],["expr",4]]],[11,"from","","",156,[[["exprtype",3]],["expr",4]]],[11,"from","","",156,[[["exprunary",3]],["expr",4]]],[11,"from","","",156,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",156,[[["exprwhile",3]],["expr",4]]],[11,"from","","",156,[[["expryield",3]],["expr",4]]],[11,"from","","",53,[[],["index",3]]],[11,"from","","",158,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",158,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",158,[[["constparam",3]],["genericparam",4]]],[11,"from","","",62,[[["ident",3]]]],[11,"from","","",160,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",160,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",161,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",165,[[["itemconst",3]],["item",4]]],[11,"from","","",165,[[["itemenum",3]],["item",4]]],[11,"from","","",165,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",165,[[["itemfn",3]],["item",4]]],[11,"from","","",165,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",165,[[["itemimpl",3]],["item",4]]],[11,"from","","",165,[[["itemmacro",3]],["item",4]]],[11,"from","","",165,[[["itemmacro2",3]],["item",4]]],[11,"from","","",165,[[["itemmod",3]],["item",4]]],[11,"from","","",165,[[["itemstatic",3]],["item",4]]],[11,"from","","",165,[[["itemstruct",3]],["item",4]]],[11,"from","","",165,[[["itemtrait",3]],["item",4]]],[11,"from","","",165,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",165,[[["itemtype",3]],["item",4]]],[11,"from","","",165,[[["itemunion",3]],["item",4]]],[11,"from","","",165,[[["itemuse",3]],["item",4]]],[11,"from","","",165,[[["deriveinput",3]],["item",4]]],[11,"from","","",106,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",167,[[["usepath",3]],["usetree",4]]],[11,"from","","",167,[[["usename",3]],["usetree",4]]],[11,"from","","",167,[[["userename",3]],["usetree",4]]],[11,"from","","",167,[[["useglob",3]],["usetree",4]]],[11,"from","","",167,[[["usegroup",3]],["usetree",4]]],[11,"from","","",163,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",166,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",166,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",164,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",164,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",162,[[["receiver",3]],["fnarg",4]]],[11,"from","","",162,[[["pattype",3]],["fnarg",4]]],[11,"from","","",168,[[["litstr",3]],["lit",4]]],[11,"from","","",168,[[["litbytestr",3]],["lit",4]]],[11,"from","","",168,[[["litbyte",3]],["lit",4]]],[11,"from","","",168,[[["litchar",3]],["lit",4]]],[11,"from","","",168,[[["litint",3]],["lit",4]]],[11,"from","","",168,[[["litfloat",3]],["lit",4]]],[11,"from","","",168,[[["litbool",3]],["lit",4]]],[11,"from","","",288,[[["literal",3]]]],[11,"from","","",289,[[["literal",3]]]],[11,"from","","",171,[[["datastruct",3]],["data",4]]],[11,"from","","",171,[[["dataenum",3]],["data",4]]],[11,"from","","",171,[[["dataunion",3]],["data",4]]],[11,"from","","",176,[[["typearray",3]],["type",4]]],[11,"from","","",176,[[["typebarefn",3]],["type",4]]],[11,"from","","",176,[[["typegroup",3]],["type",4]]],[11,"from","","",176,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",176,[[["typeinfer",3]],["type",4]]],[11,"from","","",176,[[["typemacro",3]],["type",4]]],[11,"from","","",176,[[["typenever",3]],["type",4]]],[11,"from","","",176,[[["typeparen",3]],["type",4]]],[11,"from","","",176,[[["typepath",3]],["type",4]]],[11,"from","","",176,[[["typeptr",3]],["type",4]]],[11,"from","","",176,[[["typereference",3]],["type",4]]],[11,"from","","",176,[[["typeslice",3]],["type",4]]],[11,"from","","",176,[[["typetraitobject",3]],["type",4]]],[11,"from","","",176,[[["typetuple",3]],["type",4]]],[11,"from","","",177,[[["patbox",3]],["pat",4]]],[11,"from","","",177,[[["patident",3]],["pat",4]]],[11,"from","","",177,[[["patlit",3]],["pat",4]]],[11,"from","","",177,[[["patmacro",3]],["pat",4]]],[11,"from","","",177,[[["pator",3]],["pat",4]]],[11,"from","","",177,[[["patpath",3]],["pat",4]]],[11,"from","","",177,[[["patrange",3]],["pat",4]]],[11,"from","","",177,[[["patreference",3]],["pat",4]]],[11,"from","","",177,[[["patrest",3]],["pat",4]]],[11,"from","","",177,[[["patslice",3]],["pat",4]]],[11,"from","","",177,[[["patstruct",3]],["pat",4]]],[11,"from","","",177,[[["pattuple",3]],["pat",4]]],[11,"from","","",177,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",177,[[["pattype",3]],["pat",4]]],[11,"from","","",177,[[["patwild",3]],["pat",4]]],[11,"from","","",146,[[]]],[11,"from","","",147,[[]]],[11,"from","","",302,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","syn","",302,[[["intoiterator",8]]]],[11,"into_iter","","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","syn","",304,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",289,[[]]],[11,"clone","syn::buffer","",291,[[]]],[11,"clone","syn::punctuated","",294,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",293,[[]]],[11,"clone","syn","",109,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",110,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",107,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",106,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",108,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",111,[[]]],[11,"clone","","",112,[[]]],[11,"clone","","",113,[[]]],[11,"clone","","",114,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",161,[[]]],[11,"clone","syn::parse","",300,[[]]],[11,"clone","syn","",302,[[]]],[11,"default","syn::token","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","","",182,[[]]],[11,"default","","",183,[[]]],[11,"default","","",184,[[]]],[11,"default","","",185,[[]]],[11,"default","","",186,[[]]],[11,"default","","",187,[[]]],[11,"default","","",188,[[]]],[11,"default","","",189,[[]]],[11,"default","","",190,[[]]],[11,"default","","",191,[[]]],[11,"default","","",192,[[]]],[11,"default","","",193,[[]]],[11,"default","","",194,[[]]],[11,"default","","",195,[[]]],[11,"default","","",196,[[]]],[11,"default","","",197,[[]]],[11,"default","","",198,[[]]],[11,"default","","",199,[[]]],[11,"default","","",200,[[]]],[11,"default","","",201,[[]]],[11,"default","","",202,[[]]],[11,"default","","",203,[[]]],[11,"default","","",204,[[]]],[11,"default","","",205,[[]]],[11,"default","","",206,[[]]],[11,"default","","",207,[[]]],[11,"default","","",208,[[]]],[11,"default","","",209,[[]]],[11,"default","","",210,[[]]],[11,"default","","",211,[[]]],[11,"default","","",212,[[]]],[11,"default","","",213,[[]]],[11,"default","","",214,[[]]],[11,"default","","",215,[[]]],[11,"default","","",216,[[]]],[11,"default","","",217,[[]]],[11,"default","","",218,[[]]],[11,"default","","",219,[[]]],[11,"default","","",220,[[]]],[11,"default","","",221,[[]]],[11,"default","","",222,[[]]],[11,"default","","",223,[[]]],[11,"default","","",224,[[]]],[11,"default","","",225,[[]]],[11,"default","","",226,[[]]],[11,"default","","",227,[[]]],[11,"default","","",228,[[]]],[11,"default","","",229,[[]]],[11,"default","","",230,[[]]],[11,"default","","",231,[[]]],[11,"default","","",232,[[]]],[11,"default","","",233,[[]]],[11,"default","","",234,[[]]],[11,"default","","",235,[[]]],[11,"default","","",236,[[]]],[11,"default","","",237,[[]]],[11,"default","","",238,[[]]],[11,"default","","",239,[[]]],[11,"default","","",240,[[]]],[11,"default","","",241,[[]]],[11,"default","","",242,[[]]],[11,"default","","",243,[[]]],[11,"default","","",244,[[]]],[11,"default","","",245,[[]]],[11,"default","","",246,[[]]],[11,"default","","",247,[[]]],[11,"default","","",248,[[]]],[11,"default","","",249,[[]]],[11,"default","","",250,[[]]],[11,"default","","",251,[[]]],[11,"default","","",252,[[]]],[11,"default","","",253,[[]]],[11,"default","","",254,[[]]],[11,"default","","",255,[[]]],[11,"default","","",256,[[]]],[11,"default","","",257,[[]]],[11,"default","","",258,[[]]],[11,"default","","",259,[[]]],[11,"default","","",260,[[]]],[11,"default","","",261,[[]]],[11,"default","","",262,[[]]],[11,"default","","",263,[[]]],[11,"default","","",264,[[]]],[11,"default","","",265,[[]]],[11,"default","","",266,[[]]],[11,"default","","",267,[[]]],[11,"default","","",268,[[]]],[11,"default","","",269,[[]]],[11,"default","","",270,[[]]],[11,"default","","",271,[[]]],[11,"default","","",272,[[]]],[11,"default","","",273,[[]]],[11,"default","","",274,[[]]],[11,"default","","",275,[[]]],[11,"default","","",276,[[]]],[11,"default","","",277,[[]]],[11,"default","","",278,[[]]],[11,"default","","",279,[[]]],[11,"default","","",280,[[]]],[11,"default","","",281,[[]]],[11,"default","","",282,[[]]],[11,"default","syn","",56,[[]]],[11,"default","","",54,[[]]],[11,"default","","",179,[[]]],[11,"default","syn::punctuated","",294,[[]]],[11,"cmp","syn","",100,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",157,[[]]],[11,"eq","","",53,[[]]],[11,"eq","","",100,[[["lifetime",3]]]],[11,"eq","syn::buffer","",291,[[]]],[11,"partial_cmp","syn","",100,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",180,[[]]],[11,"deref","","",233,[[]]],[11,"deref","","",235,[[]]],[11,"deref","","",238,[[]]],[11,"deref","","",239,[[]]],[11,"deref","","",240,[[]]],[11,"deref","","",242,[[]]],[11,"deref","","",244,[[]]],[11,"deref","","",245,[[]]],[11,"deref","","",247,[[]]],[11,"deref","","",248,[[]]],[11,"deref","","",252,[[]]],[11,"deref","","",255,[[]]],[11,"deref","","",257,[[]]],[11,"deref","","",260,[[]]],[11,"deref","","",263,[[]]],[11,"deref","","",264,[[]]],[11,"deref","","",267,[[]]],[11,"deref","","",270,[[]]],[11,"deref","","",275,[[]]],[11,"deref","","",276,[[]]],[11,"deref","","",278,[[]]],[11,"deref","syn::parse","",300,[[]]],[11,"deref_mut","syn::token","",180,[[]]],[11,"deref_mut","","",233,[[]]],[11,"deref_mut","","",235,[[]]],[11,"deref_mut","","",238,[[]]],[11,"deref_mut","","",239,[[]]],[11,"deref_mut","","",240,[[]]],[11,"deref_mut","","",242,[[]]],[11,"deref_mut","","",244,[[]]],[11,"deref_mut","","",245,[[]]],[11,"deref_mut","","",247,[[]]],[11,"deref_mut","","",248,[[]]],[11,"deref_mut","","",252,[[]]],[11,"deref_mut","","",255,[[]]],[11,"deref_mut","","",257,[[]]],[11,"deref_mut","","",260,[[]]],[11,"deref_mut","","",263,[[]]],[11,"deref_mut","","",264,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",270,[[]]],[11,"deref_mut","","",275,[[]]],[11,"deref_mut","","",276,[[]]],[11,"deref_mut","","",278,[[]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",294,[[]]],[11,"index_mut","","",294,[[]]],[11,"hash","syn","",157,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",100,[[]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator",8]]]],[11,"from_iter","","",294,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",241,[[["tokenstream",3]]]],[11,"to_tokens","","",242,[[["tokenstream",3]]]],[11,"to_tokens","","",243,[[["tokenstream",3]]]],[11,"to_tokens","","",244,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","syn","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",99,[[["tokenstream",3]]]],[11,"to_tokens","","",100,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",101,[[["tokenstream",3]]]],[11,"to_tokens","","",102,[[["tokenstream",3]]]],[11,"to_tokens","","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",108,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",111,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",112,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",114,[[["tokenstream",3]]]],[11,"to_tokens","","",113,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",115,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",110,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",109,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"fmt","syn","",157,[[["formatter",3]],["result",6]]],[11,"span","","",157,[[],[["option",4],["span",3]]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"span","","",53,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",303,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["span",3]]]],[11,"visit_abi","syn::visit","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error",3]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"typenum":{"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"bit","","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0",3]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1",3]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint",3]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint",3]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0",3]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Zero","","A marker trait to designate that a type is zero. Only…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering",4]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"new","","Instantiates a singleton representing this bit.",6,[[]]],[10,"to_u8","","",6,[[]]],[10,"to_bool","","",6,[[]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[]]],[10,"to_u16","","",7,[[]]],[10,"to_u32","","",7,[[]]],[10,"to_u64","","",7,[[]]],[10,"to_usize","","",7,[[]]],[10,"to_i8","","",7,[[]]],[10,"to_i16","","",7,[[]]],[10,"to_i32","","",7,[[]]],[10,"to_i64","","",7,[[]]],[10,"to_isize","","",7,[[]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[]]],[10,"to_i16","","",8,[[]]],[10,"to_i32","","",8,[[]]],[10,"to_i64","","",8,[[]]],[10,"to_isize","","",8,[[]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Gcf","","Alias for the associated type of `Gcd`: `Gcf<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn\'t used in this crate, but may be useful…",11,[[]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn\'t used in this crate, but may be useful…",13,[[]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[8,"Gcd","","A type operator that computes the [greatest common…",null,null],[16,"Output","","The greatest common divisor.",25,null],[8,"ToInt","","A type operator for taking a concrete integer value from a…",null,null],[10,"to_int","","Method returning the concrete value for the type.",26,[[]]],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",27,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",28,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",29,[[],["uterm",3]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",30,[[],["uint",3]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[0,"consts","typenum","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[6,"True","typenum","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"is_less","typenum::bit","",0,[[]]],[11,"is_equal","","",0,[[]]],[11,"is_greater","","",0,[[]]],[11,"is_less_or_equal","","",0,[[]]],[11,"is_not_equal","","",0,[[]]],[11,"is_greater_or_equal","","",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"is_less","","",1,[[]]],[11,"is_equal","","",1,[[]]],[11,"is_greater","","",1,[[]]],[11,"is_less_or_equal","","",1,[[]]],[11,"is_not_equal","","",1,[[]]],[11,"is_greater_or_equal","","",1,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"powi","typenum::int","",2,[[]]],[11,"partial_div","","",2,[[]]],[11,"is_less","","",2,[[]]],[11,"is_equal","","",2,[[]]],[11,"is_greater","","",2,[[]]],[11,"is_less_or_equal","","",2,[[]]],[11,"is_not_equal","","",2,[[]]],[11,"is_greater_or_equal","","",2,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"powi","","",3,[[]]],[11,"partial_div","","",3,[[]]],[11,"is_less","","",3,[[]]],[11,"is_equal","","",3,[[]]],[11,"is_greater","","",3,[[]]],[11,"is_less_or_equal","","",3,[[]]],[11,"is_not_equal","","",3,[[]]],[11,"is_greater_or_equal","","",3,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"powi","","",4,[[]]],[11,"partial_div","","",4,[[]]],[11,"is_less","","",4,[[]]],[11,"is_equal","","",4,[[]]],[11,"is_greater","","",4,[[]]],[11,"is_less_or_equal","","",4,[[]]],[11,"is_not_equal","","",4,[[]]],[11,"is_greater_or_equal","","",4,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"powi","typenum::uint","",29,[[]]],[11,"partial_div","","",29,[[]]],[11,"is_less","","",29,[[]]],[11,"is_equal","","",29,[[]]],[11,"is_greater","","",29,[[]]],[11,"is_less_or_equal","","",29,[[]]],[11,"is_not_equal","","",29,[[]]],[11,"is_greater_or_equal","","",29,[[]]],[11,"set_bit","","",29,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"powi","","",30,[[]]],[11,"partial_div","","",30,[[]]],[11,"is_less","","",30,[[]]],[11,"is_equal","","",30,[[]]],[11,"is_greater","","",30,[[]]],[11,"is_less_or_equal","","",30,[[]]],[11,"is_not_equal","","",30,[[]]],[11,"is_greater_or_equal","","",30,[[]]],[11,"set_bit","","",30,[[]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"partial_div","typenum::array","",34,[[]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"partial_div","","",35,[[]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_ordering","typenum","",31,[[],["ordering",4]]],[11,"to_ordering","","",32,[[],["ordering",4]]],[11,"to_ordering","","",33,[[],["ordering",4]]],[11,"new","typenum::bit","",0,[[]]],[11,"to_u8","","",0,[[]]],[11,"to_bool","","",0,[[]]],[11,"new","","",1,[[]]],[11,"to_u8","","",1,[[]]],[11,"to_bool","","",1,[[]]],[11,"to_u8","typenum::uint","",29,[[]]],[11,"to_u16","","",29,[[]]],[11,"to_u32","","",29,[[]]],[11,"to_u64","","",29,[[]]],[11,"to_usize","","",29,[[]]],[11,"to_i8","","",29,[[]]],[11,"to_i16","","",29,[[]]],[11,"to_i32","","",29,[[]]],[11,"to_i64","","",29,[[]]],[11,"to_isize","","",29,[[]]],[11,"to_u8","","",30,[[]]],[11,"to_u16","","",30,[[]]],[11,"to_u32","","",30,[[]]],[11,"to_u64","","",30,[[]]],[11,"to_usize","","",30,[[]]],[11,"to_i8","","",30,[[]]],[11,"to_i16","","",30,[[]]],[11,"to_i32","","",30,[[]]],[11,"to_i64","","",30,[[]]],[11,"to_isize","","",30,[[]]],[11,"to_i8","typenum::int","",4,[[]]],[11,"to_i16","","",4,[[]]],[11,"to_i32","","",4,[[]]],[11,"to_i64","","",4,[[]]],[11,"to_isize","","",4,[[]]],[11,"to_i8","","",2,[[]]],[11,"to_i16","","",2,[[]]],[11,"to_i32","","",2,[[]]],[11,"to_i64","","",2,[[]]],[11,"to_isize","","",2,[[]]],[11,"to_i8","","",3,[[]]],[11,"to_i16","","",3,[[]]],[11,"to_i32","","",3,[[]]],[11,"to_i64","","",3,[[]]],[11,"to_isize","","",3,[[]]],[11,"powi","","",4,[[["z0",3]]]],[11,"powi","","",4,[[["pint",3]]]],[11,"powi","","",4,[[["nint",3]]]],[11,"powi","typenum","",36,[[["nint",3]]]],[11,"powi","","",37,[[["nint",3],["uint",3]]]],[11,"powi","","",37,[[["nint",3],["uint",3]]]],[11,"powi","typenum::int","",2,[[["z0",3]]]],[11,"powi","","",3,[[["z0",3]]]],[11,"powi","","",2,[[["pint",3]]]],[11,"powi","","",3,[[["pint",3],["uint",3]]]],[11,"powi","","",3,[[["pint",3],["uint",3]]]],[11,"compare","typenum::bit","",0,[[["b0",3]]]],[11,"compare","","",0,[[["b1",3]]]],[11,"compare","","",1,[[["b0",3]]]],[11,"compare","","",1,[[["b1",3]]]],[11,"compare","typenum::int","",4,[[["z0",3]]]],[11,"compare","","",4,[[["nint",3]]]],[11,"compare","","",4,[[["pint",3]]]],[11,"compare","","",2,[[["z0",3]]]],[11,"compare","","",3,[[["z0",3]]]],[11,"compare","","",3,[[["pint",3]]]],[11,"compare","","",2,[[["nint",3]]]],[11,"compare","","",2,[[["pint",3]]]],[11,"compare","","",3,[[["nint",3]]]],[11,"compare","typenum::uint","",29,[[["uterm",3]]]],[11,"compare","","",30,[[["uterm",3]]]],[11,"compare","","",29,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"len","","",29,[[]]],[11,"len","","",30,[[]]],[11,"len","typenum::array","",34,[[]]],[11,"len","","",35,[[]]],[11,"partial_div","typenum::uint","",29,[[["uint",3]]]],[11,"partial_div","","",30,[[["uint",3]]]],[11,"partial_div","typenum::array","",34,[[]]],[11,"partial_div","","",35,[[]]],[11,"min","typenum::bit","",0,[[["b0",3]],["b0",3]]],[11,"min","","",0,[[["b1",3]],["b0",3]]],[11,"min","","",1,[[["b0",3]],["b0",3]]],[11,"min","","",1,[[["b1",3]],["b1",3]]],[11,"min","typenum::int","",4,[[["z0",3]]]],[11,"min","","",4,[[["pint",3]]]],[11,"min","","",4,[[["nint",3]]]],[11,"min","","",2,[[["z0",3]]]],[11,"min","","",3,[[["z0",3]]]],[11,"min","","",2,[[["pint",3]]]],[11,"min","","",3,[[["pint",3]]]],[11,"min","","",2,[[["nint",3]]]],[11,"min","","",3,[[["nint",3]]]],[11,"min","typenum::uint","",29,[[]]],[11,"min","","",30,[[]]],[11,"max","typenum::bit","",0,[[["b0",3]],["b0",3]]],[11,"max","","",0,[[["b1",3]],["b1",3]]],[11,"max","","",1,[[["b0",3]],["b1",3]]],[11,"max","","",1,[[["b1",3]],["b1",3]]],[11,"max","typenum::int","",4,[[["z0",3]]]],[11,"max","","",4,[[["pint",3]]]],[11,"max","","",4,[[["nint",3]]]],[11,"max","","",2,[[["z0",3]]]],[11,"max","","",3,[[["z0",3]]]],[11,"max","","",2,[[["pint",3]]]],[11,"max","","",3,[[["pint",3]]]],[11,"max","","",2,[[["nint",3]]]],[11,"max","","",3,[[["nint",3]]]],[11,"max","typenum::uint","",29,[[]]],[11,"max","","",30,[[]]],[11,"to_int","typenum::int","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","typenum::uint","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"get_bit","","",30,[[["u0",6]]]],[11,"get_bit","","",30,[[["uint",3]]]],[11,"get_bit","","",29,[[]]],[11,"fmt","typenum::bit","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::int","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::uint","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::array","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","typenum","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"div","typenum::int","",4,[[]]],[11,"div","","",2,[[["pint",3]]]],[11,"div","","",2,[[["nint",3]]]],[11,"div","","",3,[[["pint",3]]]],[11,"div","","",3,[[["nint",3]]]],[11,"div","typenum::uint","",29,[[["uint",3]]]],[11,"div","","",30,[[["uint",3]]]],[11,"div","typenum::array","",34,[[]]],[11,"div","","",35,[[]]],[11,"rem","typenum::int","",4,[[]]],[11,"rem","","",2,[[["pint",3]]]],[11,"rem","","",2,[[["nint",3]]]],[11,"rem","","",3,[[["pint",3]]]],[11,"rem","","",3,[[["nint",3]]]],[11,"rem","typenum::uint","",29,[[["uint",3]]]],[11,"rem","","",30,[[["uint",3]]]],[11,"rem","typenum::array","",34,[[]]],[11,"rem","","",35,[[]]],[11,"sub","typenum::int","",4,[[["z0",3]]]],[11,"sub","","",4,[[["pint",3]]]],[11,"sub","","",4,[[["nint",3]]]],[11,"sub","","",2,[[["z0",3]]]],[11,"sub","","",3,[[["z0",3]]]],[11,"sub","","",2,[[["nint",3]]]],[11,"sub","","",3,[[["pint",3]]]],[11,"sub","","",2,[[["pint",3]]]],[11,"sub","","",3,[[["nint",3]]]],[11,"sub","typenum::uint","",29,[[["b0",3]]]],[11,"sub","","",30,[[["b0",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",29,[[["uterm",3]]]],[11,"sub","","",30,[[]]],[11,"sub","typenum::array","",34,[[["aterm",3]]]],[11,"sub","","",35,[[["tarr",3]]]],[11,"eq","typenum::bit","",0,[[["b0",3]]]],[11,"eq","","",1,[[["b1",3]]]],[11,"eq","typenum::int","",2,[[["pint",3]]]],[11,"ne","","",2,[[["pint",3]]]],[11,"eq","","",3,[[["nint",3]]]],[11,"ne","","",3,[[["nint",3]]]],[11,"eq","","",4,[[["z0",3]]]],[11,"eq","typenum::uint","",29,[[["uterm",3]]]],[11,"eq","","",30,[[["uint",3]]]],[11,"ne","","",30,[[["uint",3]]]],[11,"eq","typenum::array","",34,[[["aterm",3]]]],[11,"eq","","",35,[[["tarr",3]]]],[11,"ne","","",35,[[["tarr",3]]]],[11,"eq","typenum","",31,[[["greater",3]]]],[11,"eq","","",32,[[["less",3]]]],[11,"eq","","",33,[[["equal",3]]]],[11,"cmp","typenum::bit","",0,[[["b0",3]],["ordering",4]]],[11,"cmp","","",1,[[["b1",3]],["ordering",4]]],[11,"cmp","typenum::int","",2,[[["pint",3]],["ordering",4]]],[11,"cmp","","",3,[[["nint",3]],["ordering",4]]],[11,"cmp","","",4,[[["z0",3]],["ordering",4]]],[11,"cmp","typenum::uint","",29,[[["uterm",3]],["ordering",4]]],[11,"cmp","","",30,[[["uint",3]],["ordering",4]]],[11,"cmp","typenum::array","",34,[[["aterm",3]],["ordering",4]]],[11,"cmp","","",35,[[["tarr",3]],["ordering",4]]],[11,"cmp","typenum","",31,[[["greater",3]],["ordering",4]]],[11,"cmp","","",32,[[["less",3]],["ordering",4]]],[11,"cmp","","",33,[[["equal",3]],["ordering",4]]],[11,"partial_cmp","typenum::bit","",0,[[["b0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["b1",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","typenum::int","",2,[[["pint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["pint",3]]]],[11,"le","","",2,[[["pint",3]]]],[11,"gt","","",2,[[["pint",3]]]],[11,"ge","","",2,[[["pint",3]]]],[11,"partial_cmp","","",3,[[["nint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["nint",3]]]],[11,"le","","",3,[[["nint",3]]]],[11,"gt","","",3,[[["nint",3]]]],[11,"ge","","",3,[[["nint",3]]]],[11,"partial_cmp","","",4,[[["z0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","typenum::uint","",29,[[["uterm",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["uint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["uint",3]]]],[11,"le","","",30,[[["uint",3]]]],[11,"gt","","",30,[[["uint",3]]]],[11,"ge","","",30,[[["uint",3]]]],[11,"partial_cmp","typenum::array","",34,[[["aterm",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",35,[[["tarr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["tarr",3]]]],[11,"le","","",35,[[["tarr",3]]]],[11,"gt","","",35,[[["tarr",3]]]],[11,"ge","","",35,[[["tarr",3]]]],[11,"partial_cmp","typenum","",31,[[["greater",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[["less",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["equal",3]],[["option",4],["ordering",4]]]],[11,"add","typenum::int","",4,[[]]],[11,"add","","",2,[[["z0",3]]]],[11,"add","","",3,[[["z0",3]]]],[11,"add","","",2,[[["pint",3]]]],[11,"add","","",3,[[["nint",3]]]],[11,"add","","",2,[[["nint",3]]]],[11,"add","","",3,[[["pint",3]]]],[11,"add","typenum::uint","",29,[[["b0",3]]]],[11,"add","","",30,[[["b0",3]]]],[11,"add","","",29,[[["b1",3]]]],[11,"add","","",30,[[["b1",3]]]],[11,"add","","",30,[[["b1",3]]]],[11,"add","","",29,[[]]],[11,"add","","",30,[[["uterm",3]]]],[11,"add","","",30,[[["b0",3],["uint",3]]]],[11,"add","","",30,[[["b1",3],["uint",3]]]],[11,"add","","",30,[[["b0",3],["uint",3]]]],[11,"add","","",30,[[["b1",3],["uint",3]]]],[11,"add","typenum::array","",34,[[["aterm",3]]]],[11,"add","","",35,[[["tarr",3]]]],[11,"mul","typenum::int","",4,[[]]],[11,"mul","","",2,[[["z0",3]]]],[11,"mul","","",3,[[["z0",3]]]],[11,"mul","","",2,[[["pint",3]]]],[11,"mul","","",3,[[["nint",3]]]],[11,"mul","","",2,[[["nint",3]]]],[11,"mul","","",3,[[["pint",3]]]],[11,"mul","typenum::uint","",30,[[["b0",3]]]],[11,"mul","","",29,[[["b0",3]]]],[11,"mul","","",29,[[["b1",3]]]],[11,"mul","","",30,[[["b1",3]]]],[11,"mul","","",30,[[["uterm",3]]]],[11,"mul","","",29,[[]]],[11,"mul","","",30,[[["uint",3]]]],[11,"mul","","",30,[[["uint",3]]]],[11,"mul","typenum::array","",34,[[]]],[11,"mul","","",35,[[]]],[11,"mul","typenum::int","",4,[[["aterm",3]]]],[11,"mul","","",2,[[["aterm",3]]]],[11,"mul","","",3,[[["aterm",3]]]],[11,"mul","","",4,[[["tarr",3]]]],[11,"mul","","",2,[[["tarr",3]]]],[11,"mul","","",3,[[["tarr",3]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",34,[[]]],[11,"neg","","",35,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[["b0",3]]]],[11,"bitand","","",1,[[["b1",3]]]],[11,"bitand","typenum::uint","",29,[[]]],[11,"bitand","","",30,[[]]],[11,"bitor","typenum::bit","",0,[[["b0",3]]]],[11,"bitor","","",0,[[["b1",3]]]],[11,"bitor","","",1,[[]]],[11,"bitor","typenum::uint","",29,[[]]],[11,"bitor","","",30,[[["uterm",3]]]],[11,"bitor","","",30,[[["b0",3],["uint",3]]]],[11,"bitor","","",30,[[["b1",3],["uint",3]]]],[11,"bitor","","",30,[[["b0",3],["uint",3]]]],[11,"bitor","","",30,[[["b1",3],["uint",3]]]],[11,"bitxor","typenum::bit","",0,[[["b0",3]]]],[11,"bitxor","","",1,[[["b0",3]]]],[11,"bitxor","","",0,[[["b1",3]]]],[11,"bitxor","","",1,[[["b1",3]]]],[11,"bitxor","typenum::uint","",29,[[]]],[11,"bitxor","","",30,[[]]],[11,"shl","","",29,[[["b0",3]]]],[11,"shl","","",29,[[["b1",3]]]],[11,"shl","","",30,[[["b0",3]]]],[11,"shl","","",30,[[["b1",3]]]],[11,"shl","","",30,[[["uterm",3]]]],[11,"shl","","",29,[[]]],[11,"shl","","",30,[[["uint",3]]]],[11,"shr","","",29,[[]]],[11,"shr","","",30,[[["uterm",3]]]],[11,"shr","","",29,[[["b0",3]]]],[11,"shr","","",29,[[["b1",3]]]],[11,"shr","","",30,[[["b0",3]]]],[11,"shr","","",30,[[["b1",3]]]],[11,"shr","","",30,[[["uint",3]]]],[11,"hash","typenum::bit","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","typenum::int","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","typenum::uint","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","typenum::array","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","typenum","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"clone","typenum::bit","",0,[[],["b0",3]]],[11,"clone","","",1,[[],["b1",3]]],[11,"clone","typenum::int","",2,[[],["pint",3]]],[11,"clone","","",3,[[],["nint",3]]],[11,"clone","","",4,[[],["z0",3]]],[11,"clone","typenum::uint","",29,[[],["uterm",3]]],[11,"clone","","",30,[[],["uint",3]]],[11,"clone","typenum::array","",34,[[],["aterm",3]]],[11,"clone","","",35,[[],["tarr",3]]],[11,"clone","typenum","",31,[[],["greater",3]]],[11,"clone","","",32,[[],["less",3]]],[11,"clone","","",33,[[],["equal",3]]],[11,"default","typenum::bit","",0,[[],["b0",3]]],[11,"default","","",1,[[],["b1",3]]],[11,"default","typenum::int","",2,[[],["pint",3]]],[11,"default","","",3,[[],["nint",3]]],[11,"default","","",4,[[],["z0",3]]],[11,"default","typenum::uint","",29,[[],["uterm",3]]],[11,"default","","",30,[[],["uint",3]]],[11,"default","typenum","",31,[[],["greater",3]]],[11,"default","","",32,[[],["less",3]]],[11,"default","","",33,[[],["equal",3]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"Gcd"],[8,"ToInt"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"unsafe_hacspec_examples":{"doc":"","i":[[0,"aes_gcm","unsafe_hacspec_examples","",null,null],[5,"encrypt_aes128","unsafe_hacspec_examples::aes_gcm","",null,[[["nonce",3],["byteseq",6],["key128",3]]]],[5,"encrypt_aes256","","",null,[[["nonce",3],["byteseq",6],["key256",3]]]],[5,"decrypt_aes128","","",null,[[["nonce",3],["byteseq",6],["tag",3],["key128",3]],[["byteseq",6],["string",3],["result",4]]]],[5,"decrypt_aes256","","",null,[[["nonce",3],["byteseq",6],["tag",3],["key256",3]],[["byteseq",6],["string",3],["result",4]]]],[0,"aes","","",null,null],[3,"Block","unsafe_hacspec_examples::aes_gcm::aes","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Word","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"RoundKey","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Nonce","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"SBox","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"RCon","","Fixed length byte array.",null,null],[12,"0","","",5,null],[3,"Bytes144","","Fixed length byte array.",null,null],[12,"0","","",6,null],[3,"Bytes176","","Fixed length byte array.",null,null],[12,"0","","",7,null],[3,"Bytes208","","Fixed length byte array.",null,null],[12,"0","","",8,null],[3,"Bytes240","","Fixed length byte array.",null,null],[12,"0","","",9,null],[3,"Key128","","Fixed length byte array.",null,null],[12,"0","","",10,null],[3,"Key256","","Fixed length byte array.",null,null],[12,"0","","",11,null],[4,"AesVariant","","",null,null],[13,"Aes128","","",12,null],[13,"Aes256","","",12,null],[5,"aes128_encrypt_block","","",null,[[["key128",3],["block",3]],["block",3]]],[5,"aes256_encrypt_block","","",null,[[["block",3],["key256",3]],["block",3]]],[5,"aes128_encrypt","","",null,[[["byteseq",6],["nonce",3],["key128",3],["u32",3]],["byteseq",6]]],[5,"aes128_decrypt","","",null,[[["byteseq",6],["nonce",3],["key128",3],["u32",3]],["byteseq",6]]],[5,"aes256_encrypt","","",null,[[["byteseq",6],["nonce",3],["key256",3],["u32",3]],["byteseq",6]]],[5,"aes256_decrypt","","",null,[[["byteseq",6],["nonce",3],["key256",3],["u32",3]],["byteseq",6]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",0,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",0,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["word",3]]],[11,"from_seq","","",1,[[],["word",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["word",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["word",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["word",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",1,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["roundkey",3]]],[11,"from_seq","","",2,[[],["roundkey",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["roundkey",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["roundkey",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["roundkey",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",2,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["nonce",3]]],[11,"from_seq","","",3,[[],["nonce",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["nonce",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["nonce",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["nonce",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",3,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["sbox",3]]],[11,"from_seq","","",4,[[],["sbox",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["sbox",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["sbox",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["sbox",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",4,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["rcon",3]]],[11,"from_seq","","",5,[[],["rcon",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["rcon",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["rcon",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["rcon",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",5,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"new","","",6,[[]]],[11,"length","","",6,[[]]],[11,"from_array","","",6,[[]]],[11,"from_native_slice","","",6,[[]]],[11,"capacity","","",6,[[]]],[11,"from_slice","","",6,[[]]],[11,"concat","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",6,[[["range",3]]]],[11,"slice","","",6,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",6,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",6,[[]]],[11,"get_chunk_len","","",6,[[]]],[11,"get_chunk","","",6,[[]]],[11,"set_chunk","","",6,[[]]],[11,"from_vec","","",6,[[["vec",3],["u8",3]],["bytes144",3]]],[11,"from_seq","","",6,[[],["bytes144",3]]],[11,"from_hex","","Read hex string to Bytes.",6,[[],["bytes144",3]]],[11,"declassify_eq","","",6,[[]]],[11,"to_be_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",6,[[],["bytes144",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",6,[[],["bytes144",3]]],[11,"to_be_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",6,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",6,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",6,[[],["string",3]]],[11,"new","","",7,[[]]],[11,"length","","",7,[[]]],[11,"from_array","","",7,[[]]],[11,"from_native_slice","","",7,[[]]],[11,"capacity","","",7,[[]]],[11,"from_slice","","",7,[[]]],[11,"concat","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",7,[[["range",3]]]],[11,"slice","","",7,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",7,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",7,[[]]],[11,"get_chunk_len","","",7,[[]]],[11,"get_chunk","","",7,[[]]],[11,"set_chunk","","",7,[[]]],[11,"from_vec","","",7,[[["vec",3],["u8",3]],["bytes176",3]]],[11,"from_seq","","",7,[[],["bytes176",3]]],[11,"from_hex","","Read hex string to Bytes.",7,[[],["bytes176",3]]],[11,"declassify_eq","","",7,[[]]],[11,"to_be_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",7,[[],["bytes176",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",7,[[],["bytes176",3]]],[11,"to_be_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",7,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",7,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",7,[[],["string",3]]],[11,"new","","",8,[[]]],[11,"length","","",8,[[]]],[11,"from_array","","",8,[[]]],[11,"from_native_slice","","",8,[[]]],[11,"capacity","","",8,[[]]],[11,"from_slice","","",8,[[]]],[11,"concat","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",8,[[["range",3]]]],[11,"slice","","",8,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",8,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",8,[[]]],[11,"get_chunk_len","","",8,[[]]],[11,"get_chunk","","",8,[[]]],[11,"set_chunk","","",8,[[]]],[11,"from_vec","","",8,[[["vec",3],["u8",3]],["bytes208",3]]],[11,"from_seq","","",8,[[],["bytes208",3]]],[11,"from_hex","","Read hex string to Bytes.",8,[[],["bytes208",3]]],[11,"declassify_eq","","",8,[[]]],[11,"to_be_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",8,[[],["bytes208",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",8,[[],["bytes208",3]]],[11,"to_be_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",8,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",8,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",8,[[],["string",3]]],[11,"new","","",9,[[]]],[11,"length","","",9,[[]]],[11,"from_array","","",9,[[]]],[11,"from_native_slice","","",9,[[]]],[11,"capacity","","",9,[[]]],[11,"from_slice","","",9,[[]]],[11,"concat","","",9,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",9,[[["range",3]]]],[11,"slice","","",9,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",9,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",9,[[]]],[11,"get_chunk_len","","",9,[[]]],[11,"get_chunk","","",9,[[]]],[11,"set_chunk","","",9,[[]]],[11,"from_vec","","",9,[[["vec",3],["u8",3]],["bytes240",3]]],[11,"from_seq","","",9,[[],["bytes240",3]]],[11,"from_hex","","Read hex string to Bytes.",9,[[],["bytes240",3]]],[11,"declassify_eq","","",9,[[]]],[11,"to_be_bytes","","",9,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",9,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",9,[[],["bytes240",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",9,[[],["bytes240",3]]],[11,"to_be_U32s","","",9,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",9,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",9,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",9,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",9,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",9,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",9,[[],["string",3]]],[11,"new","","",10,[[]]],[11,"length","","",10,[[]]],[11,"from_array","","",10,[[]]],[11,"from_native_slice","","",10,[[]]],[11,"capacity","","",10,[[]]],[11,"from_slice","","",10,[[]]],[11,"concat","","",10,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",10,[[["range",3]]]],[11,"slice","","",10,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",10,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",10,[[]]],[11,"get_chunk_len","","",10,[[]]],[11,"get_chunk","","",10,[[]]],[11,"set_chunk","","",10,[[]]],[11,"from_vec","","",10,[[["vec",3],["u8",3]],["key128",3]]],[11,"from_seq","","",10,[[],["key128",3]]],[11,"from_hex","","Read hex string to Bytes.",10,[[],["key128",3]]],[11,"declassify_eq","","",10,[[]]],[11,"to_be_bytes","","",10,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",10,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",10,[[],["key128",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",10,[[],["key128",3]]],[11,"to_be_U32s","","",10,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",10,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",10,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",10,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",10,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",10,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",10,[[],["string",3]]],[11,"new","","",11,[[]]],[11,"length","","",11,[[]]],[11,"from_array","","",11,[[]]],[11,"from_native_slice","","",11,[[]]],[11,"capacity","","",11,[[]]],[11,"from_slice","","",11,[[]]],[11,"concat","","",11,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",11,[[["range",3]]]],[11,"slice","","",11,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",11,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",11,[[]]],[11,"get_chunk_len","","",11,[[]]],[11,"get_chunk","","",11,[[]]],[11,"set_chunk","","",11,[[]]],[11,"from_vec","","",11,[[["vec",3],["u8",3]],["key256",3]]],[11,"from_seq","","",11,[[],["key256",3]]],[11,"from_hex","","Read hex string to Bytes.",11,[[],["key256",3]]],[11,"declassify_eq","","",11,[[]]],[11,"to_be_bytes","","",11,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",11,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",11,[[],["key256",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",11,[[],["key256",3]]],[11,"to_be_U32s","","",11,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",11,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",11,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",11,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",11,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",11,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",11,[[],["string",3]]],[0,"gf128","unsafe_hacspec_examples::aes_gcm","",null,null],[3,"Block","unsafe_hacspec_examples::aes_gcm::gf128","Fixed length byte array.",null,null],[12,"0","","",13,null],[3,"Key","","Fixed length byte array.",null,null],[12,"0","","",14,null],[3,"Tag","","Fixed length byte array.",null,null],[12,"0","","",15,null],[5,"gmac","","",null,[[["key",3],["byteseq",6]],["tag",3]]],[11,"new","","",13,[[]]],[11,"length","","",13,[[]]],[11,"from_array","","",13,[[]]],[11,"from_native_slice","","",13,[[]]],[11,"capacity","","",13,[[]]],[11,"from_slice","","",13,[[]]],[11,"concat","","",13,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",13,[[["range",3]]]],[11,"slice","","",13,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",13,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",13,[[]]],[11,"get_chunk_len","","",13,[[]]],[11,"get_chunk","","",13,[[]]],[11,"set_chunk","","",13,[[]]],[11,"from_vec","","",13,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",13,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",13,[[],["block",3]]],[11,"declassify_eq","","",13,[[]]],[11,"to_be_bytes","","",13,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",13,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",13,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",13,[[],["block",3]]],[11,"to_be_U32s","","",13,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",13,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",13,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",13,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",13,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",13,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",13,[[],["string",3]]],[11,"new","","",14,[[]]],[11,"length","","",14,[[]]],[11,"from_array","","",14,[[]]],[11,"from_native_slice","","",14,[[]]],[11,"capacity","","",14,[[]]],[11,"from_slice","","",14,[[]]],[11,"concat","","",14,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",14,[[["range",3]]]],[11,"slice","","",14,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",14,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",14,[[]]],[11,"get_chunk_len","","",14,[[]]],[11,"get_chunk","","",14,[[]]],[11,"set_chunk","","",14,[[]]],[11,"from_vec","","",14,[[["vec",3],["u8",3]],["key",3]]],[11,"from_seq","","",14,[[],["key",3]]],[11,"from_hex","","Read hex string to Bytes.",14,[[],["key",3]]],[11,"declassify_eq","","",14,[[]]],[11,"to_be_bytes","","",14,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",14,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",14,[[],["key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",14,[[],["key",3]]],[11,"to_be_U32s","","",14,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",14,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",14,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",14,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",14,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",14,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",14,[[],["string",3]]],[11,"new","","",15,[[]]],[11,"length","","",15,[[]]],[11,"from_array","","",15,[[]]],[11,"from_native_slice","","",15,[[]]],[11,"capacity","","",15,[[]]],[11,"from_slice","","",15,[[]]],[11,"concat","","",15,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",15,[[["range",3]]]],[11,"slice","","",15,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",15,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",15,[[]]],[11,"get_chunk_len","","",15,[[]]],[11,"get_chunk","","",15,[[]]],[11,"set_chunk","","",15,[[]]],[11,"from_vec","","",15,[[["vec",3],["u8",3]],["tag",3]]],[11,"from_seq","","",15,[[],["tag",3]]],[11,"from_hex","","Read hex string to Bytes.",15,[[],["tag",3]]],[11,"declassify_eq","","",15,[[]]],[11,"to_be_bytes","","",15,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",15,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",15,[[],["tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",15,[[],["tag",3]]],[11,"to_be_U32s","","",15,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",15,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",15,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",15,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",15,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",15,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",15,[[],["string",3]]],[0,"blake2","unsafe_hacspec_examples","",null,null],[0,"blake2b","unsafe_hacspec_examples::blake2","",null,null],[3,"DigestB","unsafe_hacspec_examples::blake2::blake2b","Fixed length byte array.",null,null],[12,"0","","",16,null],[3,"Sigma","","Fixed length byte array.",null,null],[12,"0","","",17,null],[3,"State","","Fixed length byte array.",null,null],[12,"0","","",18,null],[3,"DoubleState","","Fixed length byte array.",null,null],[12,"0","","",19,null],[3,"Counter","","Fixed length byte array.",null,null],[12,"0","","",20,null],[4,"BlakeVariant","","",null,null],[13,"Blake2S","","",21,null],[13,"Blake2B","","",21,null],[5,"blake2","","",null,[[["blakevariant",4],["byteseq",6]],["byteseq",6]]],[5,"blake2b","","",null,[[["byteseq",6]],["digestb",3]]],[8,"HasIV","","",null,null],[10,"iv","","",22,[[],["state",3]]],[11,"new","","",16,[[]]],[11,"length","","",16,[[]]],[11,"from_array","","",16,[[]]],[11,"from_native_slice","","",16,[[]]],[11,"capacity","","",16,[[]]],[11,"from_slice","","",16,[[]]],[11,"concat","","",16,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",16,[[["range",3]]]],[11,"slice","","",16,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",16,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",16,[[]]],[11,"get_chunk_len","","",16,[[]]],[11,"get_chunk","","",16,[[]]],[11,"set_chunk","","",16,[[]]],[11,"from_vec","","",16,[[["vec",3],["u8",3]],["digestb",3]]],[11,"from_seq","","",16,[[],["digestb",3]]],[11,"from_hex","","Read hex string to Bytes.",16,[[],["digestb",3]]],[11,"declassify_eq","","",16,[[]]],[11,"to_be_bytes","","",16,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",16,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",16,[[],["digestb",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",16,[[],["digestb",3]]],[11,"to_be_U32s","","",16,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",16,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",16,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",16,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",16,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",16,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",16,[[],["string",3]]],[11,"new","","",17,[[]]],[11,"length","","",17,[[]]],[11,"from_array","","",17,[[]]],[11,"from_native_slice","","",17,[[]]],[11,"capacity","","",17,[[]]],[11,"from_slice","","",17,[[]]],[11,"concat","","",17,[[],["seq",3]]],[11,"from_slice_range","","",17,[[["range",3]]]],[11,"slice","","",17,[[],["seq",3]]],[11,"slice_range","","",17,[[["range",3]],["seq",3]]],[11,"num_chunks","","",17,[[]]],[11,"get_chunk_len","","",17,[[]]],[11,"get_chunk","","",17,[[]]],[11,"set_chunk","","",17,[[]]],[11,"from_vec","","",17,[[["vec",3]],["sigma",3]]],[11,"from_seq","","",17,[[],["sigma",3]]],[11,"from_hex","","Read hex string to Bytes.",17,[[],["sigma",3]]],[11,"new","","",18,[[]]],[11,"length","","",18,[[]]],[11,"from_array","","",18,[[]]],[11,"from_native_slice","","",18,[[]]],[11,"capacity","","",18,[[]]],[11,"from_slice","","",18,[[]]],[11,"concat","","",18,[[],["seq",3]]],[11,"from_slice_range","","",18,[[["range",3]]]],[11,"slice","","",18,[[],["seq",3]]],[11,"slice_range","","",18,[[["range",3]],["seq",3]]],[11,"num_chunks","","",18,[[]]],[11,"get_chunk_len","","",18,[[]]],[11,"get_chunk","","",18,[[]]],[11,"set_chunk","","",18,[[]]],[11,"from_vec","","",18,[[["vec",3]],["state",3]]],[11,"from_seq","","",18,[[],["state",3]]],[11,"new","","",19,[[]]],[11,"length","","",19,[[]]],[11,"from_array","","",19,[[]]],[11,"from_native_slice","","",19,[[]]],[11,"capacity","","",19,[[]]],[11,"from_slice","","",19,[[]]],[11,"concat","","",19,[[],["seq",3]]],[11,"from_slice_range","","",19,[[["range",3]]]],[11,"slice","","",19,[[],["seq",3]]],[11,"slice_range","","",19,[[["range",3]],["seq",3]]],[11,"num_chunks","","",19,[[]]],[11,"get_chunk_len","","",19,[[]]],[11,"get_chunk","","",19,[[]]],[11,"set_chunk","","",19,[[]]],[11,"from_vec","","",19,[[["vec",3]],["doublestate",3]]],[11,"from_seq","","",19,[[],["doublestate",3]]],[11,"new","","",20,[[]]],[11,"length","","",20,[[]]],[11,"from_array","","",20,[[]]],[11,"from_native_slice","","",20,[[]]],[11,"capacity","","",20,[[]]],[11,"from_slice","","",20,[[]]],[11,"concat","","",20,[[],["seq",3]]],[11,"from_slice_range","","",20,[[["range",3]]]],[11,"slice","","",20,[[],["seq",3]]],[11,"slice_range","","",20,[[["range",3]],["seq",3]]],[11,"num_chunks","","",20,[[]]],[11,"get_chunk_len","","",20,[[]]],[11,"get_chunk","","",20,[[]]],[11,"set_chunk","","",20,[[]]],[11,"from_vec","","",20,[[["vec",3]],["counter",3]]],[11,"from_seq","","",20,[[],["counter",3]]],[0,"curve25519","unsafe_hacspec_examples","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::curve25519","",null,null],[3,"FieldElement","","",null,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[3,"SerializedPoint","","Fixed length byte array.",null,null],[12,"0","","",23,null],[3,"SerializedScalar","","Fixed length byte array.",null,null],[12,"0","","",24,null],[5,"scalarmult","","",null,[[["serializedscalar",3],["serializedpoint",3]],["serializedpoint",3]]],[5,"secret_to_public","","",null,[[["serializedscalar",3]],["serializedpoint",3]]],[11,"max_value","","",25,[[]]],[11,"from_literal","","",25,[[]]],[11,"from_signed_literal","","",25,[[]]],[11,"pow2","","Returns 2 to the power of the argument",25,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",25,[[]]],[11,"from_hex","","",25,[[]]],[11,"from_be_bytes","","",25,[[]]],[11,"from_le_bytes","","",25,[[]]],[11,"to_be_bytes","","",25,[[]]],[11,"to_le_bytes","","",25,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",25,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"inv","","",25,[[]]],[11,"pow_felem","","",25,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",25,[[]]],[11,"from_canvas","","",26,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",26,[[],["fieldcanvas",3]]],[11,"max","","",26,[[],["fieldcanvas",3]]],[11,"declassify","","",26,[[],["bigint",3]]],[11,"from_hex","","",26,[[]]],[11,"from_be_bytes","","",26,[[]]],[11,"to_be_bytes","","",26,[[],["vec",3]]],[11,"from_le_bytes","","",26,[[]]],[11,"to_le_bytes","","",26,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",26,[[]]],[11,"from_literal","","",26,[[]]],[11,"from_signed_literal","","",26,[[]]],[11,"comp_eq","","",26,[[]]],[11,"comp_ne","","",26,[[]]],[11,"comp_gte","","",26,[[]]],[11,"comp_gt","","",26,[[]]],[11,"comp_lte","","",26,[[]]],[11,"comp_lt","","",26,[[]]],[11,"inv","","",26,[[]]],[11,"pow_felem","","",26,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",26,[[]]],[11,"pow2","","Returns 2 to the power of the argument",26,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",26,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",26,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",26,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",26,[[],["seq",3]]],[11,"from_byte_seq_le","","",26,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",26,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",26,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",26,[[],["seq",3]]],[11,"from_secret_literal","","",26,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",27,[[]]],[11,"from_literal","","",27,[[]]],[11,"from_signed_literal","","",27,[[]]],[11,"pow2","","Returns 2 to the power of the argument",27,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",27,[[]]],[11,"from_hex","","",27,[[]]],[11,"from_be_bytes","","",27,[[]]],[11,"from_le_bytes","","",27,[[]]],[11,"to_be_bytes","","",27,[[]]],[11,"to_le_bytes","","",27,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",27,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"inv","","",27,[[]]],[11,"pow_felem","","",27,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",27,[[]]],[11,"from_canvas","","",28,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",28,[[],["scalarcanvas",3]]],[11,"max","","",28,[[],["scalarcanvas",3]]],[11,"declassify","","",28,[[],["bigint",3]]],[11,"from_hex","","",28,[[]]],[11,"from_be_bytes","","",28,[[]]],[11,"to_be_bytes","","",28,[[],["vec",3]]],[11,"from_le_bytes","","",28,[[]]],[11,"to_le_bytes","","",28,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",28,[[]]],[11,"from_literal","","",28,[[]]],[11,"from_signed_literal","","",28,[[]]],[11,"comp_eq","","",28,[[]]],[11,"comp_ne","","",28,[[]]],[11,"comp_gte","","",28,[[]]],[11,"comp_gt","","",28,[[]]],[11,"comp_lte","","",28,[[]]],[11,"comp_lt","","",28,[[]]],[11,"inv","","",28,[[]]],[11,"pow_felem","","",28,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",28,[[]]],[11,"pow2","","Returns 2 to the power of the argument",28,[[],["scalar",3]]],[11,"from_byte_seq_be","","",28,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_be","","",28,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",28,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",28,[[],["seq",3]]],[11,"from_byte_seq_le","","",28,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",28,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",28,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",28,[[],["seq",3]]],[11,"from_secret_literal","","",28,[[["u128",3]],["scalar",3]]],[11,"new","","",23,[[]]],[11,"length","","",23,[[]]],[11,"from_array","","",23,[[]]],[11,"from_native_slice","","",23,[[]]],[11,"capacity","","",23,[[]]],[11,"from_slice","","",23,[[]]],[11,"concat","","",23,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",23,[[["range",3]]]],[11,"slice","","",23,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",23,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",23,[[]]],[11,"get_chunk_len","","",23,[[]]],[11,"get_chunk","","",23,[[]]],[11,"set_chunk","","",23,[[]]],[11,"from_vec","","",23,[[["vec",3],["u8",3]],["serializedpoint",3]]],[11,"from_seq","","",23,[[],["serializedpoint",3]]],[11,"from_hex","","Read hex string to Bytes.",23,[[],["serializedpoint",3]]],[11,"declassify_eq","","",23,[[]]],[11,"to_be_bytes","","",23,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",23,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",23,[[],["serializedpoint",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",23,[[],["serializedpoint",3]]],[11,"to_be_U32s","","",23,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",23,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",23,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",23,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",23,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",23,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",23,[[],["string",3]]],[11,"new","","",24,[[]]],[11,"length","","",24,[[]]],[11,"from_array","","",24,[[]]],[11,"from_native_slice","","",24,[[]]],[11,"capacity","","",24,[[]]],[11,"from_slice","","",24,[[]]],[11,"concat","","",24,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",24,[[["range",3]]]],[11,"slice","","",24,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",24,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",24,[[]]],[11,"get_chunk_len","","",24,[[]]],[11,"get_chunk","","",24,[[]]],[11,"set_chunk","","",24,[[]]],[11,"from_vec","","",24,[[["vec",3],["u8",3]],["serializedscalar",3]]],[11,"from_seq","","",24,[[],["serializedscalar",3]]],[11,"from_hex","","Read hex string to Bytes.",24,[[],["serializedscalar",3]]],[11,"declassify_eq","","",24,[[]]],[11,"to_be_bytes","","",24,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",24,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",24,[[],["serializedscalar",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",24,[[],["serializedscalar",3]]],[11,"to_be_U32s","","",24,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",24,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",24,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",24,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",24,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",24,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",24,[[],["string",3]]],[0,"ec","unsafe_hacspec_examples","",null,null],[0,"arithmetic","unsafe_hacspec_examples::ec","",null,null],[3,"Jacobian","unsafe_hacspec_examples::ec::arithmetic","",null,null],[12,"0","","",29,null],[12,"1","","",29,null],[12,"2","","",29,null],[3,"Affine","","",null,null],[12,"0","","",30,null],[12,"1","","",30,null],[5,"point_mul","","",null,[[["affine",3],["unsignedintegercopy",8]],[["affine",3],["unsignedintegercopy",8]]]],[0,"p256","unsafe_hacspec_examples::ec","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::ec::p256","",null,null],[3,"FieldElement","","",null,null],[3,"Scalar","","",null,null],[5,"point_mul_base","","",null,[[["scalar",3]],[["fieldelement",3],["affine",3]]]],[5,"point_mul","","",null,[[["scalar",3],["affine",3],["fieldelement",3]],[["fieldelement",3],["affine",3]]]],[11,"max_value","","",31,[[]]],[11,"from_literal","","",31,[[]]],[11,"from_signed_literal","","",31,[[]]],[11,"pow2","","Returns 2 to the power of the argument",31,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",31,[[]]],[11,"from_hex","","",31,[[]]],[11,"from_be_bytes","","",31,[[]]],[11,"from_le_bytes","","",31,[[]]],[11,"to_be_bytes","","",31,[[]]],[11,"to_le_bytes","","",31,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",31,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"inv","","",31,[[]]],[11,"pow_felem","","",31,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",31,[[]]],[11,"from_canvas","","",32,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",32,[[],["fieldcanvas",3]]],[11,"max","","",32,[[],["fieldcanvas",3]]],[11,"declassify","","",32,[[],["bigint",3]]],[11,"from_hex","","",32,[[]]],[11,"from_be_bytes","","",32,[[]]],[11,"to_be_bytes","","",32,[[],["vec",3]]],[11,"from_le_bytes","","",32,[[]]],[11,"to_le_bytes","","",32,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",32,[[]]],[11,"from_literal","","",32,[[]]],[11,"from_signed_literal","","",32,[[]]],[11,"comp_eq","","",32,[[]]],[11,"comp_ne","","",32,[[]]],[11,"comp_gte","","",32,[[]]],[11,"comp_gt","","",32,[[]]],[11,"comp_lte","","",32,[[]]],[11,"comp_lt","","",32,[[]]],[11,"inv","","",32,[[]]],[11,"pow_felem","","",32,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",32,[[]]],[11,"pow2","","Returns 2 to the power of the argument",32,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",32,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",32,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",32,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",32,[[],["seq",3]]],[11,"from_byte_seq_le","","",32,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",32,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",32,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",32,[[],["seq",3]]],[11,"from_secret_literal","","",32,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",33,[[]]],[11,"from_literal","","",33,[[]]],[11,"from_signed_literal","","",33,[[]]],[11,"pow2","","Returns 2 to the power of the argument",33,[[],["scalar",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",33,[[]]],[11,"from_hex","","",33,[[]]],[11,"from_be_bytes","","",33,[[]]],[11,"from_le_bytes","","",33,[[]]],[11,"to_be_bytes","","",33,[[]]],[11,"to_le_bytes","","",33,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",33,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"inv","","",33,[[]]],[11,"pow_felem","","",33,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",33,[[]]],[0,"p384","unsafe_hacspec_examples::ec","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::ec::p384","",null,null],[3,"FieldElement","","",null,null],[3,"Scalar","","",null,null],[5,"point_mul_base","","",null,[[["scalar",3]],[["fieldelement",3],["affine",3]]]],[5,"point_mul","","",null,[[["fieldelement",3],["scalar",3],["affine",3]],[["fieldelement",3],["affine",3]]]],[11,"max_value","","",34,[[]]],[11,"from_literal","","",34,[[]]],[11,"from_signed_literal","","",34,[[]]],[11,"pow2","","Returns 2 to the power of the argument",34,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",34,[[]]],[11,"from_hex","","",34,[[]]],[11,"from_be_bytes","","",34,[[]]],[11,"from_le_bytes","","",34,[[]]],[11,"to_be_bytes","","",34,[[]]],[11,"to_le_bytes","","",34,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",34,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"inv","","",34,[[]]],[11,"pow_felem","","",34,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",34,[[]]],[11,"from_canvas","","",35,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",35,[[],["fieldcanvas",3]]],[11,"max","","",35,[[],["fieldcanvas",3]]],[11,"declassify","","",35,[[],["bigint",3]]],[11,"from_hex","","",35,[[]]],[11,"from_be_bytes","","",35,[[]]],[11,"to_be_bytes","","",35,[[],["vec",3]]],[11,"from_le_bytes","","",35,[[]]],[11,"to_le_bytes","","",35,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",35,[[]]],[11,"from_literal","","",35,[[]]],[11,"from_signed_literal","","",35,[[]]],[11,"comp_eq","","",35,[[]]],[11,"comp_ne","","",35,[[]]],[11,"comp_gte","","",35,[[]]],[11,"comp_gt","","",35,[[]]],[11,"comp_lte","","",35,[[]]],[11,"comp_lt","","",35,[[]]],[11,"inv","","",35,[[]]],[11,"pow_felem","","",35,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",35,[[]]],[11,"pow2","","Returns 2 to the power of the argument",35,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",35,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",35,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",35,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",35,[[],["seq",3]]],[11,"from_byte_seq_le","","",35,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",35,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",35,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",35,[[],["seq",3]]],[11,"from_secret_literal","","",35,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",36,[[]]],[11,"from_literal","","",36,[[]]],[11,"from_signed_literal","","",36,[[]]],[11,"pow2","","Returns 2 to the power of the argument",36,[[],["scalar",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",36,[[]]],[11,"from_hex","","",36,[[]]],[11,"from_be_bytes","","",36,[[]]],[11,"from_le_bytes","","",36,[[]]],[11,"to_be_bytes","","",36,[[]]],[11,"to_le_bytes","","",36,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",36,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"inv","","",36,[[]]],[11,"pow_felem","","",36,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",36,[[]]],[0,"ntru_prime","unsafe_hacspec_examples","",null,null],[0,"ntru_prime","unsafe_hacspec_examples::ntru_prime","",null,null],[3,"Parameters","unsafe_hacspec_examples::ntru_prime::ntru_prime","NtruPrime parameters",null,null],[12,"p","","",37,null],[12,"q","","",37,null],[12,"w","","",37,null],[12,"irr","","",37,null],[3,"Poly","","Positions and coefficients for a polynomial.",null,null],[12,"positions","","",38,null],[12,"coefficients","","",38,null],[4,"Version","","",null,null],[13,"NtruPrime653","","",39,null],[13,"NtruPrime761","","",39,null],[13,"NtruPrime857","","",39,null],[5,"get_parameters","","",null,[[["version",4]],["parameters",3]]],[5,"round_to_3","","First transform each coefficients to a value between…",null,[[["seq",3]],["seq",3]]],[5,"encrypt","","r is the plaintext, h is the public key",null,[[["seq",3],["parameters",3]],["seq",3]]],[5,"decrypt","","",null,[[["seq",3],["parameters",3]],[["seq",3],["result",4]]]],[5,"build_poly","","This function creates a polynomial with w many -1 or 1 and…",null,[[["poly",3]],["seq",3]]],[5,"key_gen","","Generate a key from given polynomials `f` and `g`.…",null,[[["poly",3],["parameters",3]],["result",4]]],[0,"sha2","unsafe_hacspec_examples","",null,null],[3,"Block","unsafe_hacspec_examples::sha2","Fixed length byte array.",null,null],[12,"0","","",40,null],[3,"OpTableType","","Fixed length byte array.",null,null],[12,"0","","",41,null],[3,"Digest","","Fixed length byte array.",null,null],[12,"0","","",42,null],[3,"RoundConstantsTable","","Fixed length byte array.",null,null],[12,"0","","",43,null],[3,"Hash","","Fixed length byte array.",null,null],[12,"0","","",44,null],[4,"Variant","","",null,null],[13,"SHA224","","",45,null],[13,"SHA256","","",45,null],[13,"SHA384","","",45,null],[13,"SHA512","","",45,null],[5,"hash","","",null,[[["byteseq",6]],["digest",3]]],[11,"new","","",40,[[]]],[11,"length","","",40,[[]]],[11,"from_array","","",40,[[]]],[11,"from_native_slice","","",40,[[]]],[11,"capacity","","",40,[[]]],[11,"from_slice","","",40,[[]]],[11,"concat","","",40,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",40,[[["range",3]]]],[11,"slice","","",40,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",40,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",40,[[]]],[11,"get_chunk_len","","",40,[[]]],[11,"get_chunk","","",40,[[]]],[11,"set_chunk","","",40,[[]]],[11,"from_vec","","",40,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",40,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",40,[[],["block",3]]],[11,"declassify_eq","","",40,[[]]],[11,"to_be_bytes","","",40,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",40,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",40,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",40,[[],["block",3]]],[11,"to_be_U32s","","",40,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",40,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",40,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",40,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",40,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",40,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",40,[[],["string",3]]],[11,"new","","",41,[[]]],[11,"length","","",41,[[]]],[11,"from_array","","",41,[[]]],[11,"from_native_slice","","",41,[[]]],[11,"capacity","","",41,[[]]],[11,"from_slice","","",41,[[]]],[11,"concat","","",41,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",41,[[["range",3]]]],[11,"slice","","",41,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",41,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",41,[[]]],[11,"get_chunk_len","","",41,[[]]],[11,"get_chunk","","",41,[[]]],[11,"set_chunk","","",41,[[]]],[11,"from_vec","","",41,[[["vec",3],["u8",3]],["optabletype",3]]],[11,"from_seq","","",41,[[],["optabletype",3]]],[11,"from_hex","","Read hex string to Bytes.",41,[[],["optabletype",3]]],[11,"declassify_eq","","",41,[[]]],[11,"to_be_bytes","","",41,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",41,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",41,[[],["optabletype",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",41,[[],["optabletype",3]]],[11,"to_be_U32s","","",41,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",41,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",41,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",41,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",41,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",41,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",41,[[],["string",3]]],[11,"new","","",42,[[]]],[11,"length","","",42,[[]]],[11,"from_array","","",42,[[]]],[11,"from_native_slice","","",42,[[]]],[11,"capacity","","",42,[[]]],[11,"from_slice","","",42,[[]]],[11,"concat","","",42,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",42,[[["range",3]]]],[11,"slice","","",42,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",42,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",42,[[]]],[11,"get_chunk_len","","",42,[[]]],[11,"get_chunk","","",42,[[]]],[11,"set_chunk","","",42,[[]]],[11,"from_vec","","",42,[[["vec",3],["u8",3]],["digest",3]]],[11,"from_seq","","",42,[[],["digest",3]]],[11,"from_hex","","Read hex string to Bytes.",42,[[],["digest",3]]],[11,"declassify_eq","","",42,[[]]],[11,"to_be_bytes","","",42,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",42,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",42,[[],["digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",42,[[],["digest",3]]],[11,"to_be_U32s","","",42,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",42,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",42,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",42,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",42,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","",42,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","",42,[[],["string",3]]],[11,"new","","",43,[[]]],[11,"length","","",43,[[]]],[11,"from_array","","",43,[[]]],[11,"from_native_slice","","",43,[[]]],[11,"capacity","","",43,[[]]],[11,"from_slice","","",43,[[]]],[11,"concat","","",43,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",43,[[["range",3]]]],[11,"slice","","",43,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",43,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",43,[[]]],[11,"get_chunk_len","","",43,[[]]],[11,"get_chunk","","",43,[[]]],[11,"set_chunk","","",43,[[]]],[11,"from_vec","","",43,[[["vec",3],["u32",3]],["roundconstantstable",3]]],[11,"from_seq","","",43,[[],["roundconstantstable",3]]],[11,"from_hex","","Read hex string to Bytes.",43,[[],["roundconstantstable",3]]],[11,"declassify_eq","","",43,[[]]],[11,"to_be_bytes","","",43,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",43,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",43,[[],["roundconstantstable",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",43,[[],["roundconstantstable",3]]],[11,"new","","",44,[[]]],[11,"length","","",44,[[]]],[11,"from_array","","",44,[[]]],[11,"from_native_slice","","",44,[[]]],[11,"capacity","","",44,[[]]],[11,"from_slice","","",44,[[]]],[11,"concat","","",44,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",44,[[["range",3]]]],[11,"slice","","",44,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",44,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",44,[[]]],[11,"get_chunk_len","","",44,[[]]],[11,"get_chunk","","",44,[[]]],[11,"set_chunk","","",44,[[]]],[11,"from_vec","","",44,[[["vec",3],["u32",3]],["hash",3]]],[11,"from_seq","","",44,[[],["hash",3]]],[11,"from_hex","","Read hex string to Bytes.",44,[[],["hash",3]]],[11,"declassify_eq","","",44,[[]]],[11,"to_be_bytes","","",44,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",44,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",44,[[],["hash",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",44,[[],["hash",3]]],[17,"K_SIZE","","",null,null],[17,"HASH_SIZE","","",null,null],[11,"from","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::arithmetic","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ntru_prime::ntru_prime","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"iv","unsafe_hacspec_examples::blake2::blake2b","",18,[[],[["state",3],["u64",3]]]],[11,"iv","","",18,[[],[["state",3],["u32",3]]]],[11,"from","unsafe_hacspec_examples::curve25519","",25,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",25,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",26,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",27,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",27,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",28,[[["scalarcanvas",3]],["scalar",3]]],[11,"from","unsafe_hacspec_examples::ec::p256","",31,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",31,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",32,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",33,[[["biguint",3]],["scalar",3]]],[11,"from","","",33,[[["bigint",3]],["scalar",3]]],[11,"from","unsafe_hacspec_examples::ec::p384","",34,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",34,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",35,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",36,[[["biguint",3]],["scalar",3]]],[11,"from","","",36,[[["bigint",3]],["scalar",3]]],[11,"into","unsafe_hacspec_examples::curve25519","",25,[[],["bigint",3]]],[11,"into","","",25,[[],["biguint",3]]],[11,"into","","",26,[[],["fieldcanvas",3]]],[11,"into","","",27,[[],["bigint",3]]],[11,"into","","",27,[[],["biguint",3]]],[11,"into","","",28,[[],["scalarcanvas",3]]],[11,"into","unsafe_hacspec_examples::ec::p256","",31,[[],["bigint",3]]],[11,"into","","",31,[[],["biguint",3]]],[11,"into","","",32,[[],["fieldcanvas",3]]],[11,"into","","",33,[[],["bigint",3]]],[11,"into","","",33,[[],["biguint",3]]],[11,"into","unsafe_hacspec_examples::ec::p384","",34,[[],["bigint",3]]],[11,"into","","",34,[[],["biguint",3]]],[11,"into","","",35,[[],["fieldcanvas",3]]],[11,"into","","",36,[[],["bigint",3]]],[11,"into","","",36,[[],["biguint",3]]],[11,"clone","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["block",3]]],[11,"clone","","",1,[[],["word",3]]],[11,"clone","","",2,[[],["roundkey",3]]],[11,"clone","","",3,[[],["nonce",3]]],[11,"clone","","",4,[[],["sbox",3]]],[11,"clone","","",5,[[],["rcon",3]]],[11,"clone","","",6,[[],["bytes144",3]]],[11,"clone","","",7,[[],["bytes176",3]]],[11,"clone","","",8,[[],["bytes208",3]]],[11,"clone","","",9,[[],["bytes240",3]]],[11,"clone","","",10,[[],["key128",3]]],[11,"clone","","",11,[[],["key256",3]]],[11,"clone","","",12,[[],["aesvariant",4]]],[11,"clone","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["block",3]]],[11,"clone","","",14,[[],["key",3]]],[11,"clone","","",15,[[],["tag",3]]],[11,"clone","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["digestb",3]]],[11,"clone","","",17,[[],["sigma",3]]],[11,"clone","","",18,[[],["state",3]]],[11,"clone","","",19,[[],["doublestate",3]]],[11,"clone","","",20,[[],["counter",3]]],[11,"clone","","",21,[[],["blakevariant",4]]],[11,"clone","unsafe_hacspec_examples::curve25519","",25,[[],["fieldcanvas",3]]],[11,"clone","","",26,[[],["fieldelement",3]]],[11,"clone","","",27,[[],["scalarcanvas",3]]],[11,"clone","","",28,[[],["scalar",3]]],[11,"clone","","",23,[[],["serializedpoint",3]]],[11,"clone","","",24,[[],["serializedscalar",3]]],[11,"clone","unsafe_hacspec_examples::ec::arithmetic","",29,[[],["jacobian",3]]],[11,"clone","","",30,[[],["affine",3]]],[11,"clone","unsafe_hacspec_examples::ec::p256","",31,[[],["fieldcanvas",3]]],[11,"clone","","",32,[[],["fieldelement",3]]],[11,"clone","","",33,[[],["scalar",3]]],[11,"clone","unsafe_hacspec_examples::ec::p384","",34,[[],["fieldcanvas",3]]],[11,"clone","","",35,[[],["fieldelement",3]]],[11,"clone","","",36,[[],["scalar",3]]],[11,"clone","unsafe_hacspec_examples::sha2","",40,[[],["block",3]]],[11,"clone","","",41,[[],["optabletype",3]]],[11,"clone","","",42,[[],["digest",3]]],[11,"clone","","",43,[[],["roundconstantstable",3]]],[11,"clone","","",44,[[],["hash",3]]],[11,"default","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","unsafe_hacspec_examples::curve25519","",25,[[],["fieldcanvas",3]]],[11,"default","","",26,[[],["fieldelement",3]]],[11,"default","","",27,[[],["scalarcanvas",3]]],[11,"default","","",28,[[],["scalar",3]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","unsafe_hacspec_examples::ec::p256","",31,[[],["fieldcanvas",3]]],[11,"default","","",32,[[],["fieldelement",3]]],[11,"default","","",33,[[],["scalar",3]]],[11,"default","unsafe_hacspec_examples::ec::p384","",34,[[],["fieldcanvas",3]]],[11,"default","","",35,[[],["fieldelement",3]]],[11,"default","","",36,[[],["scalar",3]]],[11,"default","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"cmp","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",26,[[],["ordering",4]]],[11,"cmp","","",27,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",28,[[],["ordering",4]]],[11,"cmp","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",32,[[],["ordering",4]]],[11,"cmp","","",33,[[["scalar",3]],["ordering",4]]],[11,"cmp","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",35,[[],["ordering",4]]],[11,"cmp","","",36,[[["scalar",3]],["ordering",4]]],[11,"eq","unsafe_hacspec_examples::blake2::blake2b","",17,[[]]],[11,"eq","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]]]],[11,"eq","","",26,[[]]],[11,"eq","","",27,[[["scalarcanvas",3]]]],[11,"eq","","",28,[[]]],[11,"eq","unsafe_hacspec_examples::ec::arithmetic","",29,[[["jacobian",3]]]],[11,"ne","","",29,[[["jacobian",3]]]],[11,"eq","","",30,[[["affine",3]]]],[11,"ne","","",30,[[["affine",3]]]],[11,"eq","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]]]],[11,"eq","","",32,[[]]],[11,"eq","","",33,[[["scalar",3]]]],[11,"eq","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]]]],[11,"eq","","",35,[[]]],[11,"eq","","",36,[[["scalar",3]]]],[11,"partial_cmp","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",28,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["scalar",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",35,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",36,[[["scalar",3]],[["option",4],["ordering",4]]]],[11,"fmt","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::blake2::blake2b","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::arithmetic","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::sha2","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"div","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",28,[[["scalar",3]],["scalar",3]]],[11,"div","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",33,[[["scalar",3]],["scalar",3]]],[11,"div","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",36,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"rem","","",1,[[["word",3]],["word",3]]],[11,"rem","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"rem","","",3,[[["nonce",3]],["nonce",3]]],[11,"rem","","",4,[[["sbox",3]],["sbox",3]]],[11,"rem","","",5,[[["rcon",3]],["rcon",3]]],[11,"rem","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"rem","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"rem","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"rem","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"rem","","",10,[[["key128",3]],["key128",3]]],[11,"rem","","",11,[[["key256",3]],["key256",3]]],[11,"rem","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"rem","","",14,[[["key",3]],["key",3]]],[11,"rem","","",15,[[["tag",3]],["tag",3]]],[11,"rem","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"rem","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",28,[[["scalar",3]],["scalar",3]]],[11,"rem","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"rem","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"rem","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",33,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",36,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"rem","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"rem","","",42,[[["digest",3]],["digest",3]]],[11,"rem","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"rem","","",44,[[["hash",3]],["hash",3]]],[11,"sub","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"sub","","",1,[[["word",3]],["word",3]]],[11,"sub","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"sub","","",3,[[["nonce",3]],["nonce",3]]],[11,"sub","","",4,[[["sbox",3]],["sbox",3]]],[11,"sub","","",5,[[["rcon",3]],["rcon",3]]],[11,"sub","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"sub","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"sub","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"sub","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"sub","","",10,[[["key128",3]],["key128",3]]],[11,"sub","","",11,[[["key256",3]],["key256",3]]],[11,"sub","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"sub","","",14,[[["key",3]],["key",3]]],[11,"sub","","",15,[[["tag",3]],["tag",3]]],[11,"sub","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"sub","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",28,[[["scalar",3]],["scalar",3]]],[11,"sub","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"sub","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"sub","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",33,[[["scalar",3]],["scalar",3]]],[11,"sub","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",36,[[["scalar",3]],["scalar",3]]],[11,"sub","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"sub","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"sub","","",42,[[["digest",3]],["digest",3]]],[11,"sub","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"sub","","",44,[[["hash",3]],["hash",3]]],[11,"add","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"add","","",1,[[["word",3]],["word",3]]],[11,"add","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"add","","",3,[[["nonce",3]],["nonce",3]]],[11,"add","","",4,[[["sbox",3]],["sbox",3]]],[11,"add","","",5,[[["rcon",3]],["rcon",3]]],[11,"add","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"add","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"add","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"add","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"add","","",10,[[["key128",3]],["key128",3]]],[11,"add","","",11,[[["key256",3]],["key256",3]]],[11,"add","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"add","","",14,[[["key",3]],["key",3]]],[11,"add","","",15,[[["tag",3]],["tag",3]]],[11,"add","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"add","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",28,[[["scalar",3]],["scalar",3]]],[11,"add","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"add","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"add","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",33,[[["scalar",3]],["scalar",3]]],[11,"add","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",36,[[["scalar",3]],["scalar",3]]],[11,"add","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"add","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"add","","",42,[[["digest",3]],["digest",3]]],[11,"add","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"add","","",44,[[["hash",3]],["hash",3]]],[11,"mul","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"mul","","",1,[[["word",3]],["word",3]]],[11,"mul","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"mul","","",3,[[["nonce",3]],["nonce",3]]],[11,"mul","","",4,[[["sbox",3]],["sbox",3]]],[11,"mul","","",5,[[["rcon",3]],["rcon",3]]],[11,"mul","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"mul","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"mul","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"mul","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"mul","","",10,[[["key128",3]],["key128",3]]],[11,"mul","","",11,[[["key256",3]],["key256",3]]],[11,"mul","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"mul","","",14,[[["key",3]],["key",3]]],[11,"mul","","",15,[[["tag",3]],["tag",3]]],[11,"mul","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"mul","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",28,[[["scalar",3]],["scalar",3]]],[11,"mul","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"mul","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"mul","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",33,[[["scalar",3]],["scalar",3]]],[11,"mul","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",36,[[["scalar",3]],["scalar",3]]],[11,"mul","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"mul","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"mul","","",42,[[["digest",3]],["digest",3]]],[11,"mul","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"mul","","",44,[[["hash",3]],["hash",3]]],[11,"not","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"not","","",9,[[]]],[11,"not","","",10,[[]]],[11,"not","","",11,[[]]],[11,"not","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"not","","",14,[[]]],[11,"not","","",15,[[]]],[11,"not","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"not","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"not","","",26,[[]]],[11,"not","","",27,[[]]],[11,"not","","",28,[[]]],[11,"not","","",23,[[]]],[11,"not","","",24,[[]]],[11,"not","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"not","","",32,[[]]],[11,"not","","",33,[[]]],[11,"not","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"not","","",35,[[]]],[11,"not","","",36,[[]]],[11,"not","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"not","","",41,[[]]],[11,"not","","",42,[[]]],[11,"not","","",43,[[]]],[11,"not","","",44,[[]]],[11,"bitand","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[]]],[11,"bitand","","",9,[[]]],[11,"bitand","","",10,[[]]],[11,"bitand","","",11,[[]]],[11,"bitand","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitand","","",14,[[]]],[11,"bitand","","",15,[[]]],[11,"bitand","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitand","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitand","","",26,[[]]],[11,"bitand","","",27,[[]]],[11,"bitand","","",28,[[]]],[11,"bitand","","",23,[[]]],[11,"bitand","","",24,[[]]],[11,"bitand","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitand","","",32,[[]]],[11,"bitand","","",33,[[]]],[11,"bitand","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitand","","",35,[[]]],[11,"bitand","","",36,[[]]],[11,"bitand","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitand","","",41,[[]]],[11,"bitand","","",42,[[]]],[11,"bitand","","",43,[[]]],[11,"bitand","","",44,[[]]],[11,"bitor","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitor","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitor","","",9,[[]]],[11,"bitor","","",10,[[]]],[11,"bitor","","",11,[[]]],[11,"bitor","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitor","","",14,[[]]],[11,"bitor","","",15,[[]]],[11,"bitor","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitor","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitor","","",26,[[]]],[11,"bitor","","",27,[[]]],[11,"bitor","","",28,[[]]],[11,"bitor","","",23,[[]]],[11,"bitor","","",24,[[]]],[11,"bitor","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitor","","",32,[[]]],[11,"bitor","","",33,[[]]],[11,"bitor","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitor","","",35,[[]]],[11,"bitor","","",36,[[]]],[11,"bitor","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitor","","",41,[[]]],[11,"bitor","","",42,[[]]],[11,"bitor","","",43,[[]]],[11,"bitor","","",44,[[]]],[11,"bitxor","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"bitxor","","",7,[[]]],[11,"bitxor","","",8,[[]]],[11,"bitxor","","",9,[[]]],[11,"bitxor","","",10,[[]]],[11,"bitxor","","",11,[[]]],[11,"bitxor","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitxor","","",14,[[]]],[11,"bitxor","","",15,[[]]],[11,"bitxor","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitxor","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitxor","","",26,[[]]],[11,"bitxor","","",27,[[]]],[11,"bitxor","","",28,[[]]],[11,"bitxor","","",23,[[]]],[11,"bitxor","","",24,[[]]],[11,"bitxor","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitxor","","",32,[[]]],[11,"bitxor","","",33,[[]]],[11,"bitxor","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitxor","","",35,[[]]],[11,"bitxor","","",36,[[]]],[11,"bitxor","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitxor","","",41,[[]]],[11,"bitxor","","",42,[[]]],[11,"bitxor","","",43,[[]]],[11,"bitxor","","",44,[[]]],[11,"shl","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shl","","",7,[[]]],[11,"shl","","",8,[[]]],[11,"shl","","",9,[[]]],[11,"shl","","",10,[[]]],[11,"shl","","",11,[[]]],[11,"shl","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"shl","","",14,[[]]],[11,"shl","","",15,[[]]],[11,"shl","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"shl","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"shl","","",26,[[]]],[11,"shl","","",27,[[]]],[11,"shl","","",28,[[]]],[11,"shl","","",23,[[]]],[11,"shl","","",24,[[]]],[11,"shl","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"shl","","",32,[[]]],[11,"shl","","",33,[[]]],[11,"shl","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"shl","","",35,[[]]],[11,"shl","","",36,[[]]],[11,"shl","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"shl","","",41,[[]]],[11,"shl","","",42,[[]]],[11,"shl","","",43,[[]]],[11,"shl","","",44,[[]]],[11,"shr","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"shr","","",7,[[]]],[11,"shr","","",8,[[]]],[11,"shr","","",9,[[]]],[11,"shr","","",10,[[]]],[11,"shr","","",11,[[]]],[11,"shr","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"shr","","",14,[[]]],[11,"shr","","",15,[[]]],[11,"shr","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"shr","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"shr","","",26,[[]]],[11,"shr","","",27,[[]]],[11,"shr","","",28,[[]]],[11,"shr","","",23,[[]]],[11,"shr","","",24,[[]]],[11,"shr","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"shr","","",32,[[]]],[11,"shr","","",33,[[]]],[11,"shr","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"shr","","",35,[[]]],[11,"shr","","",36,[[]]],[11,"shr","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"shr","","",41,[[]]],[11,"shr","","",42,[[]]],[11,"shr","","",43,[[]]],[11,"shr","","",44,[[]]],[11,"index","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[["rangefull",3]]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[["rangefull",3]]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[["rangefull",3]]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[["rangefull",3]]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[["rangefull",3]]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[["rangefull",3]]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[["rangefull",3]]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[["rangefull",3]]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[["rangefull",3]]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[["rangefull",3]]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::curve25519","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[["rangefull",3]]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::sha2","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[["rangefull",3]]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[["rangefull",3]]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[["rangefull",3]]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[["rangefull",3]]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[["rangefull",3]]]],[11,"index_mut","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","unsafe_hacspec_examples::curve25519","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::sha2","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"create","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"create","","",6,[[]]],[11,"len","","",6,[[]]],[11,"iter","","",6,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",6,[[]]],[11,"update","","",6,[[]]],[11,"update_start","","",6,[[]]],[11,"create","","",7,[[]]],[11,"len","","",7,[[]]],[11,"iter","","",7,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",7,[[]]],[11,"update","","",7,[[]]],[11,"update_start","","",7,[[]]],[11,"create","","",8,[[]]],[11,"len","","",8,[[]]],[11,"iter","","",8,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",8,[[]]],[11,"update","","",8,[[]]],[11,"update_start","","",8,[[]]],[11,"create","","",9,[[]]],[11,"len","","",9,[[]]],[11,"iter","","",9,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",9,[[]]],[11,"update","","",9,[[]]],[11,"update_start","","",9,[[]]],[11,"create","","",10,[[]]],[11,"len","","",10,[[]]],[11,"iter","","",10,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",10,[[]]],[11,"update","","",10,[[]]],[11,"update_start","","",10,[[]]],[11,"create","","",11,[[]]],[11,"len","","",11,[[]]],[11,"iter","","",11,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",11,[[]]],[11,"update","","",11,[[]]],[11,"update_start","","",11,[[]]],[11,"create","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"len","","",13,[[]]],[11,"iter","","",13,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",13,[[]]],[11,"update","","",13,[[]]],[11,"update_start","","",13,[[]]],[11,"create","","",14,[[]]],[11,"len","","",14,[[]]],[11,"iter","","",14,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",14,[[]]],[11,"update","","",14,[[]]],[11,"update_start","","",14,[[]]],[11,"create","","",15,[[]]],[11,"len","","",15,[[]]],[11,"iter","","",15,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",15,[[]]],[11,"update","","",15,[[]]],[11,"update_start","","",15,[[]]],[11,"create","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"len","","",16,[[]]],[11,"iter","","",16,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",16,[[]]],[11,"update","","",16,[[]]],[11,"update_start","","",16,[[]]],[11,"create","","",17,[[]]],[11,"len","","",17,[[]]],[11,"iter","","",17,[[],["iter",3]]],[11,"update_slice","","",17,[[]]],[11,"update","","",17,[[]]],[11,"update_start","","",17,[[]]],[11,"create","","",18,[[]]],[11,"len","","",18,[[]]],[11,"iter","","",18,[[],["iter",3]]],[11,"update_slice","","",18,[[]]],[11,"update","","",18,[[]]],[11,"update_start","","",18,[[]]],[11,"create","","",19,[[]]],[11,"len","","",19,[[]]],[11,"iter","","",19,[[],["iter",3]]],[11,"update_slice","","",19,[[]]],[11,"update","","",19,[[]]],[11,"update_start","","",19,[[]]],[11,"create","","",20,[[]]],[11,"len","","",20,[[]]],[11,"iter","","",20,[[],["iter",3]]],[11,"update_slice","","",20,[[]]],[11,"update","","",20,[[]]],[11,"update_start","","",20,[[]]],[11,"create","unsafe_hacspec_examples::curve25519","",23,[[]]],[11,"len","","",23,[[]]],[11,"iter","","",23,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",23,[[]]],[11,"update","","",23,[[]]],[11,"update_start","","",23,[[]]],[11,"create","","",24,[[]]],[11,"len","","",24,[[]]],[11,"iter","","",24,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",24,[[]]],[11,"update","","",24,[[]]],[11,"update_start","","",24,[[]]],[11,"create","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"len","","",40,[[]]],[11,"iter","","",40,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",40,[[]]],[11,"update","","",40,[[]]],[11,"update_start","","",40,[[]]],[11,"create","","",41,[[]]],[11,"len","","",41,[[]]],[11,"iter","","",41,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",41,[[]]],[11,"update","","",41,[[]]],[11,"update_start","","",41,[[]]],[11,"create","","",42,[[]]],[11,"len","","",42,[[]]],[11,"iter","","",42,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",42,[[]]],[11,"update","","",42,[[]]],[11,"update_start","","",42,[[]]],[11,"create","","",43,[[]]],[11,"len","","",43,[[]]],[11,"iter","","",43,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",43,[[]]],[11,"update","","",43,[[]]],[11,"update_start","","",43,[[]]],[11,"create","","",44,[[]]],[11,"len","","",44,[[]]],[11,"iter","","",44,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",44,[[]]],[11,"update","","",44,[[]]],[11,"update_start","","",44,[[]]],[11,"ZERO","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"ONE","","",25,[[]]],[11,"TWO","","",25,[[]]],[11,"from_literal","","",25,[[]]],[11,"from_hex_string","","",25,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",25,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",25,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",25,[[]]],[11,"rotate_left","","",25,[[]]],[11,"rotate_right","","",25,[[]]],[11,"ZERO","","",26,[[]]],[11,"ONE","","",26,[[]]],[11,"TWO","","",26,[[]]],[11,"from_literal","","",26,[[]]],[11,"from_hex_string","","",26,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",26,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",26,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",26,[[]]],[11,"rotate_left","","",26,[[]]],[11,"rotate_right","","",26,[[]]],[11,"ZERO","","",27,[[]]],[11,"ONE","","",27,[[]]],[11,"TWO","","",27,[[]]],[11,"from_literal","","",27,[[]]],[11,"from_hex_string","","",27,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",27,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",27,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",27,[[]]],[11,"rotate_left","","",27,[[]]],[11,"rotate_right","","",27,[[]]],[11,"ZERO","","",28,[[]]],[11,"ONE","","",28,[[]]],[11,"TWO","","",28,[[]]],[11,"from_literal","","",28,[[]]],[11,"from_hex_string","","",28,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",28,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",28,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",28,[[]]],[11,"rotate_left","","",28,[[]]],[11,"rotate_right","","",28,[[]]],[11,"ZERO","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"ONE","","",31,[[]]],[11,"TWO","","",31,[[]]],[11,"from_literal","","",31,[[]]],[11,"from_hex_string","","",31,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",31,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",31,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",31,[[]]],[11,"rotate_left","","",31,[[]]],[11,"rotate_right","","",31,[[]]],[11,"ZERO","","",32,[[]]],[11,"ONE","","",32,[[]]],[11,"TWO","","",32,[[]]],[11,"from_literal","","",32,[[]]],[11,"from_hex_string","","",32,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",32,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",32,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",32,[[]]],[11,"rotate_left","","",32,[[]]],[11,"rotate_right","","",32,[[]]],[11,"ZERO","","",33,[[]]],[11,"ONE","","",33,[[]]],[11,"TWO","","",33,[[]]],[11,"from_literal","","",33,[[]]],[11,"from_hex_string","","",33,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",33,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",33,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",33,[[]]],[11,"rotate_left","","",33,[[]]],[11,"rotate_right","","",33,[[]]],[11,"ZERO","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"ONE","","",34,[[]]],[11,"TWO","","",34,[[]]],[11,"from_literal","","",34,[[]]],[11,"from_hex_string","","",34,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",34,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",34,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",34,[[]]],[11,"rotate_left","","",34,[[]]],[11,"rotate_right","","",34,[[]]],[11,"ZERO","","",35,[[]]],[11,"ONE","","",35,[[]]],[11,"TWO","","",35,[[]]],[11,"from_literal","","",35,[[]]],[11,"from_hex_string","","",35,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",35,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",35,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",35,[[]]],[11,"rotate_left","","",35,[[]]],[11,"rotate_right","","",35,[[]]],[11,"ZERO","","",36,[[]]],[11,"ONE","","",36,[[]]],[11,"TWO","","",36,[[]]],[11,"from_literal","","",36,[[]]],[11,"from_hex_string","","",36,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",36,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",36,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",36,[[]]],[11,"rotate_left","","",36,[[]]],[11,"rotate_right","","",36,[[]]],[11,"sub_mod","unsafe_hacspec_examples::aes_gcm::aes","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",6,[[]]],[11,"add_mod","","`(self + rhs) % n`",6,[[]]],[11,"mul_mod","","`(self * rhs) % n`",6,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",6,[[]]],[11,"modulo","","`self % n`",6,[[]]],[11,"signed_modulo","","",6,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",6,[[]]],[11,"sub_mod","","(self - rhs) % n.",7,[[]]],[11,"add_mod","","`(self + rhs) % n`",7,[[]]],[11,"mul_mod","","`(self * rhs) % n`",7,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",7,[[]]],[11,"modulo","","`self % n`",7,[[]]],[11,"signed_modulo","","",7,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",7,[[]]],[11,"sub_mod","","(self - rhs) % n.",8,[[]]],[11,"add_mod","","`(self + rhs) % n`",8,[[]]],[11,"mul_mod","","`(self * rhs) % n`",8,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",8,[[]]],[11,"modulo","","`self % n`",8,[[]]],[11,"signed_modulo","","",8,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",8,[[]]],[11,"sub_mod","","(self - rhs) % n.",9,[[]]],[11,"add_mod","","`(self + rhs) % n`",9,[[]]],[11,"mul_mod","","`(self * rhs) % n`",9,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",9,[[]]],[11,"modulo","","`self % n`",9,[[]]],[11,"signed_modulo","","",9,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",9,[[]]],[11,"sub_mod","","(self - rhs) % n.",10,[[]]],[11,"add_mod","","`(self + rhs) % n`",10,[[]]],[11,"mul_mod","","`(self * rhs) % n`",10,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",10,[[]]],[11,"modulo","","`self % n`",10,[[]]],[11,"signed_modulo","","",10,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",10,[[]]],[11,"sub_mod","","(self - rhs) % n.",11,[[]]],[11,"add_mod","","`(self + rhs) % n`",11,[[]]],[11,"mul_mod","","`(self * rhs) % n`",11,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",11,[[]]],[11,"modulo","","`self % n`",11,[[]]],[11,"signed_modulo","","",11,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",11,[[]]],[11,"sub_mod","unsafe_hacspec_examples::aes_gcm::gf128","(self - rhs) % n.",13,[[]]],[11,"add_mod","","`(self + rhs) % n`",13,[[]]],[11,"mul_mod","","`(self * rhs) % n`",13,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",13,[[]]],[11,"modulo","","`self % n`",13,[[]]],[11,"signed_modulo","","",13,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",13,[[]]],[11,"sub_mod","","(self - rhs) % n.",14,[[]]],[11,"add_mod","","`(self + rhs) % n`",14,[[]]],[11,"mul_mod","","`(self * rhs) % n`",14,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",14,[[]]],[11,"modulo","","`self % n`",14,[[]]],[11,"signed_modulo","","",14,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",14,[[]]],[11,"sub_mod","","(self - rhs) % n.",15,[[]]],[11,"add_mod","","`(self + rhs) % n`",15,[[]]],[11,"mul_mod","","`(self * rhs) % n`",15,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",15,[[]]],[11,"modulo","","`self % n`",15,[[]]],[11,"signed_modulo","","",15,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",15,[[]]],[11,"sub_mod","unsafe_hacspec_examples::blake2::blake2b","(self - rhs) % n.",16,[[]]],[11,"add_mod","","`(self + rhs) % n`",16,[[]]],[11,"mul_mod","","`(self * rhs) % n`",16,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",16,[[]]],[11,"modulo","","`self % n`",16,[[]]],[11,"signed_modulo","","",16,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",16,[[]]],[11,"sub_mod","unsafe_hacspec_examples::curve25519","(self - rhs) % n.",25,[[]]],[11,"add_mod","","`(self + rhs) % n`",25,[[]]],[11,"mul_mod","","`(self * rhs) % n`",25,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",25,[[]]],[11,"modulo","","`self % n`",25,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",25,[[]]],[11,"absolute","","`|self|`",25,[[]]],[11,"sub_mod","","(self - rhs) % n.",26,[[]]],[11,"add_mod","","`(self + rhs) % n`",26,[[]]],[11,"mul_mod","","`(self * rhs) % n`",26,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",26,[[]]],[11,"modulo","","`self % n`",26,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",26,[[]]],[11,"absolute","","`|self|`",26,[[]]],[11,"sub_mod","","(self - rhs) % n.",27,[[]]],[11,"add_mod","","`(self + rhs) % n`",27,[[]]],[11,"mul_mod","","`(self * rhs) % n`",27,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",27,[[]]],[11,"modulo","","`self % n`",27,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",27,[[]]],[11,"absolute","","`|self|`",27,[[]]],[11,"sub_mod","","(self - rhs) % n.",28,[[]]],[11,"add_mod","","`(self + rhs) % n`",28,[[]]],[11,"mul_mod","","`(self * rhs) % n`",28,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",28,[[]]],[11,"modulo","","`self % n`",28,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",28,[[]]],[11,"absolute","","`|self|`",28,[[]]],[11,"sub_mod","","(self - rhs) % n.",23,[[]]],[11,"add_mod","","`(self + rhs) % n`",23,[[]]],[11,"mul_mod","","`(self * rhs) % n`",23,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",23,[[]]],[11,"modulo","","`self % n`",23,[[]]],[11,"signed_modulo","","",23,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",23,[[]]],[11,"sub_mod","","(self - rhs) % n.",24,[[]]],[11,"add_mod","","`(self + rhs) % n`",24,[[]]],[11,"mul_mod","","`(self * rhs) % n`",24,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",24,[[]]],[11,"modulo","","`self % n`",24,[[]]],[11,"signed_modulo","","",24,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",24,[[]]],[11,"sub_mod","unsafe_hacspec_examples::ec::p256","(self - rhs) % n.",31,[[]]],[11,"add_mod","","`(self + rhs) % n`",31,[[]]],[11,"mul_mod","","`(self * rhs) % n`",31,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",31,[[]]],[11,"modulo","","`self % n`",31,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",31,[[]]],[11,"absolute","","`|self|`",31,[[]]],[11,"sub_mod","","(self - rhs) % n.",32,[[]]],[11,"add_mod","","`(self + rhs) % n`",32,[[]]],[11,"mul_mod","","`(self * rhs) % n`",32,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",32,[[]]],[11,"modulo","","`self % n`",32,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",32,[[]]],[11,"absolute","","`|self|`",32,[[]]],[11,"sub_mod","","(self - rhs) % n.",33,[[]]],[11,"add_mod","","`(self + rhs) % n`",33,[[]]],[11,"mul_mod","","`(self * rhs) % n`",33,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",33,[[]]],[11,"modulo","","`self % n`",33,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",33,[[]]],[11,"absolute","","`|self|`",33,[[]]],[11,"sub_mod","unsafe_hacspec_examples::ec::p384","(self - rhs) % n.",34,[[]]],[11,"add_mod","","`(self + rhs) % n`",34,[[]]],[11,"mul_mod","","`(self * rhs) % n`",34,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",34,[[]]],[11,"modulo","","`self % n`",34,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",34,[[]]],[11,"absolute","","`|self|`",34,[[]]],[11,"sub_mod","","(self - rhs) % n.",35,[[]]],[11,"add_mod","","`(self + rhs) % n`",35,[[]]],[11,"mul_mod","","`(self * rhs) % n`",35,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",35,[[]]],[11,"modulo","","`self % n`",35,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",35,[[]]],[11,"absolute","","`|self|`",35,[[]]],[11,"sub_mod","","(self - rhs) % n.",36,[[]]],[11,"add_mod","","`(self + rhs) % n`",36,[[]]],[11,"mul_mod","","`(self * rhs) % n`",36,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",36,[[]]],[11,"modulo","","`self % n`",36,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",36,[[]]],[11,"absolute","","`|self|`",36,[[]]],[11,"sub_mod","unsafe_hacspec_examples::sha2","(self - rhs) % n.",40,[[]]],[11,"add_mod","","`(self + rhs) % n`",40,[[]]],[11,"mul_mod","","`(self * rhs) % n`",40,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",40,[[]]],[11,"modulo","","`self % n`",40,[[]]],[11,"signed_modulo","","",40,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",40,[[]]],[11,"sub_mod","","(self - rhs) % n.",41,[[]]],[11,"add_mod","","`(self + rhs) % n`",41,[[]]],[11,"mul_mod","","`(self * rhs) % n`",41,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",41,[[]]],[11,"modulo","","`self % n`",41,[[]]],[11,"signed_modulo","","",41,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",41,[[]]],[11,"sub_mod","","(self - rhs) % n.",42,[[]]],[11,"add_mod","","`(self + rhs) % n`",42,[[]]],[11,"mul_mod","","`(self * rhs) % n`",42,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",42,[[]]],[11,"modulo","","`self % n`",42,[[]]],[11,"signed_modulo","","",42,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",42,[[]]],[11,"sub_mod","","(self - rhs) % n.",43,[[]]],[11,"add_mod","","`(self + rhs) % n`",43,[[]]],[11,"mul_mod","","`(self * rhs) % n`",43,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",43,[[]]],[11,"modulo","","`self % n`",43,[[]]],[11,"signed_modulo","","",43,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",43,[[]]],[11,"sub_mod","","(self - rhs) % n.",44,[[]]],[11,"add_mod","","`(self + rhs) % n`",44,[[]]],[11,"mul_mod","","`(self * rhs) % n`",44,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",44,[[]]],[11,"modulo","","`self % n`",44,[[]]],[11,"signed_modulo","","",44,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",44,[[]]],[11,"max_val","unsafe_hacspec_examples::aes_gcm::aes","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",6,[[]]],[11,"wrap_add","","",6,[[]]],[11,"wrap_sub","","",6,[[]]],[11,"wrap_mul","","",6,[[]]],[11,"wrap_div","","",6,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",6,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",6,[[]]],[11,"divide","","Division.",6,[[]]],[11,"inv","","Invert self modulo n.",6,[[]]],[11,"equal","","",6,[[]]],[11,"greater_than","","",6,[[]]],[11,"greater_than_or_qual","","",6,[[]]],[11,"less_than","","",6,[[]]],[11,"less_than_or_equal","","",6,[[]]],[11,"not_equal_bm","","",6,[[]]],[11,"equal_bm","","",6,[[]]],[11,"greater_than_bm","","",6,[[]]],[11,"greater_than_or_equal_bm","","",6,[[]]],[11,"less_than_bm","","",6,[[]]],[11,"less_than_or_equal_bm","","",6,[[]]],[11,"max_val","","Return largest value that can be represented.",7,[[]]],[11,"wrap_add","","",7,[[]]],[11,"wrap_sub","","",7,[[]]],[11,"wrap_mul","","",7,[[]]],[11,"wrap_div","","",7,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",7,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",7,[[]]],[11,"divide","","Division.",7,[[]]],[11,"inv","","Invert self modulo n.",7,[[]]],[11,"equal","","",7,[[]]],[11,"greater_than","","",7,[[]]],[11,"greater_than_or_qual","","",7,[[]]],[11,"less_than","","",7,[[]]],[11,"less_than_or_equal","","",7,[[]]],[11,"not_equal_bm","","",7,[[]]],[11,"equal_bm","","",7,[[]]],[11,"greater_than_bm","","",7,[[]]],[11,"greater_than_or_equal_bm","","",7,[[]]],[11,"less_than_bm","","",7,[[]]],[11,"less_than_or_equal_bm","","",7,[[]]],[11,"max_val","","Return largest value that can be represented.",8,[[]]],[11,"wrap_add","","",8,[[]]],[11,"wrap_sub","","",8,[[]]],[11,"wrap_mul","","",8,[[]]],[11,"wrap_div","","",8,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",8,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",8,[[]]],[11,"divide","","Division.",8,[[]]],[11,"inv","","Invert self modulo n.",8,[[]]],[11,"equal","","",8,[[]]],[11,"greater_than","","",8,[[]]],[11,"greater_than_or_qual","","",8,[[]]],[11,"less_than","","",8,[[]]],[11,"less_than_or_equal","","",8,[[]]],[11,"not_equal_bm","","",8,[[]]],[11,"equal_bm","","",8,[[]]],[11,"greater_than_bm","","",8,[[]]],[11,"greater_than_or_equal_bm","","",8,[[]]],[11,"less_than_bm","","",8,[[]]],[11,"less_than_or_equal_bm","","",8,[[]]],[11,"max_val","","Return largest value that can be represented.",9,[[]]],[11,"wrap_add","","",9,[[]]],[11,"wrap_sub","","",9,[[]]],[11,"wrap_mul","","",9,[[]]],[11,"wrap_div","","",9,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",9,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",9,[[]]],[11,"divide","","Division.",9,[[]]],[11,"inv","","Invert self modulo n.",9,[[]]],[11,"equal","","",9,[[]]],[11,"greater_than","","",9,[[]]],[11,"greater_than_or_qual","","",9,[[]]],[11,"less_than","","",9,[[]]],[11,"less_than_or_equal","","",9,[[]]],[11,"not_equal_bm","","",9,[[]]],[11,"equal_bm","","",9,[[]]],[11,"greater_than_bm","","",9,[[]]],[11,"greater_than_or_equal_bm","","",9,[[]]],[11,"less_than_bm","","",9,[[]]],[11,"less_than_or_equal_bm","","",9,[[]]],[11,"max_val","","Return largest value that can be represented.",10,[[]]],[11,"wrap_add","","",10,[[]]],[11,"wrap_sub","","",10,[[]]],[11,"wrap_mul","","",10,[[]]],[11,"wrap_div","","",10,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",10,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",10,[[]]],[11,"divide","","Division.",10,[[]]],[11,"inv","","Invert self modulo n.",10,[[]]],[11,"equal","","",10,[[]]],[11,"greater_than","","",10,[[]]],[11,"greater_than_or_qual","","",10,[[]]],[11,"less_than","","",10,[[]]],[11,"less_than_or_equal","","",10,[[]]],[11,"not_equal_bm","","",10,[[]]],[11,"equal_bm","","",10,[[]]],[11,"greater_than_bm","","",10,[[]]],[11,"greater_than_or_equal_bm","","",10,[[]]],[11,"less_than_bm","","",10,[[]]],[11,"less_than_or_equal_bm","","",10,[[]]],[11,"max_val","","Return largest value that can be represented.",11,[[]]],[11,"wrap_add","","",11,[[]]],[11,"wrap_sub","","",11,[[]]],[11,"wrap_mul","","",11,[[]]],[11,"wrap_div","","",11,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",11,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",11,[[]]],[11,"divide","","Division.",11,[[]]],[11,"inv","","Invert self modulo n.",11,[[]]],[11,"equal","","",11,[[]]],[11,"greater_than","","",11,[[]]],[11,"greater_than_or_qual","","",11,[[]]],[11,"less_than","","",11,[[]]],[11,"less_than_or_equal","","",11,[[]]],[11,"not_equal_bm","","",11,[[]]],[11,"equal_bm","","",11,[[]]],[11,"greater_than_bm","","",11,[[]]],[11,"greater_than_or_equal_bm","","",11,[[]]],[11,"less_than_bm","","",11,[[]]],[11,"less_than_or_equal_bm","","",11,[[]]],[11,"max_val","unsafe_hacspec_examples::aes_gcm::gf128","Return largest value that can be represented.",13,[[]]],[11,"wrap_add","","",13,[[]]],[11,"wrap_sub","","",13,[[]]],[11,"wrap_mul","","",13,[[]]],[11,"wrap_div","","",13,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",13,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",13,[[]]],[11,"divide","","Division.",13,[[]]],[11,"inv","","Invert self modulo n.",13,[[]]],[11,"equal","","",13,[[]]],[11,"greater_than","","",13,[[]]],[11,"greater_than_or_qual","","",13,[[]]],[11,"less_than","","",13,[[]]],[11,"less_than_or_equal","","",13,[[]]],[11,"not_equal_bm","","",13,[[]]],[11,"equal_bm","","",13,[[]]],[11,"greater_than_bm","","",13,[[]]],[11,"greater_than_or_equal_bm","","",13,[[]]],[11,"less_than_bm","","",13,[[]]],[11,"less_than_or_equal_bm","","",13,[[]]],[11,"max_val","","Return largest value that can be represented.",14,[[]]],[11,"wrap_add","","",14,[[]]],[11,"wrap_sub","","",14,[[]]],[11,"wrap_mul","","",14,[[]]],[11,"wrap_div","","",14,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",14,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",14,[[]]],[11,"divide","","Division.",14,[[]]],[11,"inv","","Invert self modulo n.",14,[[]]],[11,"equal","","",14,[[]]],[11,"greater_than","","",14,[[]]],[11,"greater_than_or_qual","","",14,[[]]],[11,"less_than","","",14,[[]]],[11,"less_than_or_equal","","",14,[[]]],[11,"not_equal_bm","","",14,[[]]],[11,"equal_bm","","",14,[[]]],[11,"greater_than_bm","","",14,[[]]],[11,"greater_than_or_equal_bm","","",14,[[]]],[11,"less_than_bm","","",14,[[]]],[11,"less_than_or_equal_bm","","",14,[[]]],[11,"max_val","","Return largest value that can be represented.",15,[[]]],[11,"wrap_add","","",15,[[]]],[11,"wrap_sub","","",15,[[]]],[11,"wrap_mul","","",15,[[]]],[11,"wrap_div","","",15,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",15,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",15,[[]]],[11,"divide","","Division.",15,[[]]],[11,"inv","","Invert self modulo n.",15,[[]]],[11,"equal","","",15,[[]]],[11,"greater_than","","",15,[[]]],[11,"greater_than_or_qual","","",15,[[]]],[11,"less_than","","",15,[[]]],[11,"less_than_or_equal","","",15,[[]]],[11,"not_equal_bm","","",15,[[]]],[11,"equal_bm","","",15,[[]]],[11,"greater_than_bm","","",15,[[]]],[11,"greater_than_or_equal_bm","","",15,[[]]],[11,"less_than_bm","","",15,[[]]],[11,"less_than_or_equal_bm","","",15,[[]]],[11,"max_val","unsafe_hacspec_examples::blake2::blake2b","Return largest value that can be represented.",16,[[]]],[11,"wrap_add","","",16,[[]]],[11,"wrap_sub","","",16,[[]]],[11,"wrap_mul","","",16,[[]]],[11,"wrap_div","","",16,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",16,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",16,[[]]],[11,"divide","","Division.",16,[[]]],[11,"inv","","Invert self modulo n.",16,[[]]],[11,"equal","","",16,[[]]],[11,"greater_than","","",16,[[]]],[11,"greater_than_or_qual","","",16,[[]]],[11,"less_than","","",16,[[]]],[11,"less_than_or_equal","","",16,[[]]],[11,"not_equal_bm","","",16,[[]]],[11,"equal_bm","","",16,[[]]],[11,"greater_than_bm","","",16,[[]]],[11,"greater_than_or_equal_bm","","",16,[[]]],[11,"less_than_bm","","",16,[[]]],[11,"less_than_or_equal_bm","","",16,[[]]],[11,"max_val","unsafe_hacspec_examples::curve25519","Return largest value that can be represented.",25,[[]]],[11,"wrap_add","","",25,[[]]],[11,"wrap_sub","","",25,[[]]],[11,"wrap_mul","","",25,[[]]],[11,"wrap_div","","",25,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",25,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",25,[[]]],[11,"divide","","Division.",25,[[]]],[11,"inv","","Invert self modulo n.",25,[[]]],[11,"equal","","",25,[[]]],[11,"greater_than","","",25,[[]]],[11,"greater_than_or_qual","","",25,[[]]],[11,"less_than","","",25,[[]]],[11,"less_than_or_equal","","",25,[[]]],[11,"not_equal_bm","","",25,[[]]],[11,"equal_bm","","",25,[[]]],[11,"greater_than_bm","","",25,[[]]],[11,"greater_than_or_equal_bm","","",25,[[]]],[11,"less_than_bm","","",25,[[]]],[11,"less_than_or_equal_bm","","",25,[[]]],[11,"max_val","","Return largest value that can be represented.",26,[[]]],[11,"wrap_add","","",26,[[]]],[11,"wrap_sub","","",26,[[]]],[11,"wrap_mul","","",26,[[]]],[11,"wrap_div","","",26,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",26,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",26,[[]]],[11,"divide","","Division.",26,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",26,[[]]],[11,"equal","","",26,[[]]],[11,"greater_than","","",26,[[]]],[11,"greater_than_or_qual","","",26,[[]]],[11,"less_than","","",26,[[]]],[11,"less_than_or_equal","","",26,[[]]],[11,"not_equal_bm","","",26,[[]]],[11,"equal_bm","","",26,[[]]],[11,"greater_than_bm","","",26,[[]]],[11,"greater_than_or_equal_bm","","",26,[[]]],[11,"less_than_bm","","",26,[[]]],[11,"less_than_or_equal_bm","","",26,[[]]],[11,"max_val","","Return largest value that can be represented.",27,[[]]],[11,"wrap_add","","",27,[[]]],[11,"wrap_sub","","",27,[[]]],[11,"wrap_mul","","",27,[[]]],[11,"wrap_div","","",27,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",27,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",27,[[]]],[11,"divide","","Division.",27,[[]]],[11,"inv","","Invert self modulo n.",27,[[]]],[11,"equal","","",27,[[]]],[11,"greater_than","","",27,[[]]],[11,"greater_than_or_qual","","",27,[[]]],[11,"less_than","","",27,[[]]],[11,"less_than_or_equal","","",27,[[]]],[11,"not_equal_bm","","",27,[[]]],[11,"equal_bm","","",27,[[]]],[11,"greater_than_bm","","",27,[[]]],[11,"greater_than_or_equal_bm","","",27,[[]]],[11,"less_than_bm","","",27,[[]]],[11,"less_than_or_equal_bm","","",27,[[]]],[11,"max_val","","Return largest value that can be represented.",28,[[]]],[11,"wrap_add","","",28,[[]]],[11,"wrap_sub","","",28,[[]]],[11,"wrap_mul","","",28,[[]]],[11,"wrap_div","","",28,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",28,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",28,[[]]],[11,"divide","","Division.",28,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",28,[[]]],[11,"equal","","",28,[[]]],[11,"greater_than","","",28,[[]]],[11,"greater_than_or_qual","","",28,[[]]],[11,"less_than","","",28,[[]]],[11,"less_than_or_equal","","",28,[[]]],[11,"not_equal_bm","","",28,[[]]],[11,"equal_bm","","",28,[[]]],[11,"greater_than_bm","","",28,[[]]],[11,"greater_than_or_equal_bm","","",28,[[]]],[11,"less_than_bm","","",28,[[]]],[11,"less_than_or_equal_bm","","",28,[[]]],[11,"max_val","","Return largest value that can be represented.",23,[[]]],[11,"wrap_add","","",23,[[]]],[11,"wrap_sub","","",23,[[]]],[11,"wrap_mul","","",23,[[]]],[11,"wrap_div","","",23,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",23,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",23,[[]]],[11,"divide","","Division.",23,[[]]],[11,"inv","","Invert self modulo n.",23,[[]]],[11,"equal","","",23,[[]]],[11,"greater_than","","",23,[[]]],[11,"greater_than_or_qual","","",23,[[]]],[11,"less_than","","",23,[[]]],[11,"less_than_or_equal","","",23,[[]]],[11,"not_equal_bm","","",23,[[]]],[11,"equal_bm","","",23,[[]]],[11,"greater_than_bm","","",23,[[]]],[11,"greater_than_or_equal_bm","","",23,[[]]],[11,"less_than_bm","","",23,[[]]],[11,"less_than_or_equal_bm","","",23,[[]]],[11,"max_val","","Return largest value that can be represented.",24,[[]]],[11,"wrap_add","","",24,[[]]],[11,"wrap_sub","","",24,[[]]],[11,"wrap_mul","","",24,[[]]],[11,"wrap_div","","",24,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",24,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",24,[[]]],[11,"divide","","Division.",24,[[]]],[11,"inv","","Invert self modulo n.",24,[[]]],[11,"equal","","",24,[[]]],[11,"greater_than","","",24,[[]]],[11,"greater_than_or_qual","","",24,[[]]],[11,"less_than","","",24,[[]]],[11,"less_than_or_equal","","",24,[[]]],[11,"not_equal_bm","","",24,[[]]],[11,"equal_bm","","",24,[[]]],[11,"greater_than_bm","","",24,[[]]],[11,"greater_than_or_equal_bm","","",24,[[]]],[11,"less_than_bm","","",24,[[]]],[11,"less_than_or_equal_bm","","",24,[[]]],[11,"max_val","unsafe_hacspec_examples::ec::p256","Return largest value that can be represented.",31,[[]]],[11,"wrap_add","","",31,[[]]],[11,"wrap_sub","","",31,[[]]],[11,"wrap_mul","","",31,[[]]],[11,"wrap_div","","",31,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",31,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",31,[[]]],[11,"divide","","Division.",31,[[]]],[11,"inv","","Invert self modulo n.",31,[[]]],[11,"equal","","",31,[[]]],[11,"greater_than","","",31,[[]]],[11,"greater_than_or_qual","","",31,[[]]],[11,"less_than","","",31,[[]]],[11,"less_than_or_equal","","",31,[[]]],[11,"not_equal_bm","","",31,[[]]],[11,"equal_bm","","",31,[[]]],[11,"greater_than_bm","","",31,[[]]],[11,"greater_than_or_equal_bm","","",31,[[]]],[11,"less_than_bm","","",31,[[]]],[11,"less_than_or_equal_bm","","",31,[[]]],[11,"max_val","","Return largest value that can be represented.",32,[[]]],[11,"wrap_add","","",32,[[]]],[11,"wrap_sub","","",32,[[]]],[11,"wrap_mul","","",32,[[]]],[11,"wrap_div","","",32,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",32,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",32,[[]]],[11,"divide","","Division.",32,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",32,[[]]],[11,"equal","","",32,[[]]],[11,"greater_than","","",32,[[]]],[11,"greater_than_or_qual","","",32,[[]]],[11,"less_than","","",32,[[]]],[11,"less_than_or_equal","","",32,[[]]],[11,"not_equal_bm","","",32,[[]]],[11,"equal_bm","","",32,[[]]],[11,"greater_than_bm","","",32,[[]]],[11,"greater_than_or_equal_bm","","",32,[[]]],[11,"less_than_bm","","",32,[[]]],[11,"less_than_or_equal_bm","","",32,[[]]],[11,"max_val","","Return largest value that can be represented.",33,[[]]],[11,"wrap_add","","",33,[[]]],[11,"wrap_sub","","",33,[[]]],[11,"wrap_mul","","",33,[[]]],[11,"wrap_div","","",33,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",33,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",33,[[]]],[11,"divide","","Division.",33,[[]]],[11,"inv","","Invert self modulo n.",33,[[]]],[11,"equal","","",33,[[]]],[11,"greater_than","","",33,[[]]],[11,"greater_than_or_qual","","",33,[[]]],[11,"less_than","","",33,[[]]],[11,"less_than_or_equal","","",33,[[]]],[11,"not_equal_bm","","",33,[[]]],[11,"equal_bm","","",33,[[]]],[11,"greater_than_bm","","",33,[[]]],[11,"greater_than_or_equal_bm","","",33,[[]]],[11,"less_than_bm","","",33,[[]]],[11,"less_than_or_equal_bm","","",33,[[]]],[11,"max_val","unsafe_hacspec_examples::ec::p384","Return largest value that can be represented.",34,[[]]],[11,"wrap_add","","",34,[[]]],[11,"wrap_sub","","",34,[[]]],[11,"wrap_mul","","",34,[[]]],[11,"wrap_div","","",34,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",34,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",34,[[]]],[11,"divide","","Division.",34,[[]]],[11,"inv","","Invert self modulo n.",34,[[]]],[11,"equal","","",34,[[]]],[11,"greater_than","","",34,[[]]],[11,"greater_than_or_qual","","",34,[[]]],[11,"less_than","","",34,[[]]],[11,"less_than_or_equal","","",34,[[]]],[11,"not_equal_bm","","",34,[[]]],[11,"equal_bm","","",34,[[]]],[11,"greater_than_bm","","",34,[[]]],[11,"greater_than_or_equal_bm","","",34,[[]]],[11,"less_than_bm","","",34,[[]]],[11,"less_than_or_equal_bm","","",34,[[]]],[11,"max_val","","Return largest value that can be represented.",35,[[]]],[11,"wrap_add","","",35,[[]]],[11,"wrap_sub","","",35,[[]]],[11,"wrap_mul","","",35,[[]]],[11,"wrap_div","","",35,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",35,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",35,[[]]],[11,"divide","","Division.",35,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",35,[[]]],[11,"equal","","",35,[[]]],[11,"greater_than","","",35,[[]]],[11,"greater_than_or_qual","","",35,[[]]],[11,"less_than","","",35,[[]]],[11,"less_than_or_equal","","",35,[[]]],[11,"not_equal_bm","","",35,[[]]],[11,"equal_bm","","",35,[[]]],[11,"greater_than_bm","","",35,[[]]],[11,"greater_than_or_equal_bm","","",35,[[]]],[11,"less_than_bm","","",35,[[]]],[11,"less_than_or_equal_bm","","",35,[[]]],[11,"max_val","","Return largest value that can be represented.",36,[[]]],[11,"wrap_add","","",36,[[]]],[11,"wrap_sub","","",36,[[]]],[11,"wrap_mul","","",36,[[]]],[11,"wrap_div","","",36,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",36,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",36,[[]]],[11,"divide","","Division.",36,[[]]],[11,"inv","","Invert self modulo n.",36,[[]]],[11,"equal","","",36,[[]]],[11,"greater_than","","",36,[[]]],[11,"greater_than_or_qual","","",36,[[]]],[11,"less_than","","",36,[[]]],[11,"less_than_or_equal","","",36,[[]]],[11,"not_equal_bm","","",36,[[]]],[11,"equal_bm","","",36,[[]]],[11,"greater_than_bm","","",36,[[]]],[11,"greater_than_or_equal_bm","","",36,[[]]],[11,"less_than_bm","","",36,[[]]],[11,"less_than_or_equal_bm","","",36,[[]]],[11,"max_val","unsafe_hacspec_examples::sha2","Return largest value that can be represented.",40,[[]]],[11,"wrap_add","","",40,[[]]],[11,"wrap_sub","","",40,[[]]],[11,"wrap_mul","","",40,[[]]],[11,"wrap_div","","",40,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",40,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",40,[[]]],[11,"divide","","Division.",40,[[]]],[11,"inv","","Invert self modulo n.",40,[[]]],[11,"equal","","",40,[[]]],[11,"greater_than","","",40,[[]]],[11,"greater_than_or_qual","","",40,[[]]],[11,"less_than","","",40,[[]]],[11,"less_than_or_equal","","",40,[[]]],[11,"not_equal_bm","","",40,[[]]],[11,"equal_bm","","",40,[[]]],[11,"greater_than_bm","","",40,[[]]],[11,"greater_than_or_equal_bm","","",40,[[]]],[11,"less_than_bm","","",40,[[]]],[11,"less_than_or_equal_bm","","",40,[[]]],[11,"max_val","","Return largest value that can be represented.",41,[[]]],[11,"wrap_add","","",41,[[]]],[11,"wrap_sub","","",41,[[]]],[11,"wrap_mul","","",41,[[]]],[11,"wrap_div","","",41,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",41,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",41,[[]]],[11,"divide","","Division.",41,[[]]],[11,"inv","","Invert self modulo n.",41,[[]]],[11,"equal","","",41,[[]]],[11,"greater_than","","",41,[[]]],[11,"greater_than_or_qual","","",41,[[]]],[11,"less_than","","",41,[[]]],[11,"less_than_or_equal","","",41,[[]]],[11,"not_equal_bm","","",41,[[]]],[11,"equal_bm","","",41,[[]]],[11,"greater_than_bm","","",41,[[]]],[11,"greater_than_or_equal_bm","","",41,[[]]],[11,"less_than_bm","","",41,[[]]],[11,"less_than_or_equal_bm","","",41,[[]]],[11,"max_val","","Return largest value that can be represented.",42,[[]]],[11,"wrap_add","","",42,[[]]],[11,"wrap_sub","","",42,[[]]],[11,"wrap_mul","","",42,[[]]],[11,"wrap_div","","",42,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",42,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",42,[[]]],[11,"divide","","Division.",42,[[]]],[11,"inv","","Invert self modulo n.",42,[[]]],[11,"equal","","",42,[[]]],[11,"greater_than","","",42,[[]]],[11,"greater_than_or_qual","","",42,[[]]],[11,"less_than","","",42,[[]]],[11,"less_than_or_equal","","",42,[[]]],[11,"not_equal_bm","","",42,[[]]],[11,"equal_bm","","",42,[[]]],[11,"greater_than_bm","","",42,[[]]],[11,"greater_than_or_equal_bm","","",42,[[]]],[11,"less_than_bm","","",42,[[]]],[11,"less_than_or_equal_bm","","",42,[[]]],[11,"max_val","","Return largest value that can be represented.",43,[[]]],[11,"wrap_add","","",43,[[]]],[11,"wrap_sub","","",43,[[]]],[11,"wrap_mul","","",43,[[]]],[11,"wrap_div","","",43,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",43,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",43,[[]]],[11,"divide","","Division.",43,[[]]],[11,"inv","","Invert self modulo n.",43,[[]]],[11,"equal","","",43,[[]]],[11,"greater_than","","",43,[[]]],[11,"greater_than_or_qual","","",43,[[]]],[11,"less_than","","",43,[[]]],[11,"less_than_or_equal","","",43,[[]]],[11,"not_equal_bm","","",43,[[]]],[11,"equal_bm","","",43,[[]]],[11,"greater_than_bm","","",43,[[]]],[11,"greater_than_or_equal_bm","","",43,[[]]],[11,"less_than_bm","","",43,[[]]],[11,"less_than_or_equal_bm","","",43,[[]]],[11,"max_val","","Return largest value that can be represented.",44,[[]]],[11,"wrap_add","","",44,[[]]],[11,"wrap_sub","","",44,[[]]],[11,"wrap_mul","","",44,[[]]],[11,"wrap_div","","",44,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",44,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",44,[[]]],[11,"divide","","Division.",44,[[]]],[11,"inv","","Invert self modulo n.",44,[[]]],[11,"equal","","",44,[[]]],[11,"greater_than","","",44,[[]]],[11,"greater_than_or_qual","","",44,[[]]],[11,"less_than","","",44,[[]]],[11,"less_than_or_equal","","",44,[[]]],[11,"not_equal_bm","","",44,[[]]],[11,"equal_bm","","",44,[[]]],[11,"greater_than_bm","","",44,[[]]],[11,"greater_than_or_equal_bm","","",44,[[]]],[11,"less_than_bm","","",44,[[]]],[11,"less_than_or_equal_bm","","",44,[[]]]],"p":[[3,"Block"],[3,"Word"],[3,"RoundKey"],[3,"Nonce"],[3,"SBox"],[3,"RCon"],[3,"Bytes144"],[3,"Bytes176"],[3,"Bytes208"],[3,"Bytes240"],[3,"Key128"],[3,"Key256"],[4,"AesVariant"],[3,"Block"],[3,"Key"],[3,"Tag"],[3,"DigestB"],[3,"Sigma"],[3,"State"],[3,"DoubleState"],[3,"Counter"],[4,"BlakeVariant"],[8,"HasIV"],[3,"SerializedPoint"],[3,"SerializedScalar"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"ScalarCanvas"],[3,"Scalar"],[3,"Jacobian"],[3,"Affine"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"Scalar"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"Scalar"],[3,"Parameters"],[3,"Poly"],[4,"Version"],[3,"Block"],[3,"OpTableType"],[3,"Digest"],[3,"RoundConstantsTable"],[3,"Hash"],[4,"Variant"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);